
DELETE FROM formularios WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM contenedores WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM distribucion WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM distribucion_cells WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM eventos WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM eventos_formularios WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM upload_relacionados WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM componentes_propiedades  WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM itemsradio  WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM itemscombo  WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM itemscombo_campocarga WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM campocarga_grid  WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM gridcolumnas WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
DELETE FROM componentes WHERE PROCESO='ABMCL BD Medios de Elevación' AND VERSION='1.0';
INSERT INTO formularios(NOMBRE,TITULO,ACT_DEF_UUID_,W,W_M,H,H_M,TIPO_MODAL,ACTIVO,PRINCIPAL,PROCESO,VERSION,SIZABLE,CLOSABLE,EDITABLE,TAREA_NAME) VALUES('Form_ABMCL_MDE','ABCMCL BD Medios de Elevación',5548687659736002843,'99','%','99','%','Embed',1,1,'ABMCL BD Medios de Elevación','1.0','0','0',1,'ABMCL BD Medios de Elevación');
SET @vIdFormulario = LAST_INSERT_ID();
INSERT INTO eventos_formularios (FORMULARIOS_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)  VALUES(@vIdFormulario,'3','import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n\n//CONTENEDORES\nGroupbox cont_ABM_EmpresaM=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_EmpresaM\");\nGroupbox cont_CL_EmpresasM=(Groupbox) sup.getInstanciaComponente(\"cont_CL_EmpresasM\");\nGroupbox cont_ABM_Personas=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_Personas\");\nGroupbox cont_CL_Personas=(Groupbox) sup.getInstanciaComponente(\"cont_CL_Personas\");\nGroupbox cont_ABM_Inmuebles=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_Inmuebles\");\nGroupbox cont_CL_Inmuebles=(Groupbox) sup.getInstanciaComponente(\"cont_CL_Inmuebles\");\nGroupbox cont_ABM_ME=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_ME\");\nGroupbox cont_CL_MDE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_MDE\");\nGroupbox cont_ABM_RevisoresE=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_RevisoresE\");\nGroupbox cont_CL_RevisoresE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_RevisoresE\");\nGroupbox cont_ABM_HDE=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_HDE\");\nGroupbox cont_CL_HDE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_HDE\");\nGroupbox cont_ABM_HDMDE=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_HDMDE\");\nGroupbox cont_CL_HMDE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_HMDE\");\nGroupbox cont_Trazabilidad=(Groupbox) sup.getInstanciaComponente(\"cont_Trazabilidad\");\nGroupbox cont_Botones=(Groupbox) sup.getInstanciaComponente(\"cont_Botones\");\n\n//GRILLA\nListbox comp_GRID_empresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_empresas\");\n\n//TXT\nTextbox comp_TXT_empRazonSocial=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocial\");\nTextbox comp_TXT_empCUIT=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUIT\");\nTextbox comp_TXT_empDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empDomic\");\nTextbox comp_TXT_empTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empTelefono\");\nTextbox comp_TXT_empCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCorreo\");\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\n\n//CHK\nCheckbox comp_CHK_empActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_empActiva\");\nCheckbox comp_CHK_perActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perActiva\");\nCheckbox comp_CHK_inmActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_inmActivo\");\nCheckbox comp_CHK_mdeActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdeActivo\");\nCheckbox comp_CHK_revActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revActivo\");\nCheckbox comp_CHK_ehaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaActivo\");\nCheckbox comp_CHK_mhaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaActivo\");\n\n//CMB\nCombobox comp_CMB_opciones=(Combobox) sup.getInstanciaComponente(\"comp_CMB_opciones\");\nCombobox comp_CMB_empOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_empOpcRep\");\nCombobox comp_CMB_perOpcCarga=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcCarga\");\nCombobox comp_CMB_perEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMant\");\nCombobox comp_CMB_perOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcRep\");\nCombobox comp_CMB_perTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perTipoDocRep\");\nCombobox comp_CMB_perEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMantRep\");\nCombobox comp_CMB_inmOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmOpcReporte\");\nCombobox comp_CMB_mdeMaquina=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaquina\");\nCombobox comp_CMB_mdeEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMant\");\nCombobox comp_CMB_mdeOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeOpcReporte\");\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_revOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revOpcRep\");\nCombobox comp_CMB_revTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revTipoDocRep\");\nCombobox comp_CMB_ehaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMant\");\nCombobox comp_CMB_ehaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaRevisor\");\nCombobox comp_CMB_ehaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaOpcReporte\");\nCombobox comp_CMB_ehaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMantRep\");\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\nCombobox comp_CMB_mhaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaRevisor\");\nCombobox comp_CMB_mhaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaOpcReporte\");\nCombobox comp_CMB_mhaPadEncRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaPadEncRep\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\nCombobox comp_CMB_mhaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMantRep\");\nCombobox comp_CMB_mhaMedioElevRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElevRep\");\nCombobox comp_CMB_trzOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_trzOpcReporte\");\nCombobox comp_CMB_trzUsuarioRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_trzUsuarioRep\");\n\n//BTN\nButton comp_BTN_empAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_empAgregar\");\nButton comp_BTN_empEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_empEditar\");\nButton comp_BTN_empCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_empCancelar\");\n\n\n//COMPONENTES PARA GENERAR REPORTES\n//EMPRESAS\nCombobox comp_CMB_empOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_empOpcRep\");\nTextbox comp_TXT_empRazonSocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocRep\");\nTextbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\nButton comp_BTN_empGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_empGenRep\");\n\n//PERSONAS\nCombobox comp_CMB_perOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcRep\");\nTextbox comp_TXT_NumPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_NumPadronRep\");\nTextbox comp_TXT_perNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDocRep\");\nCombobox comp_CMB_perEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMantRep\");\nCombobox comp_CMB_perTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perTipoDocRep\");\nButton comp_BTN_perGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_perGenRep\");\n\n//INMUEBLES\nCombobox comp_CMB_inmDistritoRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistritoRep\");\nTextbox comp_TXT_inmPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadronRep\");\nButton comp_BTN_inmGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_inmGenRep\");\n\n//MEDIOS DE ELEVACION\nCombobox comp_CMB_mdeOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeOpcReporte\");\nTextbox comp_TXT_mdePadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadronRep\");\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\nButton comp_BTN_mdeGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeGenRep\");\n\n//REVISORES\nCombobox comp_CMB_revOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revOpcRep\");\nCombobox comp_CMB_revTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revTipoDocRep\");\nTextbox comp_TXT_revNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDocRep\");\nButton comp_BTN_revGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_revGenRep\");\n\n//HABILITACION DE EMPRESAS\nCombobox comp_CMB_ehaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaOpcReporte\");\nCombobox comp_CMB_ehaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMantRep\");\nDatebox comp_DA_ehaDdeFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaDdeFechaVigRep\");\nDatebox comp_DA_ehaHtaFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaHtaFechaVigRep\");\nButton comp_BTN_ehaGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaGenRep\");\n\n//HABILITACION MEDIOS DE ELEVACION\nCombobox comp_CMB_mhaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaOpcReporte\");\nDatebox comp_DA_mhadesdeRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhadesdeRep\");\nDatebox comp_DA_mhahastaRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhahastaRep\");\nTextbox comp_TXT_mhaDomInmRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaDomInmRep\");\nButton comp_BTN_mhaBusPadRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaBusPadRep\");\nCombobox comp_CMB_mhaPadEncRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaPadEncRep\");\nTextbox comp_TXT_mhaPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadronRep\");\nCombobox comp_CMB_mhaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMantRep\");\nCombobox comp_CMB_mhaMedioElevRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElevRep\");\nButton comp_BTN_mhaGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaGenRep\");\n\n\n\n\n/****************************LÓGICA****************************/\n//DESACTIVAR COMPONENTES\n//EMPRESA\ncomp_TXT_empCUITRep.setDisabled(true);\ncomp_TXT_empRazonSocRep.setDisabled(true);\ncomp_BTN_empGenRep.setDisabled(true);\n//PERSONAS\ncomp_TXT_NumPadronRep.setDisabled(true);\ncomp_TXT_perNumDocRep.setDisabled(true);\ncomp_CMB_perEmpMantRep.setDisabled(true);\ncomp_CMB_perTipoDocRep.setDisabled(true);\ncomp_BTN_perGenRep.setDisabled(true);\n//INMUEBLES\ncomp_CMB_inmDistritoRep.setDisabled(true);\ncomp_TXT_inmPadronRep.setDisabled(true);\ncomp_BTN_inmGenRep.setDisabled(true);\n//MEDIOS DE ELEVACION\ncomp_TXT_mdePadronRep.setDisabled(true);\ncomp_CMB_mdeMaqRep.setDisabled(true);\ncomp_CMB_mdeEmpMantRep.setDisabled(true);\ncomp_CMB_mdeDistritoRepME.setDisabled(true);\ncomp_BTN_mdeGenRep.setDisabled(true);\n//REVISORES\ncomp_CMB_revTipoDocRep.setDisabled(true);\ncomp_TXT_revNumDocRep.setDisabled(true);\ncomp_BTN_revGenRep.setDisabled(true);\n//HABILITACION DE EMPRESAS\ncomp_CMB_ehaEmpMantRep.setDisabled(true);\ncomp_DA_ehaDdeFechaVigRep.setDisabled(true);\ncomp_DA_ehaHtaFechaVigRep.setDisabled(true);\ncomp_BTN_ehaGenRep.setDisabled(true);\n//HABILITACION DE MEDIOS DE ELEVACION\ncomp_DA_mhadesdeRep.setDisabled(true);\ncomp_DA_mhahastaRep.setDisabled(true);\ncomp_TXT_mhaDomInmRep.setDisabled(true);\ncomp_BTN_mhaBusPadRep.setDisabled(true);\ncomp_CMB_mhaPadEncRep.setDisabled(true);\ncomp_TXT_mhaPadronRep.setDisabled(true);\ncomp_CMB_mhaEmpMantRep.setDisabled(true);\ncomp_CMB_mhaMedioElevRep.setDisabled(true);\ncomp_BTN_mhaGenRep.setDisabled(true);\n\n\n\n//OCULTAR Contenedores\ncont_ABM_EmpresaM.setVisible(false);\ncont_CL_EmpresasM.setVisible(false);\ncont_ABM_Personas.setVisible(false);\ncont_CL_Personas.setVisible(false);\ncont_ABM_Inmuebles.setVisible(false);\ncont_CL_Inmuebles.setVisible(false);\ncont_ABM_ME.setVisible(false);\ncont_CL_MDE.setVisible(false);\ncont_ABM_RevisoresE.setVisible(false);\ncont_CL_RevisoresE.setVisible(false);\ncont_ABM_HDE.setVisible(false);\ncont_CL_HDE.setVisible(false);\ncont_ABM_HDMDE.setVisible(false);\ncont_CL_HMDE.setVisible(false);\ncont_Trazabilidad.setVisible(false);\ncont_Botones.setVisible(false);\n\n\n//Activar Checks\n//Altas, Bajas y Modificaciones de Empresas de Mantenimiento\ncomp_CHK_empActiva.setChecked(true);\n\n//Altas, Bajas y Modificaciones de Empresas de Mantenimiento\ncomp_CHK_perActiva.setChecked(true);\n\n//Altas, Bajas y Modificaciones de Inmubeles \ncomp_CHK_inmActivo.setChecked(true);\n\n//Altas, Bajas y Modificaciones de Medios de Elevación\ncomp_CHK_mdeActivo.setChecked(true);\n\n//Altas, Bajas y Modificaciones de Revisores Electrocténica\ncomp_CHK_revActivo.setChecked(true);\n\n//Altas, Bajas y Modificaciones de Habilitación de Empresas\ncomp_CHK_ehaActivo.setChecked(true);\n\n//Altas, Bajas y Modificaciones de Habilitación De Medios De Elevación\ncomp_CHK_mhaActivo.setChecked(true);\n\n//Codigo Desactivar PERSONA\ncomp_TXT_perPadron.setDisabled(true);\ncomp_CMB_perEmpMant.setDisabled(true);\n\n\n//DESACTIVAR COMBOS\ncomp_CMB_opciones.setReadonly(true);\ncomp_CMB_empOpcRep.setReadonly(true);\ncomp_CMB_perOpcCarga.setReadonly(true);\ncomp_CMB_perEmpMant.setReadonly(true);\ncomp_CMB_perOpcRep.setReadonly(true);\ncomp_CMB_perTipoDocRep.setReadonly(true);\ncomp_CMB_perEmpMantRep.setReadonly(true);\ncomp_CMB_inmOpcReporte.setReadonly(true);\ncomp_CMB_mdeMaquina.setReadonly(true);\ncomp_CMB_mdeEmpMant.setReadonly(true);\ncomp_CMB_mdeOpcReporte.setReadonly(true);\ncomp_CMB_mdeMaqRep.setReadonly(true);\ncomp_CMB_mdeEmpMantRep.setReadonly(true);\ncomp_CMB_revOpcRep.setReadonly(true);\ncomp_CMB_revTipoDocRep.setReadonly(true);\ncomp_CMB_ehaEmpMant.setReadonly(true);\ncomp_CMB_ehaRevisor.setReadonly(true);\ncomp_CMB_ehaOpcReporte.setReadonly(true);\ncomp_CMB_ehaEmpMantRep.setReadonly(true);\ncomp_CMB_mhaMedioElev.setReadonly(true);\ncomp_CMB_mhaTecnico.setReadonly(true);\ncomp_CMB_mhaRevisor.setReadonly(true);\ncomp_CMB_mhaOpcReporte.setReadonly(true);\ncomp_CMB_mhaEmpMant.setReadonly(true);\ncomp_CMB_mhaEmpMantRep.setReadonly(true);\ncomp_CMB_mhaMedioElevRep.setReadonly(true);\ncomp_CMB_trzOpcReporte.setReadonly(true);\ncomp_CMB_trzUsuarioRep.setReadonly(true);\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0');
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_Requisitos','Requisitos',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',1,'',8356,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8356,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_Opciones','Opciones',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',2,'',8357,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8357,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_opciones',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px;margin-top: 25px;;margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_opciones',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_opciones','Seleccionar ABMCL:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_opciones','',@vIdDistribucionCells,'Combobox','240','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.Component;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport org.zkoss.zul.Paging;\n\n\nModeloComponente sup = new ModeloComponente();\n\n\n//CMB\nCombobox comp_CMB_opciones=(Combobox) sup.getInstanciaComponente(\"comp_CMB_opciones\");\n\n//CONTENEDORES\nGroupbox cont_ABM_EmpresaM=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_EmpresaM\");\nGroupbox cont_CL_EmpresasM=(Groupbox) sup.getInstanciaComponente(\"cont_CL_EmpresasM\");\nGroupbox cont_ABM_Personas=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_Personas\");\nGroupbox cont_CL_Personas=(Groupbox) sup.getInstanciaComponente(\"cont_CL_Personas\");\nGroupbox cont_ABM_Inmuebles=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_Inmuebles\");\nGroupbox cont_CL_Inmuebles=(Groupbox) sup.getInstanciaComponente(\"cont_CL_Inmuebles\");\nGroupbox cont_ABM_ME=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_ME\");\nGroupbox cont_CL_MDE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_MDE\");\nGroupbox cont_ABM_RevisoresE=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_RevisoresE\");\nGroupbox cont_CL_RevisoresE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_RevisoresE\");\nGroupbox cont_ABM_HDE=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_HDE\");\nGroupbox cont_CL_HDE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_HDE\");\nGroupbox cont_ABM_HDMDE=(Groupbox) sup.getInstanciaComponente(\"cont_ABM_HDMDE\");\nGroupbox cont_CL_HMDE=(Groupbox) sup.getInstanciaComponente(\"cont_CL_HMDE\");\nGroupbox cont_Trazabilidad=(Groupbox) sup.getInstanciaComponente(\"cont_Trazabilidad\");\nGroupbox cont_Botones=(Groupbox) sup.getInstanciaComponente(\"cont_Botones\");\n\n//COMPONENTES DE ABM EMPRESA DE MANTENIMIENTO\n//GRILLA\nListbox comp_GRID_empresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_empresas\");\n//TEXTBOX\nTextbox comp_TXT_empRazonSocial=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocial\");\nTextbox comp_TXT_empCUIT=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUIT\");\nTextbox comp_TXT_empDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empDomic\");\nTextbox comp_TXT_empTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empTelefono\");\nTextbox comp_TXT_empCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCorreo\");\nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\n\n//CHEK\nCheckbox comp_CHK_empActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_empActiva\");\nCheckbox comp_CHK_perEsSocio=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsSocio\");\nCheckbox comp_CHK_perEsRptte=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsRptte\");\nCheckbox comp_CHK_perEsAdmCon=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsAdmCon\");\nCheckbox comp_CHK_perEsCoprop=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsCoprop\");\n//BTN\nButton comp_BTN_empAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_empAgregar\");\nButton comp_BTN_empEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_empEditar\");\nButton comp_BTN_empCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_empCancelar\");\n\n\n//COMPONENTES DE ABM PERSONAS\n//GRILLA\nListbox comp_GRID_personas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_personas\");\n//CMB\nCombobox comp_CMB_perOpcCarga=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcCarga\");\nCombobox comp_CMB_perEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMant\");\n//TXT\nTextbox comp_TXT_perIDInmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perIDInmueble\");\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\nTextbox comp_TXT_perApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perApellido\");\nTextbox comp_TXT_perNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNombre\");\nTextbox comp_TXT_perCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCUIL\");\nTextbox comp_TXT_perTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTipoDoc\");\nTextbox comp_TXT_perNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDoc\");\nTextbox comp_TXT_perTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTelefono\");\nTextbox comp_TXT_perCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCorreo\");\nTextbox comp_TXT_perDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perDomic\");\n\n//CHEK\nCheckbox comp_CHK_perEsSocio=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsSocio\");\nCheckbox comp_CHK_perEsRptte=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsRptte\");\nCheckbox comp_CHK_perEsAdmCon=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsAdmCon\");\nCheckbox comp_CHK_perEsCoprop=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsCoprop\");\nCheckbox comp_CHK_perActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perActiva\");\n//BTN\nButton comp_BTN_perAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_perAgregar\");\nButton comp_BTN_perEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_perEditar\");\nButton comp_BTN_perCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_perCancelar\");\n\n//COMPONENTES DE ABM INMUEBLES\n//GRILLA\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n//TXT\nTextbox comp_TXT_inmPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadron\");\nTextbox comp_TXT_inmDomicilio=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmDomicilio\");\nCombobox comp_CMB_inmDistrito=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistrito\");\nCombobox comp_CMB_inmDestino=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDestino\");\n//CHEK\nCheckbox comp_CHK_inmActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_inmActivo\");\n//BTN\nButton comp_BTN_inmAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmAgregar\");\nButton comp_BTN_inmEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmEditar\");\nButton comp_BTN_inmCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmCancelar\");\n\n\n//COMPONENTES DE ABM MEDIOS DE ELEVACION\n//GRILLA\nListbox comp_GRID_medioselevacion=(Listbox) sup.getInstanciaComponente(\"comp_GRID_medioselevacion\");\n\n//CMB\nCombobox comp_CMB_mdeMaquina=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaquina\");\nCombobox comp_CMB_mdeEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMant\");\n\n//TXT\nTextbox comp_TXT_mdePadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadron\");\nTextbox comp_TXT_mde_IDinmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mde_IDinmueble\");\nTextbox comp_TXT_mdeExptePlanos=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeExptePlanos\");\nTextbox comp_TXT_mdeUbicacion=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeUbicacion\");\nTextbox comp_TXT_mdeTipo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeTipo\");\nTextbox comp_TXT_mdeNiveles=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeNiveles\");\n\n//LABEL\nLabel comp_LA_mdeInmDireccion=(Label) sup.getInstanciaComponente(\"comp_LA_mdeInmDireccion\");\n\n//CHEK\nCheckbox comp_CHK_mdePlanosAprob=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdePlanosAprob\");\nCheckbox comp_CHK_mdeActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdeActivo\");\n\n//BTN\nButton comp_BTN_mdeAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeAgregar\");\nButton comp_BTN_mdeEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeEditar\");\nButton comp_BTN_mdeCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeCancelar\");\n\n\n//COMPONENTES DE ABM REVISORES\n//GRILLA\nListbox comp_GRID_revisores=(Listbox) sup.getInstanciaComponente(\"comp_GRID_revisores\");\n\n//TXT\nTextbox comp_TXT_revApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revApellido\");\nTextbox comp_TXT_revNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNombre\");\nTextbox comp_TXT_revCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCUIL\");\nTextbox comp_TXT_revTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTipoDoc\");\nTextbox comp_TXT_revNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDoc\");\nTextbox comp_TXT_revTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTelefono\");\nTextbox comp_TXT_revCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCorreo\");\nTextbox comp_TXT_revLoginSayges=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revLoginSayges\");\n\n//CHEK\nCheckbox comp_CHK_revPerAME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAME\");\nCheckbox comp_CHK_revPerRME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerRME\");\nCheckbox comp_CHK_revPerAEM=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAEM\");\nCheckbox comp_CHK_revActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revActivo\");\n\n//BTN\nButton comp_BTN_revAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_revAgregar\");\nButton comp_BTN_revEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_revEditar\");\nButton comp_BTN_revCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_revCancelar\");\n\n//DIV / BUTTON\nDiv dis_Padron=(Div) sup.getInstanciaComponente(\"dis_Padron\");\nDiv dis_Domi_Dist_Dest=(Div) sup.getInstanciaComponente(\"dis_Domi_Dist_Dest\");\nDiv dis_Inmueble_Activo=(Div) sup.getInstanciaComponente(\"dis_Inmueble_Activo\");\nButton comp_BTN_inmAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmAgregar\");\nButton comp_BTN_inmEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmEditar\");\nButton comp_BTN_inmCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmCancelar\");\n\n\n//COMPONENTES DE ABM HABILITACION DE EMPRESAS\n//GRILLA\nListbox comp_GRID_habilitacionesempresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesempresas\");\n\n//DATE\nDatebox comp_DA_ehaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaHab\");\nDatebox comp_DA_ehaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaVtoHab\");\n\n//CMB\nCombobox comp_CMB_ehaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMant\");\nCombobox comp_CMB_ehaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaRevisor\");\n\n//TXT\nTextbox comp_TXT_ehaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ehaExpte\");\n\n//CHEK\nCheckbox comp_CHK_ehaHabilitada=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaHabilitada\");\nCheckbox comp_CHK_ehaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaActivo\");\n\n//BTN\nButton comp_BTN_ehaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaAgregar\");\nButton comp_BTN_ehaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaEditar\");\nButton comp_BTN_ehaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaCancelar\");\n\n\n\n//COMPONENTES DE ABM HABILITACION DE MEDIOS DE ELEVACION\n\n//GRILLA\nListbox comp_GRID_habilitacionesmedios=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesmedios\");\n\n//CMB\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\nCombobox comp_CMB_mhaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaRevisor\");\n\n//TXT\nTextbox comp_TXT_mhaPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadron\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant\");\nTextbox comp_TXT_mhaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaExpte\");\n\n//DATEBOX\nDatebox comp_DA_mhaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaHab\");\nDatebox comp_DA_mhaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaVtoHab\");\nDatebox comp_DA_mhaFechaPago=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaPago\");\nDatebox comp_DA_mhaFechaInspec=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaInspec\");\n\n//CHEK\nCheckbox comp_CHK_mhaHabilitado=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaHabilitado\");\nCheckbox comp_CHK_mhaObleaEntreg=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaObleaEntreg\");\nCheckbox comp_CHK_mhaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaActivo\");\n\n//BTN\nButton comp_BTN_mhaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaAgregar\");\nButton comp_BTN_mhaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaEditar\");\nButton comp_BTN_mhaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaCancelar\");\n\n//COMPONENTES PARA GENERAR REPORTES\n//EMPRESAS\nCombobox comp_CMB_empOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_empOpcRep\");\nTextbox comp_TXT_empRazonSocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocRep\");\nTextbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\nButton comp_BTN_empGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_empGenRep\");\n\n//PERSONAS\nCombobox comp_CMB_perOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcRep\");\nTextbox comp_TXT_NumPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_NumPadronRep\");\nTextbox comp_TXT_perNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDocRep\");\nCombobox comp_CMB_perEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMantRep\");\nCombobox comp_CMB_perTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perTipoDocRep\");\nButton comp_BTN_perGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_perGenRep\");\n\n//INMUEBLES\nCombobox comp_CMB_inmOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmOpcReporte\");\nCombobox comp_CMB_inmDistritoRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistritoRep\");\nTextbox comp_TXT_inmPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadronRep\");\nButton comp_BTN_inmGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_inmGenRep\");\n\n//MEDIOS DE ELEVACION\nCombobox comp_CMB_mdeOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeOpcReporte\");\nTextbox comp_TXT_mdePadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadronRep\");\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\nButton comp_BTN_mdeGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeGenRep\");\n\n//REVISORES\nCombobox comp_CMB_revOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revOpcRep\");\nCombobox comp_CMB_revTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revTipoDocRep\");\nTextbox comp_TXT_revNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDocRep\");\nButton comp_BTN_revGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_revGenRep\");\n\n//HABILITACION DE EMPRESAS\nCombobox comp_CMB_ehaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaOpcReporte\");\nCombobox comp_CMB_ehaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMantRep\");\nDatebox comp_DA_ehaDdeFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaDdeFechaVigRep\");\nDatebox comp_DA_ehaHtaFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaHtaFechaVigRep\");\nButton comp_BTN_ehaGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaGenRep\");\n\n//HABILITACION MEDIOS DE ELEVACION\nCombobox comp_CMB_mhaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaOpcReporte\");\nDatebox comp_DA_mhadesdeRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhadesdeRep\");\nDatebox comp_DA_mhahastaRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhahastaRep\");\nTextbox comp_TXT_mhaDomInmRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaDomInmRep\");\nButton comp_BTN_mhaBusPadRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaBusPadRep\");\nCombobox comp_CMB_mhaPadEncRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaPadEncRep\");\nTextbox comp_TXT_mhaPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadronRep\");\nCombobox comp_CMB_mhaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMantRep\");\nCombobox comp_CMB_mhaMedioElevRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElevRep\");\nButton comp_BTN_mhaGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaGenRep\");\n\n\n\n\n\n\n\ncomp_CMB_mhaEmpMant.setDisabled(true);\n// Crear instancia del calendario y obtener la fecha actual\nCalendar calendario = Calendar.getInstance();\nDate fechaActual = calendario.getTime();\n\n\n//**************************************** METODOS ****************************************\n\n//METODO PARA REESTABLECER LOS BOTONES DE CADA OPCION\nprivate void reestablecerBotonesExcepto(String excepto) {\n    if (!excepto.equals(\"Empresas de Mantenimiento\")) {\n        //EMPRESAS\n        comp_CHK_empActiva.setChecked(true);\n        comp_BTN_empAgregar.setDisabled(false);\n        comp_BTN_empEditar.setLabel(\"Editar\");\n        comp_BTN_empEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n    }\n\n    if (!excepto.equals(\"Personas\")) {\n        //PERSONA\n        comp_CHK_perActiva.setChecked(true);\n        comp_BTN_perAgregar.setDisabled(false);\n        comp_BTN_perEditar.setLabel(\"Editar\");\n        comp_BTN_perEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n    }\n\n    if (!excepto.equals(\"Inmuebles\")) {\n        //INMUEBLE\n        comp_CHK_inmActivo.setChecked(true);\n        comp_BTN_inmAgregar.setDisabled(false);\n        comp_BTN_inmEditar.setLabel(\"Editar\");\n        comp_BTN_inmEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n    }\n\n    if (!excepto.equals(\"Medios de Elevacion\")) {\n        //MDE\n        comp_CHK_mdeActivo.setChecked(true);\n        comp_BTN_mdeAgregar.setDisabled(false);\n        comp_BTN_mdeEditar.setLabel(\"Editar\");\n        comp_BTN_mdeEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n    }\n\n    if (!excepto.equals(\"Revisores DOP y Permisos\")) {\n        //REVISOR\n        comp_CHK_revActivo.setChecked(true);\n        comp_BTN_revAgregar.setDisabled(false);\n        comp_BTN_revEditar.setLabel(\"Editar\");\n        comp_BTN_revEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n    }\n\n    if (!excepto.equals(\"Habilitación de Empresas\")) {\n        //HABILITACION DE EMPRESAS\n        comp_CHK_ehaActivo.setChecked(true);\n        comp_BTN_ehaAgregar.setDisabled(false);\n        comp_BTN_ehaEditar.setLabel(\"Editar\");\n        comp_BTN_ehaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n    }\n\n    if (!excepto.equals(\"Habilitación de Medios de Elevación\")) {\n        //HABILITACION MEDIOS DE ELEVACION\n        comp_CHK_mhaActivo.setChecked(true);\n        comp_BTN_mhaAgregar.setDisabled(false);\n        comp_BTN_mhaEditar.setLabel(\"Editar\");\n        comp_BTN_mhaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n    }\n}\n\n//METODO PARA LIMPIAR LAS GRILLAS\nprivate void limpiarGrillasExcepto(String excepto) {\n    \n    while (!comp_GRID_empresas.getItems().isEmpty() || \n           !comp_GRID_personas.getItems().isEmpty() || \n           !comp_GRID_inmuebles.getItems().isEmpty() || \n           !comp_GRID_medioselevacion.getItems().isEmpty() || \n           !comp_GRID_revisores.getItems().isEmpty() || \n           !comp_GRID_habilitacionesempresas.getItems().isEmpty() || \n           !comp_GRID_habilitacionesmedios.getItems().isEmpty()) {\n       \n        // Limpiar Grilla EMPRESAS excepto si es la grilla \"Empresas de Mantenimiento\"\n        if (!comp_GRID_empresas.getItems().isEmpty() && !excepto.equals(\"Empresas de Mantenimiento\")) {\n            comp_GRID_empresas.removeChild(comp_GRID_empresas.getItems().get(0));\n        }\n        \n        // Limpiar Grilla PERSONAS excepto si es la grilla \"Personas\"\n        if (!comp_GRID_personas.getItems().isEmpty() && !excepto.equals(\"Personas\")) {\n            comp_GRID_personas.removeChild(comp_GRID_personas.getItems().get(0));\n        }\n        \n        // Limpiar Grilla INMUEBLES excepto si es la grilla \"Inmuebles\"\n        if (!comp_GRID_inmuebles.getItems().isEmpty() && !excepto.equals(\"Inmuebles\")) {\n            comp_GRID_inmuebles.removeChild(comp_GRID_inmuebles.getItems().get(0));\n        }\n        \n        // Limpiar Grilla MEDIOS DE ELEVACION excepto si es la grilla \"Medios de Elevacion\"\n        if (!comp_GRID_medioselevacion.getItems().isEmpty() && !excepto.equals(\"Medios de Elevacion\")) {\n            comp_GRID_medioselevacion.removeChild(comp_GRID_medioselevacion.getItems().get(0));\n        }\n        \n        // Limpiar Grilla REVISORES excepto si es la grilla \"Revisores\"\n        if (!comp_GRID_revisores.getItems().isEmpty() && !excepto.equals(\"Revisores\")) {\n            comp_GRID_revisores.removeChild(comp_GRID_revisores.getItems().get(0));\n        }\n        \n        // Limpiar Grilla HABILITACION DE EMPRESAS excepto si es la grilla \"Habilitación de Empresas\"\n        if (!comp_GRID_habilitacionesempresas.getItems().isEmpty() && !excepto.equals(\"Habilitación de Empresas\")) {\n            comp_GRID_habilitacionesempresas.removeChild(comp_GRID_habilitacionesempresas.getItems().get(0));\n        }\n        \n        // Limpiar Grilla HABILITACION DE MDE excepto si es la grilla \"Habilitación de Medios de Elevación\"\n        if (!comp_GRID_habilitacionesmedios.getItems().isEmpty() && !excepto.equals(\"Habilitación de Medios de Elevación\")) {\n            comp_GRID_habilitacionesmedios.removeChild(comp_GRID_habilitacionesmedios.getItems().get(0));\n        }\n    }\n}\n\n\n//METODO PARA DESACTIVAR CONTENEDORES\nprivate void desactivarContenedoresExcepto(String contenedorActivo1, String contenedorActivo2) {\n    // Lista de todos los nombres de contenedores\n    String[] contenedores = {\n        \"cont_ABM_EmpresaM\", \"cont_CL_EmpresasM\", \n        \"cont_ABM_Personas\", \"cont_CL_Personas\", \n        \"cont_ABM_Inmuebles\", \"cont_CL_Inmuebles\", \n        \"cont_ABM_ME\", \"cont_CL_MDE\", \n        \"cont_ABM_RevisoresE\", \"cont_CL_RevisoresE\", \n        \"cont_ABM_HDE\", \"cont_CL_HDE\", \n        \"cont_ABM_HDMDE\", \"cont_CL_HMDE\", \n        \"cont_Trazabilidad\"\n    };\n\n    // Iterar sobre todos los nombres de contenedores\n    for (String nombre : contenedores) {\n        Component contenedor = (Component) sup.getInstanciaComponente(nombre);\n        if (contenedor != null) {\n            if (nombre.equals(contenedorActivo1) || nombre.equals(contenedorActivo2)) {\n                contenedor.setVisible(true);\n            } else {\n                contenedor.setVisible(false);\n            }\n        }\n    }\n\n    // Asegúrate de que el contenedor de botones siempre esté activo\n    cont_Botones.setVisible(true);\n}\n\n\n//METODO RESTABLECER COMPONENTES\n//EMPRESA\nprivate void restablecerComponentesEmpresa() {\n    \n    //RESTABLECER COMPONENTES DE EMPRESA DE MANTENIMIENTO\n    String[] componentEmpresaM = {\"comp_TXT_empRazonSocRep\", \"comp_TXT_empCUITRep\"};\n            \n    for (String componentName : componentEmpresaM) {\n        \n        if (componentName.startsWith(\"comp_TXT\")) {\n            \n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n        \n        }\n    }\n    \n    //COMPONENTES DEL REPORTE\n    comp_CMB_empOpcRep.setSelectedIndex(0);\n    comp_BTN_empGenRep.setDisabled(true);\n    //comp_BTN_empGenRep.setDisabled(true);\n    String[] componentEmpresaMReport = {\"comp_TXT_empRazonSocRep\", \"comp_TXT_empCUITRep\"};\n            \n    for (String componentName : componentEmpresaMReport) {\n        \n        if (componentName.startsWith(\"comp_TXT\")) {\n            \n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n            textBox.setDisabled(true);\n        \n        }\n    }\n    \n}\n\n//PERSONA\nprivate void restablecerComponentesPersona() {\n    \n    //RESTABLECER COMPONENTES DE PERSONA\n    String[] componentPersona = {\"comp_CMB_perOpcCarga\", \"comp_CMB_perEmpMant\", \"comp_TXT_perPadron\", \"comp_TXT_perIDInmueble\", \"comp_TXT_perApellido\", \"comp_TXT_perNombre\", \"comp_TXT_perCUIL\", \n                                \"comp_TXT_perTipoDoc\", \"comp_TXT_perNumDoc\", \"comp_TXT_perTelefono\", \"comp_TXT_perCorreo\", \"comp_TXT_perDomic\", \"comp_CHK_perEsSocio\", \n                                \"comp_CHK_perEsRptte\", \"comp_CHK_perEsAdmCon\", \"comp_CHK_perEsCoprop\"};\n    \n    // Iterar sobre el array de nombres\n    for (String componentName : componentPersona) {\n        if (componentName.startsWith(\"comp_TXT\")) {\n            // Si es un Textbox\n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n\n        } else if (componentName.startsWith(\"comp_CMB\")) {\n            // Si es un Combobox\n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0); // Establece el primer elemento como seleccionado\n\n            //Limpiar CMB Empresa Mantenimiento\n            comp_CMB_perEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemEM = new Comboitem(\"-\");\n            defaultItemEM.setParent(comp_CMB_perEmpMant);\n            comp_CMB_perEmpMant.setSelectedIndex(0);\n\n        } else if (componentName.startsWith(\"comp_CHK\")) {\n            // Si es un Checkbox\n            Checkbox checkbox = (Checkbox) sup.getInstanciaComponente(componentName);\n            checkbox.setChecked(false); // Establece el valor del Checkbox como falso\n        }\n    } \n    \n    //COMPONENTES DEL REPORTE\n    comp_CMB_perOpcRep.setSelectedIndex(0);\n    comp_BTN_perGenRep.setDisabled(true);\n    String[] componentPersonaReport = {\"comp_TXT_NumPadronRep\", \"comp_TXT_perNumDocRep\", \"comp_CMB_perEmpMantRep\", \"comp_CMB_perTipoDocRep\"};\n    for (String componentName : componentPersonaReport) {\n        \n        if (componentName.startsWith(\"comp_TXT\")) {\n            \n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n            textBox.setDisabled(true);\n        \n        } else if (componentName.startsWith(\"comp_CMB\")) {\n            \n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n            combobox.setDisabled(true);\n        }\n    }\n}\n\n//INMUEBLE\nprivate void restablecerComponentesInmueble(){\n\n    //RESTABLECER COMPONENTES DE INMUEBLE\n    String[] componentInmuebles = {\"comp_TXT_inmPadron\", \"comp_TXT_inmDomicilio\", \"comp_CMB_inmDistrito\", \"comp_CMB_inmDestino\"};\n            \n    for (String componentName : componentInmuebles) {\n        \n        if (componentName.startsWith(\"comp_TXT\")) {\n            \n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n            \n        }else if (componentName.startsWith(\"comp_CMB\")) {\n            \n            // Si es un Combobox\n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0); // Establece el primer elemento como seleccionado\n            \n            //Limpiar CMB distrito\n            comp_CMB_inmDistrito.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemDis = new Comboitem(\"-\");\n            defaultItemDis.setParent(comp_CMB_inmDistrito);\n            comp_CMB_inmDistrito.setSelectedIndex(0);\n            \n            //Limpiar CMB destino\n            comp_CMB_inmDestino.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemDes = new Comboitem(\"-\");\n            defaultItemDes.setParent(comp_CMB_inmDestino);\n            comp_CMB_inmDestino.setSelectedIndex(0);\n            \n        }\n    }\n    \n    //COMPONENTES DEL REPORTE\n    comp_CMB_inmOpcReporte.setSelectedIndex(0);\n    comp_BTN_inmGenRep.setDisabled(true);\n    String[] componentInmueblesReport = {\"comp_CMB_inmDistritoRep\", \"comp_TXT_perNumDocRep\"};\n    \n    for (String componentName : componentInmueblesReport) {\n\n            if (componentName.startsWith(\"comp_TXT\")) {\n\n                Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n                textBox.setValue(\"-\");\n                textBox.setDisabled(true);\n\n            }else if (componentName.startsWith(\"comp_CMB\")) {\n\n                Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n                combobox.setSelectedIndex(0); \n                combobox.setDisabled(true);\n            \n            }\n    }\n}\n\n//MEDIOS DE ELEVACION\nprivate void restablecerComponentesMDE(){\n\n    //RESTABLECER COMPONENTES DE MEDIOS DE ELEVACION\n    String[] componentMediosDE = {\"comp_LA_mdeInmDireccion\", \"comp_TXT_mdePadron\", \"comp_TXT_mde_IDinmueble\", \"comp_CMB_mdeMaquina\", \"comp_TXT_mdeUbicacion\", \"comp_TXT_mdeTipo\", \n                                  \"comp_TXT_mdeNiveles\", \"comp_CHK_mdePlanosAprob\", \"comp_TXT_mdeExptePlanos\", \"comp_CMB_mdeEmpMant\"};\n\n    for (String componentName : componentMediosDE) {\n\n        if (componentName.startsWith(\"comp_TXT\")) {\n\n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n\n        } else if (componentName.startsWith(\"comp_CMB\")) {\n\n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n\n            //Limpiar CMB TIPO MAQUINA\n            comp_CMB_mdeMaquina.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemMaq = new Comboitem(\"-\");\n            defaultItemMaq.setParent(comp_CMB_mdeMaquina);\n            comp_CMB_mdeMaquina.setSelectedIndex(0);\n\n            //Limpiar CMB EMPRESA MANTENIMIENTO\n            comp_CMB_mdeEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemEM = new Comboitem(\"-\");\n            defaultItemEM.setParent(comp_CMB_mdeEmpMant);\n            comp_CMB_mdeEmpMant.setSelectedIndex(0);\n\n        } else if(componentName.startsWith(\"comp_LA\")){\n\n            Label label = (Label) sup.getInstanciaComponente(componentName);\n            label.setValue(\"Dirección\");\n\n        } else if (componentName.startsWith(\"comp_CHK\")) {\n\n            Checkbox checkbox = (Checkbox) sup.getInstanciaComponente(componentName);\n            checkbox.setChecked(false);\n        }\n    }\n    \n    //COMPONENTES DEL REPORTE\n    comp_CMB_mdeOpcReporte.setSelectedIndex(0);\n    comp_BTN_mdeGenRep.setDisabled(true);\n    String[] componentMediosDEReport = {\"comp_TXT_mdePadronRep\", \"comp_CMB_mdeMaqRep\", \"comp_CMB_mdeEmpMantRep\", \"comp_CMB_mdeDistritoRepME\"};\n    \n    for (String componentName : componentMediosDEReport) {\n\n            if (componentName.startsWith(\"comp_TXT\")) {\n\n                Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n                textBox.setValue(\"-\");\n                textBox.setDisabled(true);\n\n            } else if (componentName.startsWith(\"comp_CMB\")) {\n\n                Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n                combobox.setSelectedIndex(0);\n                combobox.setDisabled(true);\n            }\n    }\n}\n\n//REVISORES\nprivate void restablecerComponentesRevisores(){\n    \n    //RESTABLECER COMPONENTES DE REVISORES\n    String[] componentRevisor = {\"comp_TXT_revApellido\", \"comp_TXT_revNombre\", \"comp_TXT_revCUIL\", \"comp_TXT_revTipoDoc\", \"comp_TXT_revNumDoc\", \"comp_TXT_revTelefono\", \"comp_TXT_revCorreo\", \n                                 \"comp_TXT_revLoginSayges\", \"comp_CHK_revPerAME\", \"comp_CHK_revPerRME\", \"comp_CHK_revPerAEM\"};\n\n    // Iterar sobre el array de nombres\n    for (String componentName : componentRevisor) {\n        if (componentName.startsWith(\"comp_TXT\")) {\n\n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n\n        } else if (componentName.startsWith(\"comp_CHK\")) {\n\n            Checkbox checkbox = (Checkbox) sup.getInstanciaComponente(componentName);\n            checkbox.setChecked(false);\n        \n        }else if (componentName.startsWith(\"comp_CMB\")) {\n            \n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n        }\n    \n    }\n    \n    //COMPONENTES DEL REPORTE\n    comp_CMB_revOpcRep.setSelectedIndex(0);\n    comp_BTN_revGenRep.setDisabled(true);\n    String[] componentRevisorReport = {\"comp_CMB_revTipoDocRep\", \"comp_TXT_revNumDocRep\"};\n    \n    for (String componentName : componentRevisorReport) {\n        \n        if (componentName.startsWith(\"comp_TXT\")) {\n            \n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n            textBox.setDisabled(true);\n                \n        }else if (componentName.startsWith(\"comp_CMB\")) {\n            \n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n            combobox.setDisabled(true);\n            \n        }\n    }\n}\n\n//HABILITACIÓN DE EMPRESAS\nprivate void restablecerComponentesHDE(){\n\n    //RESTABLECER COMPONENTES DE HABILITACION DE EMPRESAS\n    String[] componentEH = {\"comp_DA_ehaFechaHab\", \"comp_DA_ehaFechaVtoHab\", \"comp_CMB_ehaEmpMant\", \"comp_CMB_ehaRevisor\", \"comp_TXT_ehaExpte\", \"comp_CHK_ehaHabilitada\"};\n\n    // Iterar sobre el array de nombres\n    for (String componentName : componentEH) {\n        \n        if (componentName.startsWith(\"comp_TXT\")) {\n            \n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n            \n        }\n        else if (componentName.startsWith(\"comp_CMB\")) {\n            \n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n            \n            //Limpiar CMB HABILITACION DE EMPRESAS\n            comp_CMB_ehaEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemMHDE = new Comboitem(\"-\");\n            defaultItemMHDE.setParent(comp_CMB_ehaEmpMant);\n            comp_CMB_ehaEmpMant.setSelectedIndex(0);\n            \n            //Limpiar CMB REVISORES\n            comp_CMB_ehaRevisor.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemR = new Comboitem(\"-\");\n            defaultItemR.setParent(comp_CMB_ehaRevisor);\n            comp_CMB_ehaRevisor.setSelectedIndex(0);\n            \n        }else if (componentName.startsWith(\"comp_CHK\")) {\n            \n            Checkbox checkbox = (Checkbox) sup.getInstanciaComponente(componentName);\n            checkbox.setChecked(false);\n            \n        }else if (componentName.startsWith(\"comp_DA\")) {\n            Datebox datebox = (Datebox) sup.getInstanciaComponente(componentName);\n            datebox.setValue(fechaActual);  // Establecer la fecha actual\n        }\n    }\n    \n    //COMPONENTES DEL REPORTE\n    comp_CMB_ehaOpcReporte.setSelectedIndex(0);\n    comp_BTN_ehaGenRep.setDisabled(true);\n    String[] componentEHReport = {\"comp_CMB_ehaEmpMantRep\", \"comp_DA_ehaDdeFechaVigRep\", \"comp_DA_ehaHtaFechaVigRep\"};\n    \n    for (String componentName : componentEHReport) {\n        \n        if (componentName.startsWith(\"comp_CMB\")) {\n            \n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n            combobox.setDisabled(true);\n            \n        }else if (componentName.startsWith(\"comp_DA\")) {\n            \n            Datebox datebox = (Datebox) sup.getInstanciaComponente(componentName);\n            datebox.setValue(fechaActual);\n            datebox.setDisabled(true);\n        }\n    }\n}\n\n\n\n//HABILITACIÓN DE MEDIOS DE ELEVACION \nprivate void restablecerComponentesHMDE(){\n\n    //RESTABLECER COMPONENTES DE HABILITACION DE MDE\n    String[] componentHMDE = {\"comp_TXT_mhaPadron\", \"comp_CMB_mhaMedioElev\", \"comp_TXT_mhaEmpMant\", \"comp_TXT_ID_mhaEmpMant\", \"comp_TXT_mhaEmpMant_GuardarDato\", \n                              \"comp_TXT_ID_mhaEmpMant_GuardarDato\", \"comp_CMB_mhaEmpMant\", \"comp_CMB_mhaTecnico\", \"comp_DA_mhaFechaHab\", \"comp_TXT_mhaExpte\", \n                              \"comp_DA_mhaFechaVtoHab\", \"comp_DA_mhaFechaPago\", \"comp_DA_mhaFechaInspec\", \"comp_CHK_mhaHabilitado\", \"comp_CHK_mhaObleaEntreg\", \n                              \"comp_CMB_mhaRevisor\"};\n\n    // Iterar sobre el array de nombres\n    for (String componentName : componentHMDE) {\n\n        if (componentName.startsWith(\"comp_TXT\")) {\n\n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n\n        }\n        else if (componentName.startsWith(\"comp_CMB\")) {\n\n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n\n            //Limpiar CMB MDE\n            comp_CMB_mhaMedioElev.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemHMDE = new Comboitem(\"-\");\n            defaultItemHMDE.setParent(comp_CMB_mhaMedioElev);\n            comp_CMB_mhaMedioElev.setSelectedIndex(0);\n\n            //Limpiar CMB EMPRESAS\n            comp_CMB_mhaEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemEM = new Comboitem(\"-\");\n            defaultItemEM.setParent(comp_CMB_mhaEmpMant);\n            comp_CMB_mhaEmpMant.setSelectedIndex(0);\n\n            //Limpiar CMB TECNICOS/PERSONAS\n            comp_CMB_mhaTecnico.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemT = new Comboitem(\"-\");\n            defaultItemT.setParent(comp_CMB_mhaTecnico);\n            comp_CMB_mhaTecnico.setSelectedIndex(0);\n\n            //Limpiar CMB REVISORES\n            comp_CMB_mhaRevisor.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItemT = new Comboitem(\"-\");\n            defaultItemT.setParent(comp_CMB_mhaRevisor);\n            comp_CMB_mhaRevisor.setSelectedIndex(0);\n\n        }else if (componentName.startsWith(\"comp_CHK\")) {\n\n            Checkbox checkbox = (Checkbox) sup.getInstanciaComponente(componentName);\n            checkbox.setChecked(false);\n\n        }else if (componentName.startsWith(\"comp_DA\")) {\n            Datebox datebox = (Datebox) sup.getInstanciaComponente(componentName);\n            datebox.setValue(fechaActual);  // Establecer la fecha actual\n        }\n    }\n    \n    //COMPONENTES DEL REPORTE\n    comp_CMB_mhaOpcReporte.setSelectedIndex(0);\n    comp_BTN_mhaGenRep.setDisabled(true);\n    String[] componentHMDEReport = {\"comp_DA_mhadesdeRep\", \"comp_DA_mhahastaRep\", \"comp_TXT_mhaDomInmRep\", \"comp_CMB_mhaPadEncRep\", \"comp_TXT_mhaPadronRep\", \n                                    \"comp_CMB_mhaEmpMantRep\", \"comp_CMB_mhaMedioElevRep\"};\n    \n    for (String componentName : componentHMDEReport) {\n        \n        if (componentName.startsWith(\"comp_TXT\")) {\n            \n            Textbox textBox = (Textbox) sup.getInstanciaComponente(componentName);\n            textBox.setValue(\"-\");\n            textBox.setDisabled(true);\n        \n        }else if (componentName.startsWith(\"comp_CMB\")) {\n            \n            Combobox combobox = (Combobox) sup.getInstanciaComponente(componentName);\n            combobox.setSelectedIndex(0);\n            combobox.setDisabled(true);\n        \n        }else if (componentName.startsWith(\"comp_DA\")) {\n            \n            Datebox datebox = (Datebox) sup.getInstanciaComponente(componentName);\n            datebox.setValue(fechaActual); \n            datebox.setDisabled(true);\n        }\n    }\n}\n\n//METODO API INMUEBLES:se creo este metodo debido a que la api get de inmuebles se utiliza en PERSONAS Y MDE\nprivate void apiGet_Inmuebles(){\n    \n    try {\n            \n        //INMUEBLE (GET)\n        java.util.List parametrosfnGetInmuebles = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetInmuebles\",parametrosfnGetInmuebles);\n        Map return80map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return80map\");\n\n        for (int i = 0; i < return80map.get(\"inmuebles\").size(); i++){\n\n            String idInmueble = return80map.get(\"inmuebles\").get(i).get(\"inm_id\").toString(); \n            String inm_padron =  return80map.get(\"inmuebles\").get(i).get(\"inm_padron\").toString();\n            String inm_direccion = return80map.get(\"inmuebles\").get(i).get(\"inm_direccion\");\n            String distrito_nombre = return80map.get(\"inmuebles\").get(i).get(\"distrito\").get(\"dis_nombre\").toString();\n            String destino_detalle = return80map.get(\"inmuebles\").get(i).get(\"destino\").get(\"dst_detalle\").toString();\n\n            boolean valorBooleano = (boolean) return80map.get(\"inmuebles\").get(i).get(\"inm_activo\");\n            String inm_activo = valorBooleano ? \"SI\" : \"NO\";\n\n            //LISTAR EN LA GRILLA\n            Listitem item = new Listitem();\n\n            item.appendChild(new Listcell(idInmueble));\n            item.appendChild(new Listcell(inm_padron));\n            item.appendChild(new Listcell(inm_direccion));\n            item.appendChild(new Listcell(distrito_nombre));\n            item.appendChild(new Listcell(destino_detalle));\n            item.appendChild(new Listcell(inm_activo));\n\n            // Agregar el botón \"Borrar\"\n            Toolbarbutton desv = new Toolbarbutton();\n            desv.setAttribute(\"item\", item);\n            Listcell reg1 = new Listcell();\n            reg1.setStyle(\"text-align:center;\");\n            reg1.setParent(item);\n            desv.setParent(reg1);\n            desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n            desv.setLabel(\"Borrar\");\n            desv.setWidth(\"80px\");\n            desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n\n                    final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                    Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                    String idString = ((org.zkoss.zul.Listcell) i.getChildren().get(0)).getLabel(); // Obtener el ID como String desde la primera celda de la fila\n\n                    int ind = i.getIndex();\n                    comp_GRID_inmuebles.removeItemAt(ind);\n\n                    // Convertir el ID de String a int\n                    int id = Integer.parseInt(idString);\n\n                    /*try {\n\n                        //INMUEBLE (DELETE)\n                        java.util.List parametrosfnDeleteInmuebles = new java.util.ArrayList();\n                        parametrosfnDeleteInmuebles.add(id); //id / int\n                        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnDeleteInmuebles\",parametrosfnDeleteInmuebles);\n\n                    }catch (Exception e) \n                    {\n                        Messagebox.show(\"El servicio de la API DELETE de Inmueble NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n                    }*/  \n\n                    comp_TXT_inmPadron.setValue(\"-\");\n                    comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: #606060\");\n                    comp_TXT_inmDomicilio.setValue(\"-\");\n                    comp_TXT_inmDomicilio.setStyle(comp_TXT_inmDomicilio.getStyle() + \"; border-color: #606060\");\n                    comp_TXT_inmDistrito.setValue(\"-\");\n                    comp_CMB_inmDestino.setValue(\"-\");\n                    comp_CHK_inmActivo.setChecked(true);\n\n                    comp_BTN_inmEditar.setLabel(\"Editar\");\n                    comp_BTN_inmEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n\n                } \n            });\n\n            comp_GRID_inmuebles.appendChild(item);\n        }\n\n    } \n    catch (Exception e) \n    {\n        Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n}\n\n\n//**************************************** METODOS ****************************************\n\n\n//**************************************** PAGINAR GRILLAS ****************************************\n//PAGINAR GRILLA EMPRESAS\ncomp_GRID_empresas.setMold(\"paging\");\ncomp_GRID_empresas.setPageSize(5);\n//PAGINAR GRILLA PERSONAS\ncomp_GRID_personas.setMold(\"paging\");\ncomp_GRID_personas.setPageSize(5);\n//PAGINAR GRILLA INMUEBLES\ncomp_GRID_inmuebles.setMold(\"paging\");\ncomp_GRID_inmuebles.setPageSize(5);\n//PAGINAR GRILLA MEDIOS DE ELEVACION\ncomp_GRID_medioselevacion.setMold(\"paging\");\ncomp_GRID_medioselevacion.setPageSize(5);\n//PAGINAR GRILLA REVISORES\ncomp_GRID_revisores.setMold(\"paging\");\ncomp_GRID_revisores.setPageSize(5);\n//PAGINAR GRILLA HABILITACION DE EMPRESAS\ncomp_GRID_habilitacionesempresas.setMold(\"paging\");\ncomp_GRID_habilitacionesempresas.setPageSize(5);\n//PAGINAR GRILLA HABILITACION DE EMPRESAS DE MANTENIMIENTO\ncomp_GRID_habilitacionesmedios.setMold(\"paging\");\ncomp_GRID_habilitacionesmedios.setPageSize(5);\n/*private void configurarGrilla(Listbox grilla) {\n    // Configurar estilo de las columnas\n    String estiloColumnas = \"background-color: #223741; color: #ffffff;\";\n    Listhead listhead = grilla.getListhead();\n    int numColumns = listhead.getChildren().size();\n    for (int i = 0; i < numColumns; i++) {\n        listhead.getChildren().get(i).setStyle(estiloColumnas);\n    }\n    \n    // Configurar paginación\n    grilla.setMold(\"paging\");\n    grilla.setPageSize(5);\n    \n    // Aplicar estilo a la paginación\n    Paging paging = grilla.getPagingChild();\n    if (paging != null) {\n        String estiloPaginacion = \"background-color: #111c20; color: #333;\";\n        paging.setStyle(estiloPaginacion);\n    }\n}\n\n// Llamar al método para cada grilla\nconfigurarGrilla(comp_GRID_empresas);\nconfigurarGrilla(comp_GRID_personas);\nconfigurarGrilla(comp_GRID_inmuebles);\nconfigurarGrilla(comp_GRID_medioselevacion);\nconfigurarGrilla(comp_GRID_revisores);\nconfigurarGrilla(comp_GRID_habilitacionesempresas);\nconfigurarGrilla(comp_GRID_habilitacionesmedios);*/\n//**************************************** PAGINAR GRILLAS ****************************************\n\n//**************************************** OCULTAR COLUMNAS DE LAS GRILLAS ****************************************\n\n//EMPRESA\n/*int[] ocultar_columnas_Empresas = {0}; // Índices de las columnas a ocultar\n\nfor (int index_columna : ocultar_columnas_Empresas) {\n    comp_GRID_empresas.getListhead().getChildren().get(index_columna).setVisible(false);\n}\n\n//PERSONA\nint[] ocultar_columnas_Personas = {0, 1, 2, 12, 15, 16, 17, 18}; // Índices de las columnas a ocultar\n\nfor (int index_columna : ocultar_columnas_Personas) {\n    comp_GRID_personas.getListhead().getChildren().get(index_columna).setVisible(false);\n}\n\n//INMUEBLES\nint[] ocultar_columnas_Inmuebles = {0}; // Índices de las columnas a ocultar\n\nfor (int index_columna : ocultar_columnas_Inmuebles) {\n    comp_GRID_inmuebles.getListhead().getChildren().get(index_columna).setVisible(false);\n}\n                                   \n//MEDIOS DE ELEVACION\nint[] ocultar_columnas_MDE = {0, 1, 4, 8, 9}; // Índices de las columnas a ocultar\n\nfor (int index_columna : ocultar_columnas_MDE) {\n    comp_GRID_medioselevacion.getListhead().getChildren().get(index_columna).setVisible(false);\n}\n                                   \n//REVISORES\nint[] ocultar_columnas_Revisores = {0}; // Índices de las columnas a ocultar\n\nfor (int index_columna : ocultar_columnas_Revisores) {\n    comp_GRID_revisores.getListhead().getChildren().get(index_columna).setVisible(false);\n}\n                                   \n//HABILITACION DE EMPRESAS\nint[] ocultar_columnas_HDE = {0, 1, 7}; // Índices de las columnas a ocultar\n\nfor (int index_columna : ocultar_columnas_HDE) {\n    comp_GRID_habilitacionesempresas.getListhead().getChildren().get(index_columna).setVisible(false);\n}\n                                   \n//HABILITACION DE EMPRESAS\nint[] ocultar_columnas_HMDE = {0, 1, 3, 9, 10, 12}; // Índices de las columnas a ocultar\n\nfor (int index_columna : ocultar_columnas_HMDE) {\n    comp_GRID_habilitacionesmedios.getListhead().getChildren().get(index_columna).setVisible(false);\n}*/\n//**************************************** OCULTAR COLUMNAS DE LAS GRILLAS ****************************************\n\n\n\n\n\n\n\n\n\n\n\n/****************************LÓGICA****************************/\nString tipo = comp_CMB_opciones.getValue().toString();\nswitch (tipo){\n    \n    case \"Empresas de Mantenimiento\":\n        \n        reestablecerBotonesExcepto(\"Empresas de Mantenimiento\");\n        limpiarGrillasExcepto(\"Empresas de Mantenimiento\");\n        \n        //LLAMAR METODOS PARA LIMPIAR COMPONENTES\n        restablecerComponentesPersona(); //Persona\n        restablecerComponentesInmueble(); //Inmueble\n        restablecerComponentesMDE(); //MDE\n\t\trestablecerComponentesRevisores(); //Revisores\n        restablecerComponentesHDE(); //HDE\n\t\trestablecerComponentesHMDE(); //HMDE\n        \n        //LLAMAR METODO PARA DESACTIVAR CONTENEDORES\n        desactivarContenedoresExcepto(\"cont_ABM_EmpresaM\", \"cont_CL_EmpresasM\");\n        \n        try {\n            \n            //EMPRESA DE MANTENIMIENTO (GET)\n            java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n            Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n           \n            \n            for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n                \n                String emp_id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n                String emp_razon = return78map.get(\"empresas\").get(i).get(\"emp_razon\");\n                String emp_cuit =  return78map.get(\"empresas\").get(i).get(\"emp_cuit\");\n                String emp_domic_legal = return78map.get(\"empresas\").get(i).get(\"emp_domic_legal\");\n                String emp_telefono = return78map.get(\"empresas\").get(i).get(\"emp_telefono\");\n                String emp_correo = return78map.get(\"empresas\").get(i).get(\"emp_correo\");\n                boolean valorBooleano = (boolean) return78map.get(\"empresas\").get(i).get(\"emp_activa\");\n                String emp_activa = valorBooleano ? \"SI\" : \"NO\";\n\n                Listitem item = new Listitem();\n\n                item.appendChild(new Listcell(emp_id));\n               \titem.appendChild(new Listcell(emp_razon));\n                item.appendChild(new Listcell(emp_cuit));\n                item.appendChild(new Listcell(emp_domic_legal));\n                item.appendChild(new Listcell(emp_telefono));\n                item.appendChild(new Listcell(emp_correo));\n                item.appendChild(new Listcell(emp_activa));\n\n                // Agregar el botón \"Borrar\"\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                        \n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                        String idString = ((org.zkoss.zul.Listcell) i.getChildren().get(0)).getLabel(); // Obtener el ID como String desde la primera celda de la fila\n                         //comp_TXT_ID.setValue(idString);\n                        int ind = i.getIndex();\n                        comp_GRID_empresas.removeItemAt(ind);\n\n                        // Convertir el ID de String a int\n                        int id = Integer.parseInt(idString);\n\n                        try {\n                            \n                            //EMPRESA DE MANTENIMIENTO (DELETE)\n                            java.util.List parametrosfnDeleteEmpresaMantenimiento = new java.util.ArrayList();\n                            parametrosfnDeleteEmpresaMantenimiento.add(id); //id / int\n                            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnDeleteEmpresaMantenimiento\",parametrosfnDeleteEmpresaMantenimiento);\n                        }catch (Exception e) \n                        {\n                            Messagebox.show(\"El servicio de la API DELETE de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n                        }  \n                        \n                        comp_TXT_empRazonSocial.setValue(\"-\");\n                        comp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_empCUIT.setValue(\"-\");\n                        comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_empDomic.setValue(\"-\");\n                        comp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_empTelefono.setValue(\"-\");\n                        comp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_empCorreo.setValue(\"-\");\n                        comp_TXT_empCorreo.setStyle(comp_TXT_empCorreo.getStyle() + \"; border-color: #606060\");\n                        comp_CHK_empActiva.setChecked(true);\n                        \n                        comp_BTN_empEditar.setLabel(\"Editar\");\n                        comp_BTN_empEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");  \n                    } \n                });\n                comp_GRID_empresas.appendChild(item);\n            }\n        } \n        catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        break;\n        \n        \n   \tcase \"Personas\":\n        \n        //Desactivar Checks\n        comp_CHK_perEsSocio.setDisabled(true);\n        comp_CHK_perEsRptte.setDisabled(true);\n        comp_CHK_perEsAdmCon.setDisabled(true);\n        comp_CHK_perEsCoprop.setDisabled(true);\n        \n        \n        reestablecerBotonesExcepto(\"Personas\");\n        limpiarGrillasExcepto(\"Personas\");\n        \n        \n        //LLAMAR METODOS PARA LIMPIAR COMPONENTES\n        restablecerComponentesEmpresa(); //Empresa\n        restablecerComponentesInmueble(); //Inmueble\n        restablecerComponentesMDE(); //MDE\n        restablecerComponentesRevisores(); //Revisores\n        restablecerComponentesHDE(); //HDE\n        restablecerComponentesHMDE(); //HMDE\n        \n        //LLAMAR METODO PARA DESACTIVAR CONTENEDORES\n        desactivarContenedoresExcepto(\"cont_ABM_Personas\", \"cont_CL_Personas\");\n        \n        //LLAMAR METODO API INMUEBLES (GET) PARA RELACIONAR PERSONAS\n        apiGet_Inmuebles(); \n        \n        \n        try {\n            \n            //PRIMERA EMPRESA INMUEBLE PERSONA (GET)\n            java.util.List parametrosfnGetPrimeraEmpresaInmueblePersona = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPrimeraEmpresaInmueblePersona\",parametrosfnGetPrimeraEmpresaInmueblePersona);\n            Map return83map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return83map\");\n            \n            int size = return83map.get(\"empresaInmueblePersona\").size();\n        \n            //for (int i = 0; i < return83map.get(\"empresaInmueblePersona\").size(); i++) {\n            for (int i = 0; i < size; i++){\n                \n                Map personaMap = (Map) return83map.get(\"empresaInmueblePersona\").get(i);\n                \n                // Determinar el tipo de ID (epe_id o ipe_id) y obtenerlo\n                String idEmpresaPersona = \"-\";\n                String idInmueblePersona = \"-\";\n                String idPersona = \"-\";\n                \n                if (personaMap.containsKey(\"epe_id\")) {\n                    \n                    idEmpresaPersona = personaMap.get(\"epe_id\").toString(); // ID de empresa-persona\n                    idPersona = personaMap.get(\"per_id\").toString();\n                    \n                } else if (personaMap.containsKey(\"ipe_id\")) {\n                    \n                    idInmueblePersona = personaMap.get(\"ipe_id\").toString(); // ID de inmueble-persona\n                    idPersona = personaMap.get(\"per_id\").toString();\n                    \n                }\n                \n                //DATOS DE LA PERSONA\n                String per_apellido = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_apellido\").toString();\n                String per_nombre = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_nombre\").toString();\n                String per_cuit = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_cuit\").toString();\n                String per_tipodoc = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_tipodoc\").toString();\n                String per_numdoc = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_numdoc\").toString();\n                String per_domic_legal = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_domic_legal\").toString();\n                String per_telefono = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_telefono\").toString();\n                String per_correo = return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_correo\").toString();\n                \n                //LOGICA PARA EMPRESA O INMUEBLES NULL\n                // Obtener el nombre de la empresa\n                Object empresasObj = return83map.get(\"empresaInmueblePersona\").get(i).get(\"empresas\");\n                String rasonS = \"-\";\n                \n                //Se verifica si empresasObj no es null y es de tipo Map.\n                if (empresasObj != null && empresasObj instanceof Map) {\n                    \n                    //Si se cumple la condición, se convierte empresasObj en un Map llamado empresasMap\n                    Map empresasMap = (Map) empresasObj;\n                    //Se obtiene el valor correspondiente a la clave \"emp_razon\" en el mapa empresasMap.\n                    Object empRazonObj = empresasMap.get(\"emp_razon\");\n                    \n                    //Se obtiene el valor correspondiente a la clave \"emp_razon\" en el mapa empresasMap.\n                    if (empRazonObj != null) {\n                        rasonS = empRazonObj.toString();\n                    }\n                }\n\n                // Obtener el padron del inmueble\n                Object inmueblesObj = return83map.get(\"empresaInmueblePersona\").get(i).get(\"inmuebles\");\n                String idPadron = \"-\";\n                String padron = \"-\";\n                if (inmueblesObj != null && inmueblesObj instanceof Map) {\n                    Map inmueblesMap = (Map) inmueblesObj;\n                    \n                    // Obtener el ID del inmueble\n                    Object idPadronObj = inmueblesMap.get(\"inm_id\");\n                    if (idPadronObj != null) {\n                        idPadron = idPadronObj.toString();\n                    }\n                    \n                    // Obtener el padron del inmueble\n                    Object inmPadronObj = inmueblesMap.get(\"inm_padron\");\n                    if (inmPadronObj != null) {\n                        padron = inmPadronObj.toString();\n                    }\n                    \n                    \n                }\n                \n                \n                //VALORES BOOLEAN\n                boolean activa = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_activa\");\n                String per_activa = activa ? \"SI\" : \"NO\";\n                \n                boolean dueno = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_dueno_emp\");\n                String per_es_dueno_emp = dueno ? \"SI\" : \"NO\";\n                \n                boolean representante = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_reptec_emp\");\n                String per_es_reptec_emp = representante ? \"SI\" : \"NO\";\n                \n                boolean administrador = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_admin_edif\");\n                String per_es_admin_edif = administrador ? \"SI\" : \"NO\";\n                \n                boolean copropietario = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_coprop_edif\");\n                String per_es_coprop_edif = copropietario ? \"SI\" : \"NO\";\n                \n                //LISTAR EN LA GRILLA\n                Listitem item = new Listitem();\n                \n                \n                // Agregar el ID de la relación como primer elemento\n                Listcell idEmpresaP = new Listcell(idEmpresaPersona);\n                item.appendChild(idEmpresaP);\n                \n                Listcell idInmuebleP = new Listcell(idInmueblePersona);\n                item.appendChild(idInmuebleP);\n\n                //OTROS DATOS\n                item.appendChild(new Listcell(idPersona));\n                item.appendChild(new Listcell(per_apellido));\n                item.appendChild(new Listcell(per_nombre));\n                item.appendChild(new Listcell(per_cuit));\n                item.appendChild(new Listcell(String.valueOf(per_tipodoc)));\n                item.appendChild(new Listcell(per_numdoc));\n                item.appendChild(new Listcell(per_domic_legal));\n                item.appendChild(new Listcell(per_telefono));\n                item.appendChild(new Listcell(per_correo));\n                item.appendChild(new Listcell(padron));\n                item.appendChild(new Listcell(idPadron)); \n                item.appendChild(new Listcell(rasonS));\n                item.appendChild(new Listcell(per_activa)); //PERSONA ACTIVA ?\n                item.appendChild(new Listcell(per_es_dueno_emp)); //ES DUEÑO (EMPRESA) ?\n                item.appendChild(new Listcell(per_es_reptec_emp)); //ES REPRESENTANTE (EMPRESA) ?\n                item.appendChild(new Listcell(per_es_admin_edif)); //ES ADMINISTRADOR (INMUEBLE) ?\n\t\t\t\titem.appendChild(new Listcell(per_es_coprop_edif)); //ES COPROPIERTARIO (INMUEBLE) ? \n                \n                // Agregar el botón \"Borrar\"\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                        \n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                    } \n                });\n\n                // Agregar el Listitem a la grilla\n                comp_GRID_personas.appendChild(item);\n            }\n        \n        } catch (Exception e) \n        {\n            Messagebox.show(\"El servicio de la API GET de PRIMERA EMPRESA INMUEBLE PERSONA de Mantenimiento NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        break;\n        \n        \n    case \"Inmuebles\":\n        \n        reestablecerBotonesExcepto(\"Inmuebles\");\n        limpiarGrillasExcepto(\"Empresas de Mantenimiento\");\n        \n        //LLAMAR METODOS PARA LIMPIAR COMPONENTES\n        restablecerComponentesEmpresa(); //Empresa\n        restablecerComponentesPersona(); //Persona\n        restablecerComponentesMDE(); //MDE\n        restablecerComponentesRevisores(); //Revisores\n        restablecerComponentesHDE(); //HDE\n        restablecerComponentesHMDE(); //HMDE\n        \n        \n        //LLAMAR METODO PARA DESACTIVAR CONTENEDORES\n        desactivarContenedoresExcepto(\"cont_ABM_Inmuebles\", \"cont_CL_Inmuebles\");\n\n        \n        try {\n            \n            //AL SELECCIONAR EDITAR SE CARGA LA LISTA DE DISTRITOS\n            //DISTRITO (GET)\n            java.util.List parametrosfnGetDistrito = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetDistrito\",parametrosfnGetDistrito);\n            Map return89map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return89map\");\n\n            for (int i = 0; i < return89map.get(\"distritos\").size(); i++){\n                \n                String dis_id = return89map.get(\"distritos\").get(i).get(\"dis_id\").toString(); \n                String dis_nombre = return89map.get(\"distritos\").get(i).get(\"dis_nombre\").toString(); \n\n                Comboitem item = new Comboitem();                \n                item.setLabel(dis_nombre);\n                item.setValue(dis_id); // Establecer el ID como el valor del Comboitem\n                item.setParent(comp_CMB_inmDistrito);\n            }\n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de DISTRITO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        try {\n            //AL SELECCIONAR EDITAR SE CARGA LA LISTA DE DESTINOS\n            //DESTINOS (GET)\n            java.util.List parametrosfnGetDestino = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetDestino\",parametrosfnGetDestino);\n            Map return90map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return90map\");\n\n            for (int i = 0; i < return90map.get(\"destinos\").size(); i++){\n                \n                String dst_id = return90map.get(\"destinos\").get(i).get(\"dst_id\").toString(); \n                String dst_detalle = return90map.get(\"destinos\").get(i).get(\"dst_detalle\").toString(); \n\n                Comboitem item = new Comboitem();                \n                item.setLabel(dst_detalle);\t\n                item.setValue(dst_id); // Establecer el ID como el valor del Comboitem\n                item.setParent(comp_CMB_inmDestino);\n            }\n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de DESTINOS NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        apiGet_Inmuebles(); //LLAMAR API INMUEBLES (GET)\n        \n        \n        \n    break;\n        \n        \n\tcase \"Medios de Elevación\":\n        \n        reestablecerBotonesExcepto(\"Medios de Elevación\");\n        limpiarGrillasExcepto(\"Empresas de Mantenimiento\");\n        \n        \n        //LLAMAR METODOS PARA LIMPIAR COMPONENTES\n        restablecerComponentesEmpresa(); //Empresa\n        restablecerComponentesPersona(); //Persona\n        restablecerComponentesInmueble(); //Inmueble\n        restablecerComponentesRevisores(); //Revisores\n        restablecerComponentesHDE(); //HDE\n        restablecerComponentesHMDE(); //HMDE\n        \n        //LLAMAR METODO PARA DESACTIVAR CONTENEDORES\n        desactivarContenedoresExcepto(\"cont_ABM_ME\", \"cont_CL_MDE\");\n        \n        //LLAMAR METODO API INMUEBLES (GET) PARA RELACIONAR MEDIOS DE ELEVACIÓN\n        apiGet_Inmuebles();\n        \n        try {\n            \n            //TIPO DE MAQUINA (GET)\n            java.util.List parametrosfnGetTipoMaquina = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetTipoMaquina\",parametrosfnGetTipoMaquina);\n            Map return84map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return84map\");\n\n            for (int i = 0; i < return84map.get(\"tipoMaquinas\").size(); i++){\n                \n                String tma_id = return84map.get(\"tipoMaquinas\").get(i).get(\"tma_id\").toString(); \n                //String codigo = return84map.get(\"tipoMaquinas\").get(i).get(\"tma_id\").toString(); \n                String tma_detalle = return84map.get(\"tipoMaquinas\").get(i).get(\"tma_detalle\").toString(); \n                //String codigo = return84map.get(\"tipoMaquinas\").get(i).get(\"tma_id\").toString(); \n                //String activa\n                \n                Comboitem item = new Comboitem();                \n                item.setLabel(tma_detalle);\n                item.setValue(tma_id); // Establecer el ID como el valor del Comboitem\n                item.setParent(comp_CMB_mdeMaquina);\n            }\n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de TIPO MAQUINA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        \n        try {\n            \n            //EMPRESA DE MANTENIMIENTO (GET)\n            java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n            Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\n            for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n                \n                boolean emp_activa = (boolean) return78map.get(\"empresas\").get(i).get(\"emp_activa\");\n                \n                if (emp_activa) {\n                    \n                    String emp_id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n                    String emp_razon = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n\n                    Comboitem item = new Comboitem();                \n                    item.setLabel(emp_razon);\n                    item.setValue(emp_id); // Establecer el ID como el valor del Comboitem\n                    item.setParent(comp_CMB_mdeEmpMant);\n                }\n            }\n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de TIPO MAQUINA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n\n        try {\n            \n            //MEDIOS DE ELEVACION (GET) /matias\n            java.util.List parametrosfnGetPrimerMedioDeElevacionInmueble = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPrimerMedioDeElevacionInmueble\",parametrosfnGetPrimerMedioDeElevacionInmueble);\n            Map return86map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return86map\");\n\n            for (int i = 0; i < return86map.get(\"medioElevacionesInmueble\").size(); i++){\n                \n                String mde_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_id\").toString(); //ID MDE\n                \n                String ime_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"ime_id\").toString(); //ID INMUEBLE-MDE\n                \n                //PADRON\n                String inm_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"inmueble\").get(\"inm_id\").toString();\n                String inm_padron = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"inmueble\").get(\"inm_padron\").toString();\n                //DISTRITO\n                String dis_nombre = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"inmueble\").get(\"distrito\").get(\"dis_nombre\").toString();\n                \n                //TIPO MAQUINA\n                String tma_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"tiposMaquinas\").get(\"tma_id\").toString();\n                String tma_detalle = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"tiposMaquinas\").get(\"tma_detalle\").toString();\n                \n\t\t\t\t//MDE\n                String mde_ubicacion = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_ubicacion\").toString();\n                String mde_tipo = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_tipo\").toString();\n                String mde_niveles = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_niveles\").toString();\n                boolean planosAB = (boolean) return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_planos_aprob\");\n                String mde_planos_aprob = planosAB ? \"SI\" : \"NO\";\n                String mde_expte_planos = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_expte_planos\").toString(); \n                boolean activoMde = (boolean) return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_activo\");\n  \t\t\t\tString mde_activo = activoMde ? \"SI\" : \"NO\";\n                \n                \n                \n                //EMPRESA DE MANTENIMIENTO\n                Object empresasObj = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"empresa\");\n                String rasonS = \"-\";\n                \n                //Se verifica si empresasObj no es null y es de tipo Map.\n                if (empresasObj != null && empresasObj instanceof Map) {\n                    \n                    //Si se cumple la condición, se convierte empresasObj en un Map llamado empresasMap\n                    Map empresasMap = (Map) empresasObj;\n                    //Se obtiene el valor correspondiente a la clave \"emp_razon\" en el mapa empresasMap.\n                    Object empRazonObj = empresasMap.get(\"emp_razon\");\n                    \n                    //Se obtiene el valor correspondiente a la clave \"emp_razon\" en el mapa empresasMap.\n                    if (empRazonObj != null) {\n                        rasonS = empRazonObj.toString();\n                    }\n                }\n\n                //LISTAR EN LA GRILLA\n                Listitem item = new Listitem();\n                \n                item.appendChild(new Listcell(ime_id));\n\t\t\t\titem.appendChild(new Listcell(mde_id));\n                item.appendChild(new Listcell(tma_detalle)); \n                item.appendChild(new Listcell(inm_padron)); \n                item.appendChild(new Listcell(inm_id)); \n                item.appendChild(new Listcell(dis_nombre)); \n                item.appendChild(new Listcell(mde_ubicacion));\n                item.appendChild(new Listcell(mde_tipo));\n                item.appendChild(new Listcell(mde_niveles));\n                item.appendChild(new Listcell(mde_planos_aprob)); //PLANOS APROBADOS ?\n                item.appendChild(new Listcell(mde_expte_planos));\n                item.appendChild(new Listcell(rasonS));\n                item.appendChild(new Listcell(mde_activo)); //MEDIO DE ELAVACION ACTIVO ?\n                \n                // Agregar el botón \"Borrar\"\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                        \n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                    } \n                });\n\n                // Agregar el Listitem a la grilla\n                comp_GRID_medioselevacion.appendChild(item);\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de MEDIOS DE ELEVACIÓN NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        \n        \n    break;\n        \n    \n    case \"Revisores DOP y Permisos\":\n        \n        reestablecerBotonesExcepto(\"Revisores DOP y Permisos\");\n        limpiarGrillasExcepto(\"Empresas de Mantenimiento\");\n        \n        \n        //LLAMAR METODOS PARA LIMPIAR COMPONENTES\n        restablecerComponentesEmpresa(); //Empresa\n        restablecerComponentesPersona(); //Persona\n        restablecerComponentesInmueble(); //Inmueble\n        restablecerComponentesMDE(); //MDE\n        restablecerComponentesHDE(); //HDE\n        restablecerComponentesHMDE(); //HMDE\n        \n        \n        //LLAMAR METODO PARA DESACTIVAR CONTENEDORES\n        desactivarContenedoresExcepto(\"cont_ABM_RevisoresE\", \"cont_CL_RevisoresE\");\n        \n        try {\n            \n            //REVISORES (GET)\n            java.util.List parametrosfnGetRevisores = new java.util.ArrayList();\n            parametrosfnGetRevisores.add(0); //listar_Revisores / int\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetRevisores\",parametrosfnGetRevisores);\n            Map return94map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return94map\");\n            \n            for (int i = 0; i < return94map.get(\"revisores\").size(); i++){\n                \n                String rev_id = return94map.get(\"revisores\").get(i).get(\"rev_id\").toString(); \n                String rev_apellido = return94map.get(\"revisores\").get(i).get(\"rev_apellido\");\n                String rev_nombre =  return94map.get(\"revisores\").get(i).get(\"rev_nombre\");\n                String rev_cuit = return94map.get(\"revisores\").get(i).get(\"rev_cuit\");\n                String rev_tipodoc = return94map.get(\"revisores\").get(i).get(\"rev_tipodoc\").toString();\n                String rev_numdoc = return94map.get(\"revisores\").get(i).get(\"rev_numdoc\");\n                String rev_correo = return94map.get(\"revisores\").get(i).get(\"rev_correo\");\n                String rev_telefono = return94map.get(\"revisores\").get(i).get(\"rev_telefono\");\n                String rev_usuario_sayges = return94map.get(\"revisores\").get(i).get(\"rev_usuario_sayges\");\n                \n                boolean aprobMde_B = return94map.get(\"revisores\").get(i).get(\"rev_aprob_mde\");\n                String rev_aprob_mde = aprobMde_B ? \"SI\" : \"NO\";\n                boolean renovMde_B = return94map.get(\"revisores\").get(i).get(\"rev_renov_mde\");\n                String rev_renov_mde = renovMde_B ? \"SI\" : \"NO\";\n                boolean aprobEmp_B = return94map.get(\"revisores\").get(i).get(\"rev_aprob_emp\");\n                String rev_aprob_emp = aprobEmp_B ? \"SI\" : \"NO\";\n                boolean activo_B = return94map.get(\"revisores\").get(i).get(\"rev_activo\");\n                String rev_activo = activo_B ? \"SI\" : \"NO\";\n                \n                //LISTAR EN LA GRILLA\n                Listitem item = new Listitem();\n                \n                item.appendChild(new Listcell(rev_id));\n                item.appendChild(new Listcell(rev_apellido));\n                item.appendChild(new Listcell(rev_nombre));\n                item.appendChild(new Listcell(rev_cuit));\n                item.appendChild(new Listcell(rev_tipodoc));\n                item.appendChild(new Listcell(rev_numdoc));\n                item.appendChild(new Listcell(rev_correo));\n                item.appendChild(new Listcell(rev_telefono));\n                item.appendChild(new Listcell(rev_usuario_sayges));\n                item.appendChild(new Listcell(rev_aprob_mde)); //APROBAR MDE ?\n                item.appendChild(new Listcell(rev_renov_mde)); //APROBAR RENOVACIONES MDE?\n                item.appendChild(new Listcell(rev_aprob_emp)); //APROBAR EMPRESA MANTENIMIENTO ?\n                item.appendChild(new Listcell(rev_activo)); //ACTIVO ?\n                \n                // Agregar el botón \"Borrar\"\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                        \n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                    } \n                });\n\n                // Agregar el Listitem a la grilla\n                comp_GRID_revisores.appendChild(item);\n            }\n            \n            \n        }catch (Exception e) \n        {\n            Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        \n        \n    break;\n        \n    \n    case \"Habilitación de Empresas\":\n        \n        reestablecerBotonesExcepto(\"Habilitación de Empresas\");\n        limpiarGrillasExcepto(\"Empresas de Mantenimiento\");\n        \n        \n\t\t//LLAMAR METODOS PARA LIMPIAR COMPONENTES\n        restablecerComponentesEmpresa(); //Empresa\n        restablecerComponentesPersona(); //Persona\n        restablecerComponentesInmueble(); //Inmueble\n        restablecerComponentesMDE(); //MDE\n        restablecerComponentesRevisores(); //Revisores\n        restablecerComponentesHMDE(); //HMDE\n        \n        \n        //LLAMAR METODO PARA DESACTIVAR CONTENEDORES\n        desactivarContenedoresExcepto(\"cont_ABM_HDE\", \"cont_CL_HDE\");\n        \n        \n        //CARGAR EMPRESAS Y REVISORES EN CMB\n        try {\n            \n            //EMPRESA DE MANTENIMIENTO (GET)\n            java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n            Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\n            for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n                \n                boolean emp_activa = (boolean) return78map.get(\"empresas\").get(i).get(\"emp_activa\");\n                \n                if (emp_activa) {\n                    \n                    String emp_id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n                    String emp_razon = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n\n                    Comboitem item = new Comboitem();                \n                    item.setLabel(emp_razon);\n                    item.setValue(emp_id);\n                    item.setParent(comp_CMB_ehaEmpMant);\n                    \n                }\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        try {\n            \n            //REVISOR (GET)\n             java.util.List parametrosfnGetRevisores = new java.util.ArrayList();\n            parametrosfnGetRevisores.add(2); //listar_Revisores / int\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetRevisores\",parametrosfnGetRevisores);\n            Map return94map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return94map\");\n            \n            for (int i = 0; i < return94map.get(\"revisores\").size(); i++){\n                \n                boolean rev_activo = (boolean) return94map.get(\"revisores\").get(i).get(\"rev_activo\");\n                \n                if (rev_activo) {\n                    \n                    String rev_id = return94map.get(\"revisores\").get(i).get(\"rev_id\").toString(); \n                    String rev_apellido = return94map.get(\"revisores\").get(i).get(\"rev_apellido\").toString();\n\n                    Comboitem item = new Comboitem();                \n                    item.setLabel(rev_apellido);\n                    item.setValue(rev_id);\n                    item.setParent(comp_CMB_ehaRevisor);\n                }\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de REVISOR NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        \n        \n        //CARGAR EMPRESAS HABILITADAS\n        //try {\n            \n            //HABILITACION DE EMPRESAS (GET)\n            java.util.List parametrosfnGetHabilitacionEmpresas = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetHabilitacionEmpresas\",parametrosfnGetHabilitacionEmpresas);\n            Map return95map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return95map\");\n    \n        \n            // Definir el formato de fecha original y el formato deseado\n            SimpleDateFormat apiDate = new SimpleDateFormat(\"yyyy-MM-dd\");\n            SimpleDateFormat dateFormateado = new SimpleDateFormat(\"dd/MM/yyyy\"); \n            \n            for (int i = 0; i < return95map.get(\"habilitacionEmpresas\").size(); i++){\n                \n                // Convertir la fecha de cadena a Date y formatearla\n    \t\t\tString fechaInicioAPI = return95map.get(\"habilitacionEmpresas\").get(i).get(\"eha_fecha\").toString(); \n                String fechaFinAPI = return95map.get(\"habilitacionEmpresas\").get(i).get(\"eha_vto_hab\").toString();\n                \n                // Convertir a objetos Date\n                Date fechaInicio = apiDate.parse(fechaInicioAPI);\n                Date fechaFin = apiDate.parse(fechaFinAPI);\n                \n                // Convertir a cadenas con el formato deseado\n                String fechaInicioFormatted = dateFormateado.format(fechaInicio);\n                String fechaFinFormatted = dateFormateado.format(fechaFin);\n\n                \n                //DATOS API\n                String eha_id = return95map.get(\"habilitacionEmpresas\").get(i).get(\"eha_id\").toString(); \n                \n                //EMPRESA\n                String emp_id = return95map.get(\"habilitacionEmpresas\").get(i).get(\"empresa\").get(\"emp_id\").toString();\n                String emp_razon = return95map.get(\"habilitacionEmpresas\").get(i).get(\"empresa\").get(\"emp_razon\").toString();\n                \n                String eha_expediente = return95map.get(\"habilitacionEmpresas\").get(i).get(\"eha_expediente\").toString();\n                \n                //REVISOR\n                String rev_id = return95map.get(\"habilitacionEmpresas\").get(i).get(\"revisor\").get(\"rev_id\").toString();\n                String rev_apellido = return95map.get(\"habilitacionEmpresas\").get(i).get(\"revisor\").get(\"rev_apellido\").toString();\n                \n                boolean empresaHBooleano = (boolean) return95map.get(\"habilitacionEmpresas\").get(i).get(\"eha_habilitada\");\n    \t\t\tString eha_habilitada = empresaHBooleano ? \"SI\" : \"NO\";\n                \n                boolean activoBooleano = (boolean) return95map.get(\"habilitacionEmpresas\").get(i).get(\"eha_activo\");\n    \t\t\tString eha_activo = activoBooleano ? \"SI\" : \"NO\";\n                \n                //LISTAR EN LA GRILLA\n                Listitem item = new Listitem();\n\n                item.appendChild(new Listcell(eha_id));\n                item.appendChild(new Listcell(emp_id));\n                item.appendChild(new Listcell(emp_razon));\n                item.appendChild(new Listcell(fechaInicioFormatted));\n                item.appendChild(new Listcell(eha_expediente));\n                item.appendChild(new Listcell(fechaFinFormatted));\n                item.appendChild(new Listcell(eha_habilitada));\n                item.appendChild(new Listcell(rev_id));\n                item.appendChild(new Listcell(rev_apellido));\n                item.appendChild(new Listcell(eha_activo));\n                \n                \n                // Agregar el botón \"Borrar\"\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                        \n                    } \n                });\n                \n                comp_GRID_habilitacionesempresas.appendChild(item);\n\n            }\n            \n        /*} catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de REVISOR NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }*/\n        \n        \n\n        \n    break;\n        \n\n    case \"Habilitación de Medios de Elevación\":\n        \n        //comp_CMB_mhaEmpMant.setDisabled(true);\n        \n        reestablecerBotonesExcepto(\"Habilitación de Medios de Elevación\");\n        limpiarGrillasExcepto(\"Empresas de Mantenimiento\");\n      \n        //LLAMAR METODOS PARA LIMPIAR COMPONENTES\n        restablecerComponentesEmpresa(); //Empresa\n        restablecerComponentesPersona(); //Persona\n        restablecerComponentesInmueble(); //Inmueble\n        restablecerComponentesMDE(); //MDE\n        restablecerComponentesRevisores(); //Revisores\n        restablecerComponentesHDE(); //HDE\n        \n        //LLAMAR METODO PARA DESACTIVAR CONTENEDORES\n        desactivarContenedoresExcepto(\"cont_ABM_HDMDE\", \"cont_CL_HMDE\");\n        \n        \n        \n        \n        // - - - INMUEBLES MEDIOS DE ELEVACION - - -\n        try {\n            \n            //MEDIOS DE ELEVACION (GET) /matias\n            java.util.List parametrosfnGetPrimerMedioDeElevacionInmueble = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPrimerMedioDeElevacionInmueble\",parametrosfnGetPrimerMedioDeElevacionInmueble);\n            Map return86map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return86map\");\n\n            for (int i = 0; i < return86map.get(\"medioElevacionesInmueble\").size(); i++){\n                \n                String mde_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_id\").toString(); //ID MDE\n                \n                String ime_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"ime_id\").toString(); //ID INMUEBLE-MDE\n                \n                //PADRON\n                String inm_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"inmueble\").get(\"inm_id\").toString();\n                String inm_padron = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"inmueble\").get(\"inm_padron\").toString();\n                \n                //TIPO MAQUINA\n                String tma_id = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"tiposMaquinas\").get(\"tma_id\").toString();\n                String tma_detalle = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"tiposMaquinas\").get(\"tma_detalle\").toString();\n                \n\t\t\t\t//MDE\n                String mde_ubicacion = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_ubicacion\").toString();\n                String mde_tipo = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_tipo\").toString();\n                String mde_niveles = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_niveles\").toString();\n                boolean planosAB = (boolean) return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_planos_aprob\");\n                String mde_planos_aprob = planosAB ? \"SI\" : \"NO\";\n                String mde_expte_planos = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_expte_planos\").toString(); \n                boolean activoMde = (boolean) return86map.get(\"medioElevacionesInmueble\").get(i).get(\"mde_activo\");\n  \t\t\t\tString mde_activo = activoMde ? \"SI\" : \"NO\";\n                \n                \n                \n                //EMPRESA DE MANTENIMIENTO\n                Object empresasObj = return86map.get(\"medioElevacionesInmueble\").get(i).get(\"empresa\");\n                String rasonS = \"-\";\n                \n                //Se verifica si empresasObj no es null y es de tipo Map.\n                if (empresasObj != null && empresasObj instanceof Map) {\n                    \n                    //Si se cumple la condición, se convierte empresasObj en un Map llamado empresasMap\n                    Map empresasMap = (Map) empresasObj;\n                    //Se obtiene el valor correspondiente a la clave \"emp_razon\" en el mapa empresasMap.\n                    Object empRazonObj = empresasMap.get(\"emp_razon\");\n                    \n                    //Se obtiene el valor correspondiente a la clave \"emp_razon\" en el mapa empresasMap.\n                    if (empRazonObj != null) {\n                        rasonS = empRazonObj.toString();\n                    }\n                }\n\n                //LISTAR EN LA GRILLA\n                Listitem item = new Listitem();\n                \n                item.appendChild(new Listcell(ime_id));\n\t\t\t\titem.appendChild(new Listcell(mde_id));\n                item.appendChild(new Listcell(tma_detalle)); \n                item.appendChild(new Listcell(inm_padron)); \n                item.appendChild(new Listcell(inm_id)); \n                item.appendChild(new Listcell(mde_ubicacion));\n                item.appendChild(new Listcell(mde_tipo));\n                item.appendChild(new Listcell(mde_niveles));\n                item.appendChild(new Listcell(mde_planos_aprob)); //PLANOS APROBADOS ?\n                item.appendChild(new Listcell(mde_expte_planos));\n                item.appendChild(new Listcell(rasonS));\n                item.appendChild(new Listcell(mde_activo)); //MEDIO DE ELAVACION ACTIVO ?\n                \n                // Agregar el botón \"Borrar\"\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                        \n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                    } \n                });\n\n                // Agregar el Listitem a la grilla\n                comp_GRID_medioselevacion.appendChild(item);\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de MEDIOS DE ELEVACIÓN NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        // - - - INMUEBLES MEDIOS DE ELEVACION - - -\n        \n        \n        // - - - EMPRESAS DE MANTENIMIENTO - - - \n        try {\n            \n            //EMPRESA DE MANTENIMIENTO (GET)\n            java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n            Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\n            for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n                \n                boolean emp_activa = (boolean) return78map.get(\"empresas\").get(i).get(\"emp_activa\");\n            \n            \tif (emp_activa) {\n                    \n                    String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n                    String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n\n                    Comboitem item = new Comboitem();                \n                    item.setLabel(razonS);\n                    item.setValue(id); // Establecer el ID como el valor del Comboitem\n                    item.setParent(comp_CMB_mhaEmpMant);\n                }  \n            }\n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de EMPRESAS DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        // - - - EMPRESAS DE MANTENIMIENTO - - -\n        \n        \n        // - - - GET REVISORES - - - \n        try {\n            \n            //REVISOR (GET)\n            java.util.List parametrosfnGetRevisores = new java.util.ArrayList();\n            parametrosfnGetRevisores.add(1); //listar_Revisores / int\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetRevisores\",parametrosfnGetRevisores);\n            Map return94map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return94map\");\n            \n            for (int i = 0; i < return94map.get(\"revisores\").size(); i++){\n                \n                boolean rev_activo = (boolean) return94map.get(\"revisores\").get(i).get(\"rev_activo\");\n                \n                if (rev_activo) {\n                    \n                    String rev_id = return94map.get(\"revisores\").get(i).get(\"rev_id\").toString(); \n                    String rev_apellido = return94map.get(\"revisores\").get(i).get(\"rev_apellido\").toString();\n\n                    Comboitem item = new Comboitem();                \n                    item.setLabel(rev_apellido);\n                    item.setValue(rev_id);\n                    item.setParent(comp_CMB_mhaRevisor);\n                    \n                }\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de REVISOR NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        // - - - GET REVISORES - - -  \n\n        \n        \n        // - - - GET HABILITACION MDE - - - \n        // Definir el formato de fecha original y el formato deseado\n        SimpleDateFormat apiDate = new SimpleDateFormat(\"yyyy-MM-dd\");\n        SimpleDateFormat dateFormateado = new SimpleDateFormat(\"dd/MM/yyyy\");\n        try {\n            \n            //HABILITACIÓN DE MEDIOS DE ELEVACIÓN (GET)\n            java.util.List parametrosfnGetHabilitacionMDE = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetHabilitacionMDE\",parametrosfnGetHabilitacionMDE);\n            Map return103map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return103map\");\n            \n            for (int i = 0; i < return103map.get(\"habilitacionMDE\").size(); i++){\n                \n                String mha_id = return103map.get(\"habilitacionMDE\").get(i).get(\"mha_id\").toString(); \n                \n                String mha_inm_padron_guardado = return103map.get(\"habilitacionMDE\").get(i).get(\"mha_inm_padron_guardado\").toString();\n                \n                //MDE Y TM\n                String mde_ubicacion = return103map.get(\"habilitacionMDE\").get(i).get(\"medioElevacion\").get(\"mde_ubicacion\").toString();\n                String tma_detalle = return103map.get(\"habilitacionMDE\").get(i).get(\"medioElevacion\").get(\"tma_detalle\").toString();\n                \n                String id_Empresa = return103map.get(\"habilitacionMDE\").get(i).get(\"empresa\").get(\"emp_id\").toString();\n                String mha_razon_empresa = return103map.get(\"habilitacionMDE\").get(i).get(\"empresa\").get(\"emp_razon\").toString();\n                \n                String per_apellido = return103map.get(\"habilitacionMDE\").get(i).get(\"persona\").get(\"per_apellido\").toString();\n                \n                \n                // Convertir la fecha de cadena a Date y formatearla\n    \t\t\tString fecha_Habilitacion_API = return103map.get(\"habilitacionMDE\").get(i).get(\"mha_fecha\").toString(); \n                String fecha_Vto_API = return103map.get(\"habilitacionMDE\").get(i).get(\"mha_fecha_vto\").toString();\n                String mha_fecha_pago = return103map.get(\"habilitacionMDE\").get(i).get(\"mha_fecha_pago\").toString();\n                String mha_fecha_inspec = return103map.get(\"habilitacionMDE\").get(i).get(\"mha_fecha_inspec\").toString();\n                \n                // Convertir a objetos Date\n                Date fecha_habilitacion = apiDate.parse(fecha_Habilitacion_API);\n                Date fecha_Vto = apiDate.parse(fecha_Vto_API);\n                \n                Date fecha_pago = apiDate.parse(mha_fecha_pago);\n                Date fecha_inspeccion = apiDate.parse(mha_fecha_inspec);\n                \n                // Convertir a cadenas con el formato deseado\n                String fechaHabilitacion_Formatted = dateFormateado.format(fecha_habilitacion);\n                String fechaVto_Formatted = dateFormateado.format(fecha_Vto); \n                String fecha_pago_Formatted = dateFormateado.format(fecha_pago);\n                String fecha_inspeccion_Formatted = dateFormateado.format(fecha_inspeccion); \n                \n                String mha_expediente = return103map.get(\"habilitacionMDE\").get(i).get(\"mha_expediente\").toString(); \n                \n                boolean mha_habilitadBooleano = (boolean) return103map.get(\"habilitacionMDE\").get(i).get(\"mha_habilitado\");\n    \t\t\tString mha_habilitado = mha_habilitadBooleano ? \"SI\" : \"NO\";\n                \n                boolean mha_obleaBooleano = (boolean) return103map.get(\"habilitacionMDE\").get(i).get(\"mha_oblea_entregada\");\n    \t\t\tString mha_oblea_entregada = mha_obleaBooleano ? \"SI\" : \"NO\";\n                \n                String mha_apellido_Revisor = return103map.get(\"habilitacionMDE\").get(i).get(\"revisor\").get(\"rev_apellido\").toString();\n                \n                boolean mha_activoBooleano = (boolean) return103map.get(\"habilitacionMDE\").get(i).get(\"mha_activo\");\n    \t\t\tString mha_activo = mha_activoBooleano ? \"SI\" : \"NO\";\n\n                String ubicacion_detalle = tma_detalle + \" - \" + mde_ubicacion;\n                \n                //LISTAR EN LA GRILLA\n                Listitem item = new Listitem();\n\n                item.appendChild(new Listcell(mha_id));\n                item.appendChild(new Listcell(mha_inm_padron_guardado));\n                item.appendChild(new Listcell(ubicacion_detalle));\n                item.appendChild(new Listcell(id_Empresa));\n                item.appendChild(new Listcell(mha_razon_empresa));\n                item.appendChild(new Listcell(per_apellido));\n                item.appendChild(new Listcell(fechaHabilitacion_Formatted));\n                item.appendChild(new Listcell(mha_expediente));\n                item.appendChild(new Listcell(fechaVto_Formatted));\n                item.appendChild(new Listcell(fecha_pago_Formatted));\n                item.appendChild(new Listcell(fecha_inspeccion_Formatted));\n                item.appendChild(new Listcell(mha_habilitado));\n                item.appendChild(new Listcell(mha_oblea_entregada));\n                item.appendChild(new Listcell(mha_apellido_Revisor));\n                item.appendChild(new Listcell(mha_activo));              \n\n                // Agregar el botón \"Borrar\"\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                    } \n                });\n                \n                comp_GRID_habilitacionesmedios.appendChild(item);\n            }\n\n        } \n        catch (Exception e) \n        {\n            Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n        // - - - GET HABILITACION MDE - - -  \n        \n        \n    break;\n        \n    \n    case \"Trazabilidad\":\n        \n        cont_ABM_EmpresaM.setVisible(false);\n        cont_CL_EmpresasM.setVisible(false);\n        cont_ABM_Personas.setVisible(false);\n        cont_CL_Personas.setVisible(false);\n        cont_ABM_Inmuebles.setVisible(false);\n        cont_CL_Inmuebles.setVisible(false);\n        cont_ABM_ME.setVisible(false);\n        cont_CL_MDE.setVisible(false);\n        cont_ABM_RevisoresE.setVisible(false);\n        cont_CL_RevisoresE.setVisible(false);\n        cont_ABM_HDE.setVisible(false);\n        cont_CL_HDE.setVisible(false);\n        cont_ABM_HDMDE.setVisible(false);\n        cont_CL_HMDE.setVisible(false);\n        cont_Trazabilidad.setVisible(true);\n        cont_Botones.setVisible(true);\n        \n    break;\n        \n    default: \n        \n        cont_ABM_EmpresaM.setVisible(false);\n        cont_CL_EmpresasM.setVisible(false);\n        cont_ABM_Personas.setVisible(false);\n        cont_CL_Personas.setVisible(false);\n        cont_ABM_Inmuebles.setVisible(false);\n        cont_CL_Inmuebles.setVisible(false);\n        cont_ABM_ME.setVisible(false);\n        cont_CL_MDE.setVisible(false);\n        cont_ABM_RevisoresE.setVisible(false);\n        cont_CL_RevisoresE.setVisible(false);\n        cont_ABM_HDE.setVisible(false);\n        cont_CL_HDE.setVisible(false);\n        cont_ABM_HDMDE.setVisible(false);\n        cont_CL_HMDE.setVisible(false);\n        cont_Trazabilidad.setVisible(false);\n        cont_Botones.setVisible(false);\n\n    break;\n}\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Empresas de Mantenimiento','Empresas de Mantenimiento',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Personas','Personas',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Inmuebles','Inmuebles',1,4,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Medios de Elevación','Medios de Elevación',1,5,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Revisores DOP y Permisos','Revisores DOP y Permisos',1,6,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Habilitación de Empresas','Habilitación de Empresas',1,7,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Habilitación de Medios de Elevación','Habilitación de Medios de Elevación',1,8,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Trazabilidad','Trazabilidad',1,9,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,1,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_ABM_EmpresaM','Altas, Bajas y Modificaciones de Empresas de Mantenimiento',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',3,'',8358,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8358,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_RS_CUIT_Dom',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Razon_Social',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empRazonSocial','Razón Social o Nombre:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_empRazonSocial','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_empRazonSocial=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocial\");\n\n\n// Regex para validar solo letras (mayúsculas y minúsculas), acentos, y espacios\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$\";\nString texto = comp_TXT_empRazonSocial.getValue();\n\n\nif (texto.length() <= 60 && texto.matches(regex) && !texto.equals(\"-\")) {\n    \n    // Texto válido\n    comp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    // Texto no válido\n    Clients.showNotification(\"Ingrese una razón social o nombre válido.\", \"error\", comp_TXT_empRazonSocial, \"\", 3100);\n    comp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: red\");\n    comp_TXT_empRazonSocial.setValue(\"-\");\n}\n   ','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Cuit',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empCUIT','CUIT:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_empCUIT','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'/*import org.zkoss.zul.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport modelos.builder.componentes.*;\n\nModeloComponente sup = new ModeloComponente();\n\nTextbox comp_TXT_empCUIT=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUIT\");\n\n\nString dato = comp_TXT_empCUIT.getValue();\ndato = dato.replaceAll(\"-\", \"\");\n\n// Patrón para verificar que no haya 11 ceros consecutivos\nString patronCerosConsecutivos = \".*0{11}.*\";\nif (dato.matches(patronCerosConsecutivos)) {\n    \n    Messagebox.show(\"El CUIT no puede contener 11 ceros consecutivos\", \"Advertencia\", null, null, null);\n    comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: red\");\n    comp_TXT_empCUIT.setValue(\"-\");\n\n} else {\n    \n    // Continuar con la validación del CUIT\n    String patroncuil = \"[0-9]{11}\"; // Patrón para números\n    String cuil = dato;\n    Pattern patternCUIL = Pattern.compile(patroncuil);\n    Matcher matcherCUIL = patternCUIL.matcher(cuil);\n    boolean cuilerror = false;\n    String cuit = \"\";\n    \n    if (comp_TXT_empCUIT.getValue().trim().equals(\"-\")) {\n        //No ha cargado nada\n    } else if (!matcherCUIL.matches()) {\n        \n        Messagebox.show(\"Por favor, ingrese los once dígitos del CUIT.\", \"Advertencia\", null, null, null);\n        comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: red\");\n        comp_TXT_empCUIT.setValue(\"-\");\n    \n    } else {\n        \n        cuit = dato;\n        String prefijo = cuit.substring(0, 2);\n        \n        //prefijo para personas 20 23 24 27\n        //Agregar prefijo para empresas si es que se necesita 30, 33, 34\n        \n        if(prefijo.contains(\"30\") || prefijo.contains(\"33\") || prefijo.contains(\"34\") ){\n            \n            if(cuit.contains(\"-\")){\n                \n                cuit = cuit.substring(0, 2) + cuit.substring(3, 11) + cuit.substring(12);\n            \n            }\n            \n            //la secuencia de valores de factor es 5, 4, 3, 2, 7, 6, 5, 4, 3, 2\n            int factor;\n            factor = 5;\n            int[] c = new int[11];\n            int resultado = 0;\n            int ultimoint = Integer.parseInt(Character.toString(cuit.charAt(cuit.length() - 1)));\n            for (int i = 0; i < 10; i++) {\n                \n                c[i] = Integer.parseInt(Character.toString(cuit.charAt(i)));\n                resultado = resultado + c[i] * factor;\n                factor = (factor == 2) ? 7 : factor - 1;\n                System.out.println(resultado);\n            }\n            \n            int control = 0;\n            int ver = (resultado % 11);\n            \n            if (ver == 0) {\n                control = ver;\n            } else {\n                control = 11 - ver;\n\n            }\n            if (control == ultimoint) {\n                cuilerror = false;\n            } else {\n                cuilerror = true;\n            }\n            \n            \n            //Eliminar guiones\n            //  String datos = comp_TXT_cuitPersoJuri.getValue();\n            //String cuitLimpio = datos.replaceAll(\"[^0-9-]\", \"\");\n            // Reemplaza cualquier secuencia de guiones por dos guiones\n            //cuitLimpio = cuitLimpio.replaceAll(\"[\\\\s-]\", \"\");\n            \n           comp_TXT_empCUIT.setValue(dato);\n            \n            if (cuilerror) {\n                Messagebox.show(\"Por favor, ingrese un CUIT válido.\", \"Advertencia\", null, null, null);\n                comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: red\");\n                comp_TXT_empCUIT.setValue(\"-\");\n            \n            } else {\n                \n                comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: #606060\");\n            \n            }\n        \n        }else{\n            \n            Messagebox.show(\"El Prefijo del Cuit no corresponde con el de una Empresa.\");\n            comp_TXT_empCUIT.setValue(\"-\");\n        }\n    }\n}*/','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Domicilio',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empDomic','Domicilio Legal:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_empDomic','',@vIdDistribucionCells,'Textbox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_empDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empDomic\");\n\n\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\\\d ]*$\";\nString texto = comp_TXT_empDomic.getValue();\n\n\nif (texto.length() <= 60 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un domicilio legal válido.\", \"error\", comp_TXT_empDomic, \"\", 3100);\n    comp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: red\");\n    comp_TXT_empDomic.setValue(\"-\");\n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Telefono_Correo',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Telefono',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empTelefono','Teléfono:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_empTelefono','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_empTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empTelefono\");\n\n\nString regex = \"[0-9]{10,13}\";\nString texto = comp_TXT_empTelefono.getValue();\n\n\nif (texto.matches(regex) && !texto.equals(\"-\")) {\n    \n    comp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un número de teléfono válido.\", \"error\", comp_TXT_empTelefono, \"\", 3100);\n    comp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: red\");\n    comp_TXT_empTelefono.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Correo',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empCorreo','Correo Electrónico:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_empCorreo','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_empCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCorreo\");\n\nString regex = \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\";\nString texto = comp_TXT_empCorreo.getValue();\n\n\nif (texto.length() <= 30 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_empCorreo.setStyle(comp_TXT_empCorreo.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un correo electrónico válido.\", \"error\", comp_TXT_empCorreo, \"\", 3100);\n    comp_TXT_empCorreo.setStyle(comp_TXT_empCorreo.getStyle() + \"; border-color: red\");\n    comp_TXT_empCorreo.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_EM_Activo',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_EM_Activo',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empActiva','Activo:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_empActiva','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Grilla_Empresas',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px; margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones_Grilla_EM',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_empAgregar','Agregar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_empresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_empresas\");\n\n//TXT\nTextbox comp_TXT_empRazonSocial=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocial\");\nTextbox comp_TXT_empCUIT=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUIT\");\nTextbox comp_TXT_empDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empDomic\");\nTextbox comp_TXT_empTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empTelefono\");\nTextbox comp_TXT_empCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCorreo\");\n\n//CHEK\nCheckbox comp_CHK_empActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_empActiva\");\n\n//BTN\nButton comp_BTN_empAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_empAgregar\");\nButton comp_BTN_empEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_empEditar\");\nButton comp_BTN_empCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_empCancelar\");\n\n\n//METODO\nprivate void restablecerComponentes(){\n    \n    comp_TXT_empRazonSocial.setValue(\"-\");\n    comp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: #606060\");\n    comp_TXT_empCUIT.setValue(\"-\");\n    comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: #606060\");\n    comp_TXT_empDomic.setValue(\"-\");\n    comp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: #606060\");\n    comp_TXT_empTelefono.setValue(\"-\");\n    comp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: #606060\");\n    comp_TXT_empCorreo.setValue(\"-\");\n    comp_TXT_empCorreo.setStyle(comp_TXT_empCorreo.getStyle() + \"; border-color: #606060\");\n    comp_CHK_empActiva.setChecked(true);\n    \n}\n\n\n/****************************LÓGICA****************************/\nif(comp_TXT_empRazonSocial.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe cargar una Razón Social o Nombre.\", \"error\", comp_TXT_empRazonSocial, \"\",3100);\n    comp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_empCUIT.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe cargar un CUIT.\", \"error\", comp_TXT_empCUIT, \"\",3100);\n    comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_empDomic.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe cargar un Domicilio Legal.\", \"error\", comp_TXT_empDomic, \"\",3100);\n    comp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_empTelefono.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe cargar un Teléfono.\", \"error\", comp_TXT_empTelefono, \"\",3100);\n    comp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_empCorreo.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe cargar un Correo Electrónico.\", \"error\", comp_TXT_empCorreo, \"\",3100);\n    comp_TXT_empCorreo.setStyle(comp_TXT_empCorreo.getStyle() + \"; border-color: red\");\n\n}else{\n    \n    try {\n        \n        //EMPRESA DE MANTENIMIENTO (POST)\n        java.util.List parametrosfnPostEmpresaMantenimiento = new java.util.ArrayList();\n        parametrosfnPostEmpresaMantenimiento.add(comp_TXT_empRazonSocial.getValue().trim()); //razonSocial / String\n        parametrosfnPostEmpresaMantenimiento.add(comp_TXT_empCUIT.getValue().trim()); //cuit / String\n        parametrosfnPostEmpresaMantenimiento.add(comp_TXT_empDomic.getValue().trim()); //domicilioL / String\n        parametrosfnPostEmpresaMantenimiento.add(comp_TXT_empTelefono.getValue().trim()); //telefono / String\n        parametrosfnPostEmpresaMantenimiento.add(comp_TXT_empCorreo.getValue().trim()); //correo / String\n        parametrosfnPostEmpresaMantenimiento.add(comp_CHK_empActiva.isChecked()); //activa / Boolean\n    \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostEmpresaMantenimiento\",parametrosfnPostEmpresaMantenimiento);\n        \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de Empresas de Mantenimiento NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    \n    try {\n\n        //EMPRESA DE MANTENIMIENTO (GET)\n        java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n        Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n        \n        int size = return78map.get(\"empresas\").size();\n        String emp_id = return78map.get(\"empresas\").get(size - 1).get(\"emp_id\").toString();\n        \n        \n        Listitem item = new Listitem();\n        \n        item.appendChild(new Listcell(emp_id));\n        item.appendChild(new Listcell(comp_TXT_empRazonSocial.getValue()));\n        item.appendChild(new Listcell(comp_TXT_empCUIT.getValue()));\n        item.appendChild(new Listcell(comp_TXT_empDomic.getValue()));\n        item.appendChild(new Listcell(comp_TXT_empTelefono.getValue()));\n        item.appendChild(new Listcell(comp_TXT_empCorreo.getValue()));\n        item.appendChild(new Listcell(comp_CHK_empActiva.isChecked() ? \"SI\" : \"NO\"));\n\n\n        Toolbarbutton desv = new Toolbarbutton();\n        desv.setAttribute(\"item\", item);\n        Listcell reg1 = new Listcell();\n        reg1.setStyle(\"text-align:center;\");\n        reg1.setParent(item);\n        desv.setParent(reg1);\n        desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n        desv.setLabel(\"Borrar\");\n        desv.setWidth(\"80px\");\n        desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n            public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                \n                final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                int ind = i.getIndex();\n                comp_GRID_empresas.removeItemAt(ind);\n                \n                //Llamar método restablecerComponentes\n                restablecerComponentes();\n\n                //comp_BTN_empEditar.setLabel(\"Editar\");\n                //comp_BTN_empEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n\n            }\n        });\n\n        comp_GRID_empresas.appendChild(item); // Se guarda en la grilla item\n        \n        //Llamar método restablecerComponentes\n        restablecerComponentes();\n\n        //comp_BTN_empEditar.setDisabled(false);\n        //comp_BTN_empCancelar.setDisabled(false);\n        \n        \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API GET de Empresas de Mantenimiento NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_empEditar','Editar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_empresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_empresas\");\n\n//TXT\nTextbox comp_TXT_empRazonSocial=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocial\");\nTextbox comp_TXT_empCUIT=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUIT\");\nTextbox comp_TXT_empDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empDomic\");\nTextbox comp_TXT_empTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empTelefono\");\nTextbox comp_TXT_empCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCorreo\");\n\n//CHK\nCheckbox comp_CHK_empActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_empActiva\");\n\n//BTN\nButton comp_BTN_empAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_empAgregar\");\nButton comp_BTN_empEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_empEditar\");\nButton comp_BTN_empCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_empCancelar\");\n\n\n\n/****************************LÓGICA****************************/\nint indice= comp_GRID_empresas.getSelectedIndex();\n\nif (indice == -1) {\n    \n    Messagebox.show(\"Por favor, seleccione el registro que desea Editar.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else {\n    \n    org.zkoss.zul.Listitem item = (org.zkoss.zul.Listitem) comp_GRID_empresas.getItemAtIndex(indice);\n    Listcell cel0 = (Listcell) item.getChildren().get(0);\n    Listcell cel1 = (Listcell) item.getChildren().get(1);\n    Listcell cel2 = (Listcell) item.getChildren().get(2);\n    Listcell cel3 = (Listcell) item.getChildren().get(3);\n    Listcell cel4 = (Listcell) item.getChildren().get(4);\n    Listcell cel5 = (Listcell) item.getChildren().get(5);\n    Listcell cel6 = (Listcell) item.getChildren().get(6);\n        \n    \n    if (comp_BTN_empEditar.getLabel().equals(\"Editar\")){\n        \n        //comp_TXT_empRazonSocial.setValue(item.getChildren().get(0).getLabel().trim());\n\t\tString nombre = item.getChildren().get(1).getLabel().trim();\n\t\tString cuit = item.getChildren().get(2).getLabel().trim();\n\t\tString domicilioL = item.getChildren().get(3).getLabel().trim();\n\t\tString telefono = item.getChildren().get(4).getLabel().trim();\n\t\tString correo = item.getChildren().get(5).getLabel().trim();\n\t\tString activo = item.getChildren().get(6).getLabel().trim();\n        \n        comp_TXT_empRazonSocial.setValue(nombre);\n        comp_TXT_empCUIT.setValue(cuit);\n        comp_TXT_empDomic.setValue(domicilioL);\n        comp_TXT_empTelefono.setValue(telefono);\n        comp_TXT_empCorreo.setValue(correo);\n        comp_CHK_empActiva.setValue(activo);\n        \n        comp_CHK_empActiva.setChecked(\"SI\".equals(activo));\n        \n        comp_BTN_empEditar.setLabel(\"Guardar Cambios\");\n        comp_BTN_empEditar.setStyle(\"margin-left:25px; background:#008000; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        comp_BTN_empAgregar.setDisabled(true);\n    \n    }else if (comp_BTN_empEditar.getLabel().equals(\"Guardar Cambios\")){\n        \n        //VALIDAR QUE NINGUN DATOS ESTE CON \"-\"\n        if(comp_TXT_empRazonSocial.getValue().equals(\"-\")){\n    \n            Clients.showNotification(\"Debe cargar una Razón Social o Nombre.\", \"error\", comp_TXT_empRazonSocial, \"\",3100);\n            comp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_empCUIT.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe cargar un CUIT.\", \"error\", comp_TXT_empCUIT, \"\",3100);\n            comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_empDomic.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe cargar un Domicilio Legal.\", \"error\", comp_TXT_empDomic, \"\",3100);\n            comp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_empTelefono.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe cargar un Teléfono.\", \"error\", comp_TXT_empTelefono, \"\",3100);\n            comp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_empCorreo.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe cargar un Correo Electrónico.\", \"error\", comp_TXT_empCorreo, \"\",3100);\n            comp_TXT_empCorreo.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: red\");\n\n        }else{\n            \n            cel1.setLabel(comp_TXT_empRazonSocial.getValue());\n            cel1.setParent(item);\n\n            cel2.setLabel(comp_TXT_empCUIT.getValue());\n            cel2.setParent(item);\n\n            cel3.setLabel(comp_TXT_empDomic.getValue());\n            cel3.setParent(item);\n\n            cel4.setLabel(comp_TXT_empTelefono.getValue());\n            cel4.setParent(item);\n\n            cel5.setLabel(comp_TXT_empCorreo.getValue());\n            cel5.setParent(item);\n            \n            cel6.setLabel(comp_CHK_empActiva.isChecked() ? \"SI\" : \"NO\");\n\t\t\tcel6.setParent(item);\n            \n            String id = ((org.zkoss.zul.Listcell) item.getChildren().get(0)).getLabel().trim();\n        \tint idInt = Integer.parseInt(id);\n            \n            //try {\n                \n                java.util.List parametrosfnPutEmpresaMantenimiento = new java.util.ArrayList();\n                parametrosfnPutEmpresaMantenimiento.add(idInt); //id / int\n                parametrosfnPutEmpresaMantenimiento.add(comp_TXT_empRazonSocial.getValue().trim()); //razonSocial / String\n                parametrosfnPutEmpresaMantenimiento.add(comp_TXT_empCUIT.getValue().trim()); //cuit / String\n                parametrosfnPutEmpresaMantenimiento.add(comp_TXT_empDomic.getValue().trim()); //domicilioL / String\n                parametrosfnPutEmpresaMantenimiento.add(comp_TXT_empTelefono.getValue().trim()); //telefono / String\n                parametrosfnPutEmpresaMantenimiento.add(comp_TXT_empCorreo.getValue().trim()); //correo / String\n                parametrosfnPutEmpresaMantenimiento.add(comp_CHK_empActiva.isChecked()); //activa / Boolean\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutEmpresaMantenimiento\",parametrosfnPutEmpresaMantenimiento);\n                \n            /*} catch (Exception e) {\n                Messagebox.show(\"El servicio de la API PUT de Empresas de Mantenimiento NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n\n            }*/\n        \n            comp_TXT_empRazonSocial.setValue(\"-\");\n            comp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: #606060\");\n            comp_TXT_empCUIT.setValue(\"-\");\n            comp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: #606060\");\n            comp_TXT_empDomic.setValue(\"-\");\n            comp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: #606060\");\n            comp_TXT_empTelefono.setValue(\"-\");\n            comp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: #606060\");\n            comp_TXT_empCorreo.setValue(\"-\");\n            comp_TXT_empCorreo.setStyle(comp_TXT_empCorreo.getStyle() + \"; border-color: #606060\");\n            comp_CHK_empActiva.setChecked(true);\n            \n            comp_BTN_empEditar.setLabel(\"Editar\");\n        \tcomp_BTN_empEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n            comp_BTN_empAgregar.setDisabled(false);\n            \n        }\n    }    \n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_empCancelar','Cancelar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px;  background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\n\nModeloComponente sup = new ModeloComponente();\n\n//GRILLA\nListbox comp_GRID_empresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_empresas\");\n\n//TXT\nTextbox comp_TXT_empRazonSocial=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocial\");\nTextbox comp_TXT_empCUIT=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUIT\");\nTextbox comp_TXT_empDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empDomic\");\nTextbox comp_TXT_empTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empTelefono\");\nTextbox comp_TXT_empCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCorreo\");\n\n//CHK\nCheckbox comp_CHK_empActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_empActiva\");\n\n//BTN\nButton comp_BTN_empAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_empAgregar\");\nButton comp_BTN_empEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_empEditar\");\nButton comp_BTN_empCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_empCancelar\");\n\n\n\n/****************************LÓGICA****************************/\ncomp_TXT_empRazonSocial.setValue(\"-\");\ncomp_TXT_empRazonSocial.setStyle(comp_TXT_empRazonSocial.getStyle() + \"; border-color: #606060\");\ncomp_TXT_empCUIT.setValue(\"-\");\ncomp_TXT_empCUIT.setStyle(comp_TXT_empCUIT.getStyle() + \"; border-color: #606060\");\ncomp_TXT_empDomic.setValue(\"-\");\ncomp_TXT_empDomic.setStyle(comp_TXT_empDomic.getStyle() + \"; border-color: #606060\");\ncomp_TXT_empTelefono.setValue(\"-\");\ncomp_TXT_empTelefono.setStyle(comp_TXT_empTelefono.getStyle() + \"; border-color: #606060\");\ncomp_TXT_empCorreo.setValue(\"-\");\ncomp_TXT_empCorreo.setStyle(comp_TXT_empCorreo.getStyle() + \"; border-color: #606060\");\ncomp_CHK_empActiva.setChecked(true);\n\ncomp_BTN_empEditar.setLabel(\"Editar\");\ncomp_BTN_empEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\ncomp_BTN_empAgregar.setDisabled(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Grilla_EmpresaM',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_GRID_empresas','',@vIdDistribucionCells,'Listbox','100','%','130','px','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','height: auto !important;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,6,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,13,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,22,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,70,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,71,'true','null','1.0') ;
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Nombre',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'CUIT',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Domicilio Legal',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Teléfono',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Correo',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Activa',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_CL_EmpresasM','Consulta y Listado de Empresas de Mantenimiento',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',4,'',8359,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8359,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_ReporteEM',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_ReporteEM',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empOpcRep','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_empOpcRep','',@vIdDistribucionCells,'Combobox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.Component;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport org.zkoss.zul.Paging;\n\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_empOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_empOpcRep\");\nTextbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\nTextbox comp_TXT_empRazonSocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocRep\");\nButton comp_BTN_empGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_empGenRep\");\n\n\nString opciones = comp_CMB_empOpcRep.getValue().toString();\n\nif(opciones.equals(\"-\")){\n    \n    comp_TXT_empCUITRep.setDisabled(true);\n    comp_TXT_empRazonSocRep.setDisabled(true);\n\n    \n    comp_TXT_empCUITRep.setValue(\"-\");\n    comp_TXT_empRazonSocRep.setValue(\"-\");\n    \n    comp_BTN_empGenRep.setDisabled(true);\n        \n}else if(opciones.equals(\"Listado completo de empresas\")){\n    \n    comp_TXT_empCUITRep.setDisabled(true);\n    comp_TXT_empRazonSocRep.setDisabled(true);\n    \n    comp_TXT_empCUITRep.setValue(\"-\");\n\tcomp_TXT_empRazonSocRep.setValue(\"-\");\n    \n    comp_BTN_empGenRep.setDisabled(false);\n    \n}else if(opciones.equals(\"Datos de empresa por CUIT y/o Razón Social\")){\n    \n    comp_TXT_empCUITRep.setDisabled(false);\n    comp_TXT_empRazonSocRep.setDisabled(false);\n    \n    comp_BTN_empGenRep.setDisabled(false);\n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Listado completo de empresas','Listado completo de empresas',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Datos de empresa por CUIT y/o Razón Social','Datos de empresa por CUIT y/o Razón Social',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaEM',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_CUIT',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empCUITRep','CUIT:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_empCUITRep','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','rp_cuit1','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import modelos.builder.componentes.*;\nimport org.zkoss.zul.*;\n\nModeloComponente sup = new ModeloComponente();\n\nTextbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\nTextbox comp_TXT_empRazonSocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocRep\");\n\ncomp_TXT_empRazonSocRep.setValue(\"-\");\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Razon_Social',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empRazonSocRep','Razón Social:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_empRazonSocRep','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','rp_razo1','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import modelos.builder.componentes.*;\nimport org.zkoss.zul.*;\n\nModeloComponente sup = new ModeloComponente();\nTextbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\nTextbox comp_TXT_empRazonSocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocRep\");\n\ncomp_TXT_empCUITRep.setValue(\"-\");\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteEM',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteEM',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_empGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nTextbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\nTextbox comp_TXT_empRazonSocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocRep\");\nListbox comp_GRID_empresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_empresas\");\n\n\n\nprivate void generarReporte(){\n   \n    Map valorVariablesReportes = new java.util.HashMap();\n    valorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\n    valorVariablesReportes.put(\"p_cuit\", comp_TXT_empCUITRep.getValue());\n    valorVariablesReportes.put(\"p_empName\", comp_TXT_empRazonSocRep.getValue());\n    \n    //Función reporte\n    List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n    parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n    parametrosfnImprimirSelReporte.add(\"EmpresasDeMantenimiento.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n    new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n    org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                \n}\n\n\n\n\nif((!comp_TXT_empCUITRep.isDisabled() && comp_TXT_empCUITRep.getValue().equals(\"-\")) && (!comp_TXT_empRazonSocRep.isDisabled() && comp_TXT_empRazonSocRep.getValue().equals(\"-\"))){\n    \n    Messagebox.show(\"Debe ingresar un CUIT o Razón Social.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else{\n    \n    if(!comp_TXT_empCUITRep.getValue().equals(\"-\")){\n        \n        //SE ENCONTRO CUIT?\n        String cuit_Ingresado = comp_TXT_empCUITRep.getValue().trim();\n        boolean cuit_Encontrado = false;\n\n        for (Listitem item : comp_GRID_empresas.getItems()) {\n            \n            Listcell cell_Cuit = (Listcell) item.getChildren().get(2);\n\n            String cuit = cell_Cuit.getLabel().trim();\n\n            if(cuit.equals(cuit_Ingresado)) {\n                \n                cuit_Encontrado = true;\n                \n                //Función reporte\n                generarReporte();\n                break;\n            }\n        }\n        \n        if (!cuit_Encontrado) {\n            Messagebox.show(\"No se encontro el N° de CUIT ingresado \" + cuit_Ingresado + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n        \n    }else if(!comp_TXT_empRazonSocRep.getValue().equals(\"-\")){\n        \n        //SE ENCONTRO RAZON SOCIAL?\n        String razonSocial_Ingresada = comp_TXT_empRazonSocRep.getValue().trim();\n        boolean razonSocial_Encontrada = false;\n\n        for (Listitem item : comp_GRID_empresas.getItems()) {\n            \n            Listcell cell_razonSocial = (Listcell) item.getChildren().get(1);\n\n            String razonSocial = cell_razonSocial.getLabel().trim();\n\n            if(razonSocial.equals(razonSocial_Ingresada)) {\n                \n                razonSocial_Encontrada = true;\n                \n                //Función reporte\n                generarReporte();\n                break;\n            }\n        }\n        \n        if (!razonSocial_Encontrada) {\n            Messagebox.show(\"No se encontro el N° de CUIT ingresado \" + razonSocial_Ingresada + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n    }else{\n        \n        //Función reporte\n        generarReporte();\n    }\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_EM',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_EM',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_empFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_ABM_Personas','Altas, Bajas y Modificaciones de Personas',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',5,'',8360,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8360,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Carga_EM_Inmueble',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opcion_Carga',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perOpcCarga','Opciones de carga y edición:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_perOpcCarga','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//CMB\nCombobox comp_CMB_perOpcCarga=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcCarga\");\nCombobox comp_CMB_perEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMant\");\n\n//TXT\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\n\n//CHECK\nCheckbox comp_CHK_perEsSocio=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsSocio\");\nCheckbox comp_CHK_perEsRptte=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsRptte\");\nCheckbox comp_CHK_perEsAdmCon=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsAdmCon\");\nCheckbox comp_CHK_perEsCoprop=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsCoprop\");\n\norg.zkoss.zul.Textbox comp_TXT_ID_Empresa=(org.zkoss.zul.Textbox) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente(\"comp_TXT_ID_Empresa\");\n\n\nString tipo = comp_CMB_perOpcCarga.getValue().toString();\nswitch (tipo){\n    \n    case \"Personas por Empresa de Mantenimiento\":\n        \n        comp_CMB_perEmpMant.setDisabled(false);\n        comp_TXT_perPadron.setValue(\"-\");\n        comp_TXT_perPadron.setDisabled(true);\n        \n        comp_CHK_perEsSocio.setDisabled(false);\n        comp_CHK_perEsRptte.setDisabled(false);\n        comp_CHK_perEsAdmCon.setDisabled(true);\n        comp_CHK_perEsCoprop.setDisabled(true);\n        \n        \n        java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n        Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n        \n        for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n            \n            boolean emp_activa = (boolean) return78map.get(\"empresas\").get(i).get(\"emp_activa\");\n            \n            if (emp_activa) {\n                \n                String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n            \tString razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n\n                Comboitem item = new Comboitem();                \n                item.setLabel(razonS); // Usar el texto concatenado como etiqueta del Comboitem\n                item.setValue(id); // Establecer el ID como el valor del Comboitem\n                item.setParent(comp_CMB_perEmpMant);\n            }\n            \n            /*String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n            String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n\n            String labelText = id + \" - \" + razonS; // Concatenar el ID y el nombre de la empresa\n            \n\n            Comboitem item = new Comboitem();                \n            //item.setLabel(labelText); // Usar el texto concatenado como etiqueta del Comboitem\n            item.setLabel(razonS);\n            item.setValue(id); // Establecer el ID como el valor del Comboitem\n            item.setParent(comp_CMB_perEmpMant);*/\n        }\n\n\n        break;\n        \n    case \"Personas por Inmueble\":\n        \n        comp_CMB_perEmpMant.setDisabled(true);\n        comp_TXT_perPadron.setValue(\"-\");\n       \tcomp_TXT_perPadron.setDisabled(false);\n        \n        comp_CHK_perEsSocio.setDisabled(true);\n        comp_CHK_perEsRptte.setDisabled(true);\n        comp_CHK_perEsAdmCon.setDisabled(false);\n        comp_CHK_perEsCoprop.setDisabled(false);\n        \n        comp_CMB_perEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n        Comboitem defaultItem = new Comboitem(\"-\");\n        defaultItem.setParent(comp_CMB_perEmpMant);\n        comp_CMB_perEmpMant.setSelectedIndex(0);\n        \n        break;\n        \n        \n    \n    default: \n        \n        comp_TXT_perPadron.setDisabled(true);\n        comp_CMB_perEmpMant.setDisabled(true);\n        \n        comp_CHK_perEsSocio.setDisabled(true);\n        comp_CHK_perEsRptte.setDisabled(true);\n        comp_CHK_perEsAdmCon.setDisabled(true);\n        comp_CHK_perEsCoprop.setDisabled(true);\n        \n        //comp_CMB_perEmpMant.setSelectedItem(null);\n        comp_CMB_perEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n        Comboitem defaultItem = new Comboitem(\"-\");\n        defaultItem.setParent(comp_CMB_perEmpMant);\n        comp_CMB_perEmpMant.setSelectedIndex(0);\n        \n        break;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Personas por Empresa de Mantenimiento','Personas por Empresa de Mantenimiento',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Personas por Inmueble','Personas por Inmueble',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Empresa_Mantenimiento',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_CMB_perEmpMant','Empresa de Mantenimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_perEmpMant','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//CMB\nCombobox comp_CMB_perOpcCarga=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcCarga\");\nCombobox comp_CMB_perEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMant\");\n\n//TXT\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\n\n//CHECK\nCheckbox comp_CHK_perEsSocio=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsSocio\");\nCheckbox comp_CHK_perEsRptte=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsRptte\");\nCheckbox comp_CHK_perEsAdmCon=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsAdmCon\");\nCheckbox comp_CHK_perEsCoprop=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsCoprop\");\n\n//INT\nTextbox comp_TXT_ID_Empresa=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_Empresa\");\n\n\njava.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\nMap return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\n\n\n// Obtener el índice seleccionado en el ComboBox\n//int seleccionEmpresa = comp_CMB_perEmpMant.getSelectedIndex();\n//comp_TXT_ID_Empresa.setValue(seleccionEmpresa.toString());  \n\n\n/*Comboitem selectedItem = comp_CMB_perEmpMant.getSelectedItem();\nif (selectedItem != null) {\n    String selectedEmpId = (String) selectedItem.getValue(); // Obtener el emp_id seleccionado\n    comp_TXT_ID_Empresa.setValue(selectedEmpId); // Establecer el emp_id en el Textbox\n}else {\n    comp_TXT_ID_Empresa.setValue(\"\");\n}*/\n        ','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Empresa1','Empresa1',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Empresa2','Empresa2',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Persona_Padron',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perPadron','Inmueble:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perPadron','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\nTextbox comp_TXT_perIDInmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perIDInmueble\");\n\n//GRILLA INMUEBLES\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n\n\n// Obtener el valor ingresado en el Textbox\nString padronIngresado = comp_TXT_perPadron.getValue().trim();\n\n// Bandera para saber si encontramos el padrón\nboolean padronEncontrado = false;\n\n// Recorrer todos los elementos de la grilla\nfor (Listitem item : comp_GRID_inmuebles.getItems()) {\n    \n    // Obtener el número de padrón y el ID de la grilla\n    Listcell cellPadron = (Listcell) item.getChildren().get(1); // celda del padrón\n    Listcell cellID = (Listcell) item.getChildren().get(0); // celda del ID\n\n    String padron = cellPadron.getLabel().trim();\n\n    // Comprobar si el padrón ingresado coincide con el de la grilla\n    if (padron.equals(padronIngresado)) {\n        \n        // Si es correcto, obtener el ID asociado\n        String idAsociado = cellID.getLabel().trim();\n        \n\n        // Establecer el ID en el Textbox\n        comp_TXT_perIDInmueble.setValue(idAsociado);\n        \n\n        // Indicar que se encontró el padrón\n        padronEncontrado = true;\n        \n        break; // salir del ciclo, ya encontramos lo que buscábamos\n    }    \n}\n\n// Si el padrón no se encontró, mostrar mensaje\nif (!padronEncontrado) {\n    \n    Messagebox.show(\"Padrón no encontrado.\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n    \n    comp_TXT_perIDInmueble.setValue(\"-\");\n}\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perIDInmueble','ID Inmueble:',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',3,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Apellido_Nombre',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Nombre',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perNombre','Nombre:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perNombre','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_perNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNombre\");\n\n//Letras\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$\";\nString texto = comp_TXT_perNombre.getValue();\n\n\nif (texto.length() <= 50 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un nombre válido.\", \"error\", comp_TXT_perNombre, \"\", 3100);\n    comp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: red\");\n    comp_TXT_perNombre.setValue(\"-\");\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Apellido',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perApellido','Apellido:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perApellido','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_perApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perApellido\");\n\n//Letras\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$\";\nString texto = comp_TXT_perApellido.getValue();\n\n\nif (texto.length() <= 50 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un apellido válido.\", \"error\", comp_TXT_perApellido, \"\", 3100);\n    comp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: red\");\n    comp_TXT_perApellido.setValue(\"-\");\n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_CUIT_Documento',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_CUIT/CUIL',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perCUIL','CUIT/CUIL:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perCUIL','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'/*import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\n\nModeloComponente sup = new ModeloComponente();\n\n\n\nTextbox comp_TXT_perCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCUIL\");\n\nString dato = comp_TXT_perCUIL.getValue();\n  \ndato = dato.replaceAll(\"-\", \"\");\n\n// Patrón para verificar que no haya 11 ceros consecutivos\nString patronCerosConsecutivos = \".*0{11}.*\";\n\nif (dato.matches(patronCerosConsecutivos)) {\n    \n    Messagebox.show(\"El CUIT no puede contener 11 ceros consecutivos.\", \"Advertencia\", null, null, null);\n    comp_TXT_perCUIL.setValue(\"-\");\n    \n} else {\n    \n    // Continuar con la validación del CUIT\n    String patroncuil = \"[0-9]{11}\"; // Patrón para números\n    String cuil = dato;\n    Pattern patternCUIL = Pattern.compile(patroncuil);\n    Matcher matcherCUIL = patternCUIL.matcher(cuil);\n    boolean cuilerror = false;\n    String cuit = \"\";\n    \n    if (comp_TXT_perCUIL.getValue().trim().equals(\"-\")) {\n        //No ha cargado nada\n    } else if (!matcherCUIL.matches()) {\n        \n        Messagebox.show(\"Por favor, ingrese los once dígitos del CUIT.\", \"Advertencia\", null, null, null);\n        comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: red\");\n        comp_TXT_perCUIL.setValue(\"-\");\n        \n    } else {\n        \n        cuit = dato;\n        String prefijo = cuit.substring(0, 2);\n        //la secuencia de valores de factor es 5, 4, 3, 2, 7, 6, 5, 4, 3, 2\n        \n        if(prefijo.contains(\"20\") || prefijo.contains(\"23\") || prefijo.contains(\"24\") || prefijo.contains(\"27\") ){\n            \n            if(cuit.contains(\"-\")){\n                cuit = cuit.substring(0, 2) + cuit.substring(3, 11) + cuit.substring(12);\n            }\n            \n            int factor;\n            factor = 5;\n            int[] c = new int[11];\n            int resultado = 0;\n\n            int ultimoint = Integer.parseInt(Character.toString(cuit.charAt(cuit.length() - 1)));\n\n            for (int i = 0; i < 10; i++) {\n                \n                c[i] = Integer.parseInt(Character.toString(cuit.charAt(i)));\n                resultado = resultado + c[i] * factor;\n                factor = (factor == 2) ? 7 : factor - 1;\n                System.out.println(resultado);\n            }\n            \n            int control = 0;\n            int ver = (resultado % 11);\n            \n            if (ver == 0) {\n                \n                control = ver;\n                \n            } else {\n                \n                control = 11 - ver;\n\n            }\n            \n            if (control == ultimoint) {\n                \n                cuilerror = false;\n                \n            } else {\n                \n                cuilerror = true;\n               \n            }\n            \n            //Eliminar guiones\n            String datos = comp_TXT_perCUIL.getValue();\n            String cuitLimpio = datos.replaceAll(\"[^0-9-]\", \"\");\n            \n            // Reemplaza cualquier secuencia de guiones por dos guiones\n            cuitLimpio = cuitLimpio.replaceAll(\"[\\\\s-]\", \"\");\n            comp_TXT_perCUIL.setValue(cuitLimpio);\n            \n            if (cuilerror) {\n                \n                Messagebox.show(\"Por favor, ingrese un CUIT válido.\", \"Advertencia\", null, null, null);\n                comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: red\");\n                comp_TXT_perCUIL.setValue(\"-\");\n                \n            } else {\n\n                comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: #606060\");\n            }\n        \n        }else{\n            \n            comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: red\");\n            Messagebox.show(\"El Prefijo del Cuit no corresponde con el de una persona.\");\n            comp_TXT_perCUIL.setValue(\"-\");\n        }\n    }\n}*/','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Tipo_Documento',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perTipoDoc','Tipo Documento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perTipoDoc','',@vIdDistribucionCells,'Textbox','50','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_perTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTipoDoc\");\nTextbox comp_TXT_perNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDoc\");\n\n\nString regex = \"[1-2]\";\nString texto = comp_TXT_perTipoDoc.getValue();\n\ncomp_TXT_perNumDoc.setValue(\"-\");\n\nif (texto.matches(regex) && !texto.equals(\"-\")) {\n    \n    comp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un tipo de documento válido (1-DNI o 2-Pasaporte).\", \"error\", comp_TXT_perTipoDoc, \"\", 3100);\n    comp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: red\");\n    comp_TXT_perTipoDoc.setValue(\"-\");\n}\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perNumDoc','Número de Documento',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:10px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perNumDoc','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_perTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTipoDoc\");\nTextbox comp_TXT_perNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDoc\");\n\n\nString regex = \"\\\\d{8}\";\nString regex2 = \"^\\\\d{0,8}$\";\nString texto = comp_TXT_perNumDoc.getValue();\n\n\nif(comp_TXT_perTipoDoc.getValue().equals(\"1\")){\n    \n    if (texto.matches(regex) && !texto.equals(\"-\")) {\n        \n        comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: #606060\");\n    \n    } else {\n\n        Clients.showNotification(\"Ingrese un número de documento válido.\", \"error\", comp_TXT_perNumDoc, \"\", 3100);\n        comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: red\");\n        comp_TXT_perNumDoc.setValue(\"-\");\n    }\n\n}else {\n    \n    if (texto.matches(regex2) && !texto.equals(\"-\")) {\n        \n        comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: #606060\");\n    \n    } else {\n\n        Clients.showNotification(\"Ingrese un número de pasaporte válido.\", \"error\", comp_TXT_perNumDoc, \"\", 3100);\n        comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: red\");\n        comp_TXT_perNumDoc.setValue(\"-\");\n    }\n}\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Telefono_Correo_DomiL',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Correo',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perCorreo','Correo Electrónico:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perCorreo','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_perCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCorreo\");\n\nString regex = \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\";\nString texto = comp_TXT_perCorreo.getValue();\n\n\nif (texto.length() <= 30 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un correo electrónico válido.\", \"error\", comp_TXT_perCorreo, \"\", 3100);\n    comp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: red\");\n    comp_TXT_perCorreo.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Telefono',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perTelefono','Teléfono:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perTelefono','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_perTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTelefono\");\n\n\nString regex = \"[0-9]{10,13}\";\nString texto = comp_TXT_perTelefono.getValue();\n\n\nif (texto.matches(regex) && !texto.equals(\"-\")) {\n    \n    comp_TXT_perTelefono.setStyle(comp_TXT_perTelefono.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un número de teléfono válido.\", \"error\", comp_TXT_perTelefono, \"\", 3100);\n    comp_TXT_perTelefono.setStyle(comp_TXT_perTelefono.getStyle() + \"; border-color: red\");\n    comp_TXT_perTelefono.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_DomicilioL',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perDomic','Domicilio Legal:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perDomic','',@vIdDistribucionCells,'Textbox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_perDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perDomic\");\n\n\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\\\d ]*$\";\nString texto = comp_TXT_perDomic.getValue();\n\n\nif (texto.length() <= 60 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_perDomic.setStyle(comp_TXT_perDomic.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un domicilio legal válido.\", \"error\", comp_TXT_perDomic, \"\", 3100);\n    comp_TXT_perDomic.setStyle(comp_TXT_perDomic.getStyle() + \"; border-color: red\");\n    comp_TXT_perDomic.setValue(\"-\");\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Checks',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Socio',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perEsSocio','¿Es dueño/socio de la empresa?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_perEsSocio','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Representante',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perEsRptte','¿Es representante técnico de empresa?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_perEsRptte','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Administrador',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perEsAdmCon','¿Es administrador de consorcio de edificio?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_perEsAdmCon','',@vIdDistribucionCells,'Checkbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Copropietario',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perEsCoprop','¿Es copropietario responsable de inmueble?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_perEsCoprop','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Persona_Activa',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Persona_Activa',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perActiva','Activa:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_perActiva','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Grilla_Personas',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones_Grilla_P',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_perAgregar','Agregar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_personas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_personas\");\n\n//CMB\nCombobox comp_CMB_perOpcCarga=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcCarga\");\nCombobox comp_CMB_perEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMant\");\n\n//TXT\nTextbox comp_TXT_perIDInmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perIDInmueble\");\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\nTextbox comp_TXT_perApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perApellido\");\nTextbox comp_TXT_perNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNombre\");\nTextbox comp_TXT_perCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCUIL\");\nTextbox comp_TXT_perTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTipoDoc\");\nTextbox comp_TXT_perNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDoc\");\nTextbox comp_TXT_perTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTelefono\");\nTextbox comp_TXT_perCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCorreo\");\nTextbox comp_TXT_perDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perDomic\");\n\n//CHEK\nCheckbox comp_CHK_perEsSocio=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsSocio\");\nCheckbox comp_CHK_perEsRptte=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsRptte\");\nCheckbox comp_CHK_perEsAdmCon=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsAdmCon\");\nCheckbox comp_CHK_perEsCoprop=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsCoprop\");\nCheckbox comp_CHK_perActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perActiva\");\n\n//BTN\nButton comp_BTN_perAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_perAgregar\");\nButton comp_BTN_perEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_perEditar\");\nButton comp_BTN_perCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_perCancelar\");\n\n\n//INMUEBLE\n//GRILLA\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n//TXT\nTextbox comp_TXT_inmPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadron\");\nTextbox comp_TXT_inmDomicilio=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmDomicilio\");\nCombobox comp_CMB_inmDistrito=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistrito\");\nCombobox comp_CMB_inmDestino=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDestino\");\n\n//CHEK\n\nCheckbox comp_CHK_inmActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_inmActivo\");\n\n//BTN\nButton comp_BTN_inmAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmAgregar\");\nButton comp_BTN_inmEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmEditar\");\nButton comp_BTN_inmCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmCancelar\");\n\n\n\n/****************************LÓGICA****************************/\nif(comp_CMB_perOpcCarga.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar una Opción de Carga.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n} \nelse if(comp_CMB_perOpcCarga.getValue().equals(\"Personas por Empresa de Mantenimiento\") && comp_CMB_perEmpMant.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}\nelse if(comp_CMB_perOpcCarga.getValue().equals(\"Personas por Inmueble\") && comp_TXT_perPadron.getValue().equals(\"-\") ){\n    \n    Clients.showNotification(\"Debe ingresar un Inmueble (Padrón).\", \"error\", comp_TXT_perPadron, \"\",3100);\n    comp_TXT_perPadron.setStyle(comp_TXT_perPadron.getStyle() + \"; border-color: red\");\n    \n}\nelse if(comp_TXT_perApellido.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Apellido.\", \"error\", comp_TXT_perApellido, \"\",3100);\n    comp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_perNombre.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Nombre.\", \"error\", comp_TXT_perNombre, \"\",3100);\n    comp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_perCUIL.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un CUIT/CUIL.\", \"error\", comp_TXT_perCUIL, \"\",3100);\n    comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_perTipoDoc.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Tipo de Documento.\", \"error\", comp_TXT_perTipoDoc, \"\",3100);\n    comp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_perNumDoc.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Número de Documento.\", \"error\", comp_TXT_perNumDoc, \"\",3100);\n    comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_perTelefono.getValue().equals(\"-\")){ \n    \n    Clients.showNotification(\"Debe ingresar un Teléfono.\", \"error\", comp_TXT_perTelefono, \"\",3100);\n    comp_TXT_perTelefono.setStyle(comp_TXT_perTelefono.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_perCorreo.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Correo Electrónico.\", \"error\", comp_TXT_perCorreo, \"\",3100);\n    comp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_perDomic.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Domicilio Legal.\", \"error\", comp_TXT_perDomic, \"\",3100);\n    comp_TXT_perDomic.setStyle(comp_TXT_perDomic.getStyle() + \"; border-color: red\");\n\n}else{\n\n    String tipoDocString = comp_TXT_perTipoDoc.getValue().trim();\n    int tipoDoc = Integer.parseInt(tipoDocString);\n    \n    try {\n        \n        //PERSONA (POST)\n        java.util.List parametrosfnPostPersona = new java.util.ArrayList();\n        parametrosfnPostPersona.add(comp_TXT_perNombre.getValue().trim()); //nombre / String\n        parametrosfnPostPersona.add(comp_TXT_perApellido.getValue().trim()); //apellido / String\n        parametrosfnPostPersona.add(comp_TXT_perCUIL.getValue().trim()); //cuit / String\n        parametrosfnPostPersona.add(tipoDoc); //tipoDoc / int\n        parametrosfnPostPersona.add(comp_TXT_perNumDoc.getValue().trim()); //documento / String\n        parametrosfnPostPersona.add(comp_TXT_perDomic.getValue().trim()); //domicilioL / String\n        parametrosfnPostPersona.add(comp_TXT_perTelefono.getValue().trim()); //telefono / String\n        parametrosfnPostPersona.add(comp_TXT_perCorreo.getValue().trim()); //correo / String\n        parametrosfnPostPersona.add(comp_CHK_perEsSocio.isChecked()); //duenoEmp / Boolean\n        parametrosfnPostPersona.add(comp_CHK_perEsRptte.isChecked()); //repreEmp / Boolean\n        parametrosfnPostPersona.add(comp_CHK_perEsAdmCon.isChecked()); //adminEmp / Boolean\n        parametrosfnPostPersona.add(comp_CHK_perEsCoprop.isChecked()); //copropEmp / Boolean\n        parametrosfnPostPersona.add(comp_CHK_perActiva.isChecked()); //activa / Boolean\n    \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostPersona\",parametrosfnPostPersona);\n    \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    //METODO PARA OBTENER EL ID DE LA PERSONA CREADA\n    public String obtenerIDPersona() {\n        try {\n            //PERSONA (GET)\n            java.util.List parametrosfnGetPersonas = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPersonas\",parametrosfnGetPersonas);\n            Map return79map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return79map\");\n            \n            int size = return79map.get(\"personas\").size();\n            String id = return79map.get(\"personas\").get(size - 1).get(\"per_id\").toString();\n            \n            return id;\n            \n        }catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n    }\n    \n    //CONVERTIR EL ID OBTENIDO A INT\n    String personaIDString = obtenerIDPersona();\n    int personaID = Integer.parseInt(personaIDString);\n    \n    \n    if(!comp_CMB_perEmpMant.isDisabled() && comp_TXT_perPadron.isDisabled() ){\n        \n        // Obtener selección de empresa\n        Comboitem selectedItem = comp_CMB_perEmpMant.getSelectedItem();\n        String selectedEmpId = (String) selectedItem.getValue();\n        int empresaID = Integer.parseInt(selectedEmpId);\n        \n        try {\n            \n            //EMPRESA PERSONA (POST)\n            java.util.List parametrosfnPostEmpresaPersona = new java.util.ArrayList();\n            parametrosfnPostEmpresaPersona.add(comp_CHK_perEsSocio.isChecked());\n            parametrosfnPostEmpresaPersona.add(comp_CHK_perEsRptte.isChecked());\n            parametrosfnPostEmpresaPersona.add(empresaID);\n            parametrosfnPostEmpresaPersona.add(personaID);\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostEmpresaPersona\", parametrosfnPostEmpresaPersona);\n            \n        }catch (Exception e) {\n            Messagebox.show(\"El servicio de la API POST de EMPRESA PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }  \n    } \n    \n    \n    if(!comp_TXT_perPadron.isDisabled() && comp_CMB_perEmpMant.isDisabled()){\n        \n        // Obtener ID de inmueble\n        String inm_id = comp_TXT_perIDInmueble.getValue().trim();\n        \n        int inmuebleID = Integer.parseInt(inm_id);\n        \n        \n        try {\n            \n            //INMUEBLE PERSONA (POST)\n            java.util.List parametrosfnPostInmueblePersona = new java.util.ArrayList();\n            parametrosfnPostInmueblePersona.add(inmuebleID); //inmuebleID / int\n            parametrosfnPostInmueblePersona.add(personaID); //personaID / int\n            parametrosfnPostInmueblePersona.add(comp_CHK_perEsAdmCon.isChecked()); //adminEdif / Boolean\n            parametrosfnPostInmueblePersona.add(comp_CHK_perEsCoprop.isChecked()); //coprop_edif / Boolean\n        \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostInmueblePersona\",parametrosfnPostInmueblePersona);\n            \n            \n        }catch (Exception e) {\n            Messagebox.show(\"El servicio de la API POST de INMUEBLE PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }  \n    }\n    \n    \n    //try {\n        \n        //PRIMERA EMPRESA INMUEBLE PERSONA (GET)\n        java.util.List parametrosfnGetPrimeraEmpresaInmueblePersona = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPrimeraEmpresaInmueblePersona\",parametrosfnGetPrimeraEmpresaInmueblePersona);\n        Map return83map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return83map\");\n        \n        if (return83map.containsKey(\"empresaInmueblePersona\")) {\n            \n            List empresaInmueblePersona = (List) return83map.get(\"empresaInmueblePersona\");\n        \tint size = empresaInmueblePersona.size();\n            \n            if (size > 0) {\n                \n                // Obtener el último elemento de la lista\n                Map ultimoItem = (Map) empresaInmueblePersona.get(size - 1);\n                \n                // Variables para los IDs y sus valores por defecto\n                String idEmpresaPersona = \"-\";\n                String idInmueblePersona = \"-\";\n                String idPersona = \"-\";\n                \n                \n                \n                // Verificar y asignar el epe_id si está presente\n                if (ultimoItem.containsKey(\"epe_id\")) {\n                    idEmpresaPersona = ultimoItem.get(\"epe_id\").toString();\n                    idPersona = ultimoItem.get(\"per_id\").toString();\n                    \n                    // Verificar si \"inmuebles\" es null\n                    if (ultimoItem.get(\"inmuebles\") == null) {\n                        idInmueblePersona = \"-\";\n                    }\n                }\n                // Verificar y asignar el ipe_id si está presente\n                else if (ultimoItem.containsKey(\"ipe_id\")) {\n                    \n                    idInmueblePersona = ultimoItem.get(\"ipe_id\").toString();\n                    idPersona = ultimoItem.get(\"per_id\").toString(); // ID de persona\n                    // Verificar si \"empresas\" es null\n                    if (ultimoItem.get(\"empresas\") == null) {\n                        idEmpresaPersona = \"-\";\n                    }\n                }\n                \n                // Obtener `inm_id` y agregarlo a la grilla si está presente\n                String idInmId = \"-\";\n                Object inmueblesObj = ultimoItem.get(\"inmuebles\");\n                if (inmueblesObj != null && inmueblesObj instanceof Map) {\n                    Map inmueblesMap = (Map) inmueblesObj;\n                    Object inmIdObj = inmueblesMap.get(\"inm_id\");\n                    if (inmIdObj != null) {\n                        idInmId = inmIdObj.toString();\n                    }\n                }\n                \n                // Crear un nuevo Listitem para la grilla\n                Listitem item = new Listitem();\n                \n                item.appendChild(new Listcell(idEmpresaPersona));\n\t\t\t\titem.appendChild(new Listcell(idInmueblePersona));\n                item.appendChild(new Listcell(idPersona));\n                item.appendChild(new Listcell(comp_TXT_perApellido.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perNombre.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perCUIL.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perTipoDoc.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perNumDoc.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perDomic.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perTelefono.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perCorreo.getValue()));\n                item.appendChild(new Listcell(comp_TXT_perPadron.getValue()));\n                item.appendChild(new Listcell(idInmId));\n                item.appendChild(new Listcell(comp_CMB_perEmpMant.getValue()));\n                item.appendChild(new Listcell(comp_CHK_perActiva.isChecked() ? \"SI\" : \"NO\")); //ACTIVA ?\n                item.appendChild(new Listcell(comp_CHK_perEsSocio.isChecked() ? \"SI\" : \"NO\")); //SOCIO ?\n                item.appendChild(new Listcell(comp_CHK_perEsRptte.isChecked() ? \"SI\" : \"NO\")); //REPRESENTANTE ?\n                item.appendChild(new Listcell(comp_CHK_perEsAdmCon.isChecked() ? \"SI\" : \"NO\")); //ADMINISTRADOR ?\n                item.appendChild(new Listcell(comp_CHK_perEsCoprop.isChecked() ? \"SI\" : \"NO\")); //COPROPIERTARIO ?\n\n                /*\n                //ACTIVA ?\n                if(comp_CHK_perActiva.isChecked()){\n                    item.appendChild(new Listcell(\"SI\"));\n                }else{\n                    item.appendChild(new Listcell(\"NO\"));  \n                }\n\n                //SOCIO ?\n                if(comp_CHK_perEsSocio.isChecked()){\n                    item.appendChild(new Listcell(\"SI\"));\n                }else{\n                    item.appendChild(new Listcell(\"NO\"));  \n                }\n\n                //REPRESENTANTE ?\n                if(comp_CHK_perEsRptte.isChecked()){\n                    item.appendChild(new Listcell(\"SI\"));\n                }else{\n                    item.appendChild(new Listcell(\"NO\"));  \n                }\n\n                //ADMINISTRADOR ?\n                if(comp_CHK_perEsAdmCon.isChecked()){\n                    item.appendChild(new Listcell(\"SI\"));\n                }else{\n                    item.appendChild(new Listcell(\"NO\"));  \n                }\n\n                //COPROPIERTARIO ?\n                if(comp_CHK_perEsCoprop.isChecked()){\n                    item.appendChild(new Listcell(\"SI\"));\n                }else{\n                    item.appendChild(new Listcell(\"NO\"));  \n                }*/\n\n\n                //BORRAR\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                        int ind = i.getIndex();\n                        comp_GRID_empresas.removeItemAt(ind);\n\n                        comp_TXT_perApellido.setValue(\"-\");\n                        comp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perNombre.setValue(\"-\");\n                        comp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perCUIL.setValue(\"-\");\n                        comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perTipoDoc.setValue(\"-\");\n                        comp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perNumDoc.setValue(\"-\");\n                        comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perDomic.setValue(\"-\");\n                        comp_TXT_perDomic.setStyle(comp_TXT_perDomic.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perTelefono.setValue(\"-\");\n                        comp_TXT_perTelefono.setStyle(comp_TXT_perTelefono.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perCorreo.setValue(\"-\");\n                        comp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_perPadron.setValue(\"-\");\n                        comp_TXT_perPadron.setStyle(comp_TXT_perPadron.getStyle() + \"; border-color: #606060\");\n                        comp_CMB_perEmpMant.setValue(\"-\");\n                        comp_CHK_perEsSocio.setChecked(false);\n                        comp_CHK_perEsRptte.setChecked(false);\n                        comp_CHK_perActiva.setChecked(true);\n                        comp_BTN_perEditar.setLabel(\"Editar\");\n                        comp_BTN_perEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n                    }\n                });\n                \n                comp_GRID_personas.appendChild(item); // Se guarda en la grilla item\n            \n                comp_TXT_perApellido.setValue(\"-\");\n                comp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perNombre.setValue(\"-\");\n                comp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perCUIL.setValue(\"-\");\n                comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perTipoDoc.setValue(\"-\");\n                comp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perNumDoc.setValue(\"-\");\n                comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perDomic.setValue(\"-\");\n                comp_TXT_perDomic.setStyle(comp_TXT_perDomic.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perTelefono.setValue(\"-\");\n                comp_TXT_perTelefono.setStyle(comp_TXT_perTelefono.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perCorreo.setValue(\"-\");\n                comp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: #606060\");\n                comp_TXT_perIDInmueble.setValue(\"-\");\n                comp_TXT_perPadron.setValue(\"-\");\n                comp_TXT_perPadron.setStyle(comp_TXT_perPadron.getStyle() + \"; border-color: #606060\");\n                comp_CMB_perEmpMant.setValue(\"-\");\n                \n                comp_CHK_perEsSocio.setChecked(false);\n                comp_CHK_perEsRptte.setChecked(false);\n                comp_CHK_perEsAdmCon.setChecked(false);\n\t\t\t\tcomp_CHK_perEsCoprop.setChecked(false);\n                comp_CHK_perEsSocio.setDisabled(true);\n                comp_CHK_perEsRptte.setDisabled(true);\n                comp_CHK_perEsAdmCon.setDisabled(true);\n                comp_CHK_perEsCoprop.setDisabled(true);\n                    \n                comp_CHK_perActiva.setChecked(true);\n\n                comp_BTN_perEditar.setDisabled(false);\n                comp_BTN_perCancelar.setDisabled(false);\n\n                //Limpiar CMB Empresa Mantenimiento\n                comp_CMB_perEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n                Comboitem defaultItem = new Comboitem(\"-\");\n                defaultItem.setParent(comp_CMB_perEmpMant);\n                \n                comp_CMB_perOpcCarga.setSelectedIndex(0);\n                comp_CMB_perEmpMant.setSelectedIndex(0);\n            }\n        }\n    /*}catch (Exception e) {\n        Messagebox.show(\"El servicio de la API GET de PRIMERA EMPRESA INMUEBLE PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }*/\n}\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_perEditar','Editar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_personas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_personas\");\n\n//CMB\nCombobox comp_CMB_perOpcCarga=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcCarga\");\nCombobox comp_CMB_perEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMant\");\n\n//TXT\nTextbox comp_TXT_perIDInmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perIDInmueble\");\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\nTextbox comp_TXT_perApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perApellido\");\nTextbox comp_TXT_perNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNombre\");\nTextbox comp_TXT_perCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCUIL\");\nTextbox comp_TXT_perTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTipoDoc\");\nTextbox comp_TXT_perNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDoc\");\nTextbox comp_TXT_perDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perDomic\");\nTextbox comp_TXT_perTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTelefono\");\nTextbox comp_TXT_perCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCorreo\");\n\n//CHEK\nCheckbox comp_CHK_perEsSocio=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsSocio\");\nCheckbox comp_CHK_perEsRptte=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsRptte\");\nCheckbox comp_CHK_perEsAdmCon=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsAdmCon\");\nCheckbox comp_CHK_perEsCoprop=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsCoprop\");\nCheckbox comp_CHK_perActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perActiva\");\n\n//BTN\nButton comp_BTN_perAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_perAgregar\");\nButton comp_BTN_perEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_perEditar\");\nButton comp_BTN_perCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_perCancelar\");\n\n//COMPONENTES EMPRESA MANTENIMIENTO\nTextbox comp_TXT_empRazonSocial=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empRazonSocial\");\nTextbox comp_TXT_empCUIT=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUIT\");\nTextbox comp_TXT_empDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empDomic\");\nTextbox comp_TXT_empTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empTelefono\");\nTextbox comp_TXT_empCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCorreo\");\nCheckbox comp_CHK_empActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_empActiva\");\n\n\n\n/****************************LÓGICA****************************/\nint indice= comp_GRID_personas.getSelectedIndex();\n\nif (indice == -1) {\n    \n    //Clients.showNotification(\"Por favor, seleccione el registro que desea Editar.\",true); \n    Messagebox.show(\"Por favor, seleccione el registro que desea Editar.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else {\n    \n    try {\n        //AL SELECCIONAR EDITAR SE CARGA LA LISTA DE EMPRESAS EN LA LISTA\n        //EMPRESA MANTENIMIENTO (GET)\n        java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n        Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n    \n        for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n\n            String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n            String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n\n            Comboitem item = new Comboitem();                \n            item.setLabel(razonS);\n            item.setValue(id); // Establecer el ID como el valor del Comboitem\n            item.setParent(comp_CMB_perEmpMant);\n        }\n        \n    } catch (Exception e) {\n        Messagebox.show(\"El servicio de la API GET de EMPRESA DE PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    \n    org.zkoss.zul.Listitem item = (org.zkoss.zul.Listitem) comp_GRID_personas.getItemAtIndex(indice);\n    Listcell cel0 = (Listcell) item.getChildren().get(0);\n    Listcell cel1 = (Listcell) item.getChildren().get(1);\n    Listcell cel2 = (Listcell) item.getChildren().get(2);\n    Listcell cel3 = (Listcell) item.getChildren().get(3);\n    Listcell cel4 = (Listcell) item.getChildren().get(4);\n    Listcell cel5 = (Listcell) item.getChildren().get(5);\n    Listcell cel6 = (Listcell) item.getChildren().get(6);\n    Listcell cel7 = (Listcell) item.getChildren().get(7);\n    Listcell cel8 = (Listcell) item.getChildren().get(8);\n    Listcell cel9 = (Listcell) item.getChildren().get(9);\n    Listcell cel10 = (Listcell) item.getChildren().get(10);\n    Listcell cel11 = (Listcell) item.getChildren().get(11);\n    Listcell cel12 = (Listcell) item.getChildren().get(12);\n    Listcell cel13 = (Listcell) item.getChildren().get(13);\n    Listcell cel14 = (Listcell) item.getChildren().get(14);\n    Listcell cel15 = (Listcell) item.getChildren().get(15);\n    Listcell cel16 = (Listcell) item.getChildren().get(16);\n    Listcell cel17 = (Listcell) item.getChildren().get(17);\n    Listcell cel18 = (Listcell) item.getChildren().get(18);\n        \n    \n    if (comp_BTN_perEditar.getLabel().equals(\"Editar\")){\n        \n        //comp_CMB_perEmpMant.setDisabled(false);\n        comp_CHK_perEsSocio.setDisabled(true);\n\t\tcomp_CHK_perEsRptte.setDisabled(true);\n        comp_CHK_perEsAdmCon.setDisabled(false);\n\t\tcomp_CHK_perEsCoprop.setDisabled(false);\n        \n        //comp_TXT_empRazonSocial.setValue(item.getChildren().get(0).getLabel().trim());\n        String apellido = item.getChildren().get(3).getLabel().trim();\n        String nombre = item.getChildren().get(4).getLabel().trim();\n        String cuit = item.getChildren().get(5).getLabel().trim();\n\t\tString tipoDocumento = item.getChildren().get(6).getLabel().trim();\n\t\tString numeroDocumento = item.getChildren().get(7).getLabel().trim();\n        String domicilioL = item.getChildren().get(8).getLabel().trim();\n        String telefono = item.getChildren().get(9).getLabel().trim();\n        String correo = item.getChildren().get(10).getLabel().trim();\n        String padron = item.getChildren().get(11).getLabel().trim();\n        String id_padron = item.getChildren().get(12).getLabel().trim();\n        String empresaM = item.getChildren().get(13).getLabel().trim();\n\t\tString activo = item.getChildren().get(14).getLabel().trim();\n        String dueno = item.getChildren().get(15).getLabel().trim();\n        String representante = item.getChildren().get(16).getLabel().trim();\n        String administrador = item.getChildren().get(17).getLabel().trim();\n        String copropietario = item.getChildren().get(18).getLabel().trim();\n        \n        \n        /*java.util.List parametrosfnGetPersonas = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPersonas\",parametrosfnGetPersonas);\n        Map return79map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return79map\");\n        \n        boolean esDueno = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_dueno_emp\");\n        boolean esReptec = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_reptec_emp\");\n        boolean esAdminEdif = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_admin_edif\");\n        boolean esCopropEdif = (boolean) return83map.get(\"empresaInmueblePersona\").get(i).get(\"per_es_coprop_edif\");*/\n        \n\n        comp_TXT_perApellido.setValue(apellido);\n        comp_TXT_perNombre.setValue(nombre);\n        comp_TXT_perCUIL.setValue(cuit);\n        comp_TXT_perTipoDoc.setValue(tipoDocumento);\n        comp_TXT_perNumDoc.setValue(numeroDocumento);\n        comp_TXT_perDomic.setValue(domicilioL);\n\t\tcomp_TXT_perTelefono.setValue(telefono);\n        comp_TXT_perCorreo.setValue(correo);\n        comp_TXT_perIDInmueble.setValue(id_padron);\n        comp_TXT_perPadron.setValue(padron);\n        comp_CMB_perEmpMant.setValue(empresaM);\n        comp_CHK_perActiva.setValue(activo);\n        comp_CHK_perEsSocio.setValue(dueno);\n        comp_CHK_perEsRptte.setValue(representante);\n        comp_CHK_perEsAdmCon.setValue(administrador);\n        comp_CHK_perEsCoprop.setValue(copropietario);  \n        \n        if(!comp_CMB_perEmpMant.getValue().equals(\"-\") && comp_TXT_perPadron.getValue().equals(\"-\")){\n            comp_CMB_perOpcCarga.setValue(\"Personas por Empresa de Mantenimiento\");\n            comp_CMB_perOpcCarga.setDisabled(true);\n            comp_CMB_perEmpMant.setDisabled(false);\n            \n            comp_CHK_perEsSocio.setDisabled(false);\n            comp_CHK_perEsRptte.setDisabled(false);\n            comp_CHK_perEsAdmCon.setDisabled(true);\n\t\t\tcomp_CHK_perEsCoprop.setDisabled(true);\n            \n            \n        \n        }else if(comp_CMB_perEmpMant.getValue().equals(\"-\") && !comp_TXT_perPadron.getValue().equals(\"-\")){\n            comp_CMB_perOpcCarga.setValue(\"Personas por Inmueble\");\n            comp_CMB_perOpcCarga.setDisabled(true);\n            comp_TXT_perPadron.setDisabled(false);\n            \n            comp_CHK_perEsSocio.setDisabled(true);\n            comp_CHK_perEsRptte.setDisabled(true);\n            comp_CHK_perEsAdmCon.setDisabled(false);\n\t\t\tcomp_CHK_perEsCoprop.setDisabled(false);\n        }\n        \n        //ACTIVA ?\n        if (activo.equals(\"SI\")){\n        \tcomp_CHK_perActiva.setChecked(true);\n        }else{\n            comp_CHK_perActiva.setChecked(false);\n        }\n        \n        //DUEÑO ?\n        if (dueno.equals(\"SI\")){\n        \tcomp_CHK_perEsSocio.setChecked(true);\n        }else{\n            comp_CHK_perEsSocio.setChecked(false);\n        }\n        \n        //REPRESENTANTE ?\n        if (representante.equals(\"SI\")){\n        \tcomp_CHK_perEsRptte.setChecked(true);\n        }else{\n            comp_CHK_perEsRptte.setChecked(false);\n        }\n        \n        //ADMINISTRADOR ?\n        if (administrador.equals(\"SI\")){\n        \tcomp_CHK_perEsAdmCon.setChecked(true);\n        }else{\n            comp_CHK_perEsAdmCon.setChecked(false);\n        }\n        \n        //COPROPIETARIO ?\n        if (copropietario.equals(\"SI\")){\n        \tcomp_CHK_perEsCoprop.setChecked(true);\n        }else{\n            comp_CHK_perEsCoprop.setChecked(false);\n        }\n        \n        \n        comp_BTN_perEditar.setLabel(\"Guardar Cambios\");\n        comp_BTN_perEditar.setStyle(\"margin-left:25px; background:#008000; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        comp_BTN_perAgregar.setDisabled(true);\n\n    \n    }else if (comp_BTN_perEditar.getLabel().equals(\"Guardar Cambios\")){\n        \n        //VALIDAR QUE NINGUN DATOS ESTE CON \"-\"\n        if(comp_CMB_perOpcCarga.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar una Opción de Carga.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        } \n        else if(comp_CMB_perOpcCarga.getValue().equals(\"Personas por Empresa de Mantenimiento\") && comp_CMB_perEmpMant.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }\n        else if(comp_CMB_perOpcCarga.getValue().equals(\"Personas por Inmueble\") && comp_TXT_perPadron.getValue().equals(\"-\") ){\n\n            Clients.showNotification(\"Debe ingresar un Inmueble (Padrón).\", \"error\", comp_TXT_perPadron, \"\",3100);\n            comp_TXT_perPadron.setStyle(comp_TXT_perPadron.getStyle() + \"; border-color: red\");\n\n        }\n        else if(comp_TXT_perApellido.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Apellido.\", \"error\", comp_TXT_perApellido, \"\",3100);\n            comp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_perNombre.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Nombre.\", \"error\", comp_TXT_perNombre, \"\",3100);\n            comp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_perCUIL.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un CUIT/CUIL.\", \"error\", comp_TXT_perCUIL, \"\",3100);\n            comp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_perTipoDoc.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Tipo de Documento.\", \"error\", comp_TXT_perTipoDoc, \"\",3100);\n            comp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_perNumDoc.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Número de Documento.\", \"error\", comp_TXT_perNumDoc, \"\",3100);\n            comp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_perCorreo.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Correo Electrónico.\", \"error\", comp_TXT_perCorreo, \"\",3100);\n            comp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: red\");\n\n        }else{\n            \n            cel3.setLabel(comp_TXT_perApellido.getValue());\n            cel3.setParent(item);\n            cel4.setLabel(comp_TXT_perNombre.getValue());\n            cel4.setParent(item);\n            cel5.setLabel(comp_TXT_perCUIL.getValue());\n            cel5.setParent(item);\n            cel6.setLabel(comp_TXT_perTipoDoc.getValue());\n            cel6.setParent(item);\n            cel7.setLabel(comp_TXT_perNumDoc.getValue());\n            cel7.setParent(item);\n            cel8.setLabel(comp_TXT_perDomic.getValue());\n\t\t\tcel8.setParent(item);\n            cel9.setLabel(comp_TXT_perTelefono.getValue());             \n\t\t\tcel9.setParent(item);\n            cel10.setLabel(comp_TXT_perCorreo.getValue());\n            cel10.setParent(item);\n            cel11.setLabel(comp_TXT_perPadron.getValue());\n            cel11.setParent(item);\n            cel12.setLabel(comp_TXT_perIDInmueble.getValue());\n            cel12.setParent(item);\n            cel13.setLabel(comp_CMB_perEmpMant.getValue());\n            cel13.setParent(item);\n            \n            //ACTIVA ?\n            if (comp_CHK_perActiva.isChecked()) {\n            \tcel14.setLabel(\"SI\");\n            \tcel14.setParent(item);\n        \t} else {\n            \tcel14.setLabel(\"NO\");\n            \tcel14.setParent(item);\n        \t}\n            \n            //DUEÑO ?\n            if (comp_CHK_perEsSocio.isChecked()){\n\t\t\t\tcel15.setLabel(\"SI\");\n            \tcel15.setParent(item);\n            }else{\n    \t\t\tcel15.setLabel(\"NO\");\n            \tcel15.setParent(item);\n            }\n\n            //REPRESENTANTE ?\n            if (comp_CHK_perEsRptte.isChecked()){\n                cel16.setLabel(\"SI\");\n            \tcel16.setParent(item);\n            }else{\n                cel16.setLabel(\"NO\");\n            \tcel16.setParent(item);\n            }\n\n            //ADMINISTRADOR ?\n            if (comp_CHK_perEsAdmCon.isChecked()){\n                cel17.setLabel(\"SI\");\n            \tcel17.setParent(item);\n            }else{\n                cel17.setLabel(\"NO\");\n            \tcel17.setParent(item);\n            }\n\n            //COPROPIETARIO ?\n            if (comp_CHK_perEsCoprop.isChecked()){\n                cel18.setLabel(\"SI\");\n            \tcel18.setParent(item);\n            }else{\n                cel18.setLabel(\"NO\");\n            \tcel18.setParent(item);\n            }\n            \n            String id = ((org.zkoss.zul.Listcell) item.getChildren().get(2)).getLabel().trim();\n        \tint idPersona = Integer.parseInt(id);\n            \n            \n            \n            String tipoDocString = comp_TXT_perTipoDoc.getValue();\n            int tipoDoc = Integer.parseInt(tipoDocString);\n            \n            try {\n                \n                //PERSONA (PUT)\n                java.util.List parametrosfnPutPersonas = new java.util.ArrayList();\n                parametrosfnPutPersonas.add(idPersona); //idPersona / int\n                parametrosfnPutPersonas.add(comp_TXT_perNombre.getValue()); //nombre / String\n                parametrosfnPutPersonas.add(comp_TXT_perApellido.getValue()); //apellido / String\n                parametrosfnPutPersonas.add(comp_TXT_perCUIL.getValue()); //cuit / String\n                parametrosfnPutPersonas.add(tipoDoc); //tipoDoc / int\n                parametrosfnPutPersonas.add(comp_TXT_perNumDoc.getValue()); //documento / String\n                parametrosfnPutPersonas.add(comp_TXT_perTelefono.getValue()); //telefono / String\n                parametrosfnPutPersonas.add(comp_TXT_perCorreo.getValue()); //correo / String\n                parametrosfnPutPersonas.add(comp_TXT_perDomic.getValue()); //domicilioL / String\n                parametrosfnPutPersonas.add(comp_CHK_perEsSocio.isChecked()); //dueno_emp / Boolean\n                parametrosfnPutPersonas.add(comp_CHK_perEsRptte.isChecked()); //reptec_emp / Boolean\n                parametrosfnPutPersonas.add(comp_CHK_perEsAdmCon.isChecked()); //admin_edif / Boolean\n                parametrosfnPutPersonas.add(comp_CHK_perEsCoprop.isChecked()); //coprop_edif / Boolean\n                parametrosfnPutPersonas.add(comp_CHK_perActiva.isChecked()); //activa / Boolean\n            \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutPersonas\",parametrosfnPutPersonas);\n                \n\t\t\t} catch (Exception e) {\n                Messagebox.show(\"El servicio de la API PUT de PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n\n            }\n            \n\n            \n            if(!comp_CMB_perEmpMant.isDisabled() && comp_TXT_perPadron.isDisabled() ){\n                \n                //ACTUALIZAR ID EMPRESA\n                Comboitem selectedItem = comp_CMB_perEmpMant.getSelectedItem();\n                String selectedEmpId = (String) selectedItem.getValue(); // Obtener el emp_id seleccionado como cadena \n                int empresaID = Integer.parseInt(selectedEmpId);\n\n\n                //ACTUALIZAR ID EMPRESA\n                String idEmpresaPersona = ((org.zkoss.zul.Listcell) item.getChildren().get(0)).getLabel().trim();\n                int idEP = Integer.parseInt(idEmpresaPersona);\n            \n                try {\n                    //EDITAR LA EMPRESA DE LA PERSONA (PUT)\n                    java.util.List parametrosfnPutEmpresaPersona = new java.util.ArrayList();\n                    parametrosfnPutEmpresaPersona.add(idEP); //idEmpresaPersona / int\n                    parametrosfnPutEmpresaPersona.add(comp_CHK_perEsSocio.isChecked()); //duenoEmp / Boolean\n                    parametrosfnPutEmpresaPersona.add(comp_CHK_perEsRptte.isChecked()); //repreEmp / Boolean\n                    parametrosfnPutEmpresaPersona.add(empresaID); //empresaID / int\n                    new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutEmpresaPersona\",parametrosfnPutEmpresaPersona);\n\n                } catch (Exception e) {\n                    Messagebox.show(\"El servicio de la API PUT de EMPRESA-PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n\n                }\n            }\n            \n            \n            if(!comp_TXT_perPadron.isDisabled() && comp_CMB_perEmpMant.isDisabled()){\n                \n                //ACTUALIZAR ID INMUEBLE\n                String idInmueblePersona = ((org.zkoss.zul.Listcell) item.getChildren().get(1)).getLabel().trim();\n                int idIP = Integer.parseInt(idInmueblePersona);\n                \n                //CONVERTIR STRING ID PADRON A INT\n                int idPadronInt = Integer.parseInt(comp_TXT_perIDInmueble.getValue());\n                \n\n                try {\n                    \n                    java.util.List parametrosfnPutInmueblePersona = new java.util.ArrayList();\n                    parametrosfnPutInmueblePersona.add(idIP); //idInmueblePersona / int\n                    parametrosfnPutInmueblePersona.add(comp_CHK_perEsAdmCon.isChecked()); //adminEdif / Boolean\n                    parametrosfnPutInmueblePersona.add(comp_CHK_perEsCoprop.isChecked()); //copropEdif / Boolean\n                    parametrosfnPutInmueblePersona.add(idPadronInt); //inmuebleID / int\n                \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutInmueblePersona\",parametrosfnPutInmueblePersona);\n                    \n                } catch (Exception e) {\n                    Messagebox.show(\"El servicio de la API PUT de INMUEBLE-PERSONA NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n\n                }\n            }\n            \n        \tcomp_TXT_perApellido.setValue(\"-\");\n        \tcomp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: #606060\");\n        \tcomp_TXT_perNombre.setValue(\"-\");\n        \tcomp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: #606060\");\n        \tcomp_TXT_perCUIL.setValue(\"-\");\n        \tcomp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: #606060\");\n        \tcomp_TXT_perTipoDoc.setValue(\"-\");\n        \tcomp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: #606060\");\n        \tcomp_TXT_perNumDoc.setValue(\"-\");\n        \tcomp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: #606060\");\n            comp_TXT_perDomic.setValue(\"-\");\n            comp_TXT_perDomic.setStyle(comp_TXT_perDomic.getStyle() + \"; border-color: #606060\");\n            comp_TXT_perTelefono.setValue(\"-\");\n            comp_TXT_perTelefono.setStyle(comp_TXT_perTelefono.getStyle() + \"; border-color: #606060\");\n        \tcomp_TXT_perCorreo.setValue(\"-\");\n        \tcomp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: #606060\");\n            comp_TXT_perPadron.setDisabled(true);\n            comp_TXT_perIDInmueble.setValue(\"-\");\n        \tcomp_TXT_perPadron.setValue(\"-\");\n        \tcomp_TXT_perPadron.setStyle(comp_TXT_perPadron.getStyle() + \"; border-color: #606060\");\n            comp_CMB_perOpcCarga.setValue(\"-\");\n            comp_CMB_perOpcCarga.setDisabled(false);\n        \tcomp_CMB_perEmpMant.setValue(\"-\");\n            comp_CHK_perEsSocio.setChecked(false);\n\t\t\tcomp_CHK_perEsRptte.setChecked(false);\n            comp_CHK_perActiva.setChecked(true);\n            \n            comp_BTN_perEditar.setLabel(\"Editar\");\n        \tcomp_BTN_perEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        \tcomp_BTN_perAgregar.setDisabled(false);\n            \n            //Limpiar CMB Empresa Mantenimiento\n            comp_CMB_perEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\n            Comboitem defaultItem = new Comboitem(\"-\");\n            defaultItem.setParent(comp_CMB_perEmpMant);\n            comp_CMB_perEmpMant.setSelectedIndex(0);\n            \n        }\n    }    \n}\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_perCancelar','Cancelar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',3,'-','-','margin-left:25px;  background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_personas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_personas\");\n\n//CMB\nCombobox comp_CMB_perOpcCarga=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcCarga\");\nCombobox comp_CMB_perEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMant\");\n\n//TXT\nTextbox comp_TXT_perIDInmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perIDInmueble\");\nTextbox comp_TXT_perPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perPadron\");\nTextbox comp_TXT_perApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perApellido\");\nTextbox comp_TXT_perNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNombre\");\nTextbox comp_TXT_perCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCUIL\");\nTextbox comp_TXT_perTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTipoDoc\");\nTextbox comp_TXT_perNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDoc\");\nTextbox comp_TXT_perTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perTelefono\");\nTextbox comp_TXT_perDomic=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perDomic\");\nTextbox comp_TXT_perCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perCorreo\");\n\n//CHEK\nCheckbox comp_CHK_perEsSocio=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsSocio\");\nCheckbox comp_CHK_perEsRptte=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsRptte\");\nCheckbox comp_CHK_perEsAdmCon=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsAdmCon\");\nCheckbox comp_CHK_perEsCoprop=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perEsCoprop\");\nCheckbox comp_CHK_perActiva=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_perActiva\");\n\n//BTN\nButton comp_BTN_perAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_perAgregar\");\nButton comp_BTN_perEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_perEditar\");\nButton comp_BTN_perCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_perCancelar\");\n\n\n\n/****************************LÓGICA****************************/\ncomp_TXT_perApellido.setValue(\"-\");\ncomp_TXT_perApellido.setStyle(comp_TXT_perApellido.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perNombre.setValue(\"-\");\ncomp_TXT_perNombre.setStyle(comp_TXT_perNombre.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perCUIL.setValue(\"-\");\ncomp_TXT_perCUIL.setStyle(comp_TXT_perCUIL.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perTipoDoc.setValue(\"-\");\ncomp_TXT_perTipoDoc.setStyle(comp_TXT_perTipoDoc.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perNumDoc.setValue(\"-\");\ncomp_TXT_perNumDoc.setStyle(comp_TXT_perNumDoc.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perDomic.setValue(\"-\");\ncomp_TXT_perDomic.setStyle(comp_TXT_perDomic.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perTelefono.setValue(\"-\");\ncomp_TXT_perTelefono.setStyle(comp_TXT_perTelefono.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perCorreo.setValue(\"-\");\ncomp_TXT_perCorreo.setStyle(comp_TXT_perCorreo.getStyle() + \"; border-color: #606060\");\ncomp_TXT_perPadron.setDisabled(true);\ncomp_TXT_perIDInmueble.setValue(\"-\");\ncomp_TXT_perPadron.setValue(\"-\");\ncomp_TXT_perPadron.setStyle(comp_TXT_perPadron.getStyle() + \"; border-color: #606060\");\ncomp_CMB_perOpcCarga.setDisabled(false);\ncomp_CMB_perOpcCarga.setValue(\"-\");\ncomp_CMB_perEmpMant.setValue(\"-\");\n\ncomp_CMB_perEmpMant.setDisabled(true);\ncomp_CHK_perEsSocio.setDisabled(true);\ncomp_CHK_perEsRptte.setDisabled(true);\ncomp_CHK_perEsAdmCon.setDisabled(true);\ncomp_CHK_perEsCoprop.setDisabled(true);\n\ncomp_CHK_perEsSocio.setChecked(false);\ncomp_CHK_perEsRptte.setChecked(false);\ncomp_CHK_perEsAdmCon.setChecked(false);\ncomp_CHK_perEsCoprop.setChecked(false);\n\ncomp_CHK_perActiva.setChecked(true);\n\ncomp_BTN_perEditar.setLabel(\"Editar\");\ncomp_BTN_perEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\ncomp_BTN_perAgregar.setDisabled(false);\n\ncomp_CMB_perEmpMant.getItems().clear(); // Eliminar todos los elementos actuales\nComboitem defaultItem = new Comboitem(\"-\");\ndefaultItem.setParent(comp_CMB_perEmpMant);\ncomp_CMB_perEmpMant.setSelectedIndex(0);\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Grilla_Persona',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_GRID_personas','',@vIdDistribucionCells,'Listbox','100','%','130','px','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','height: auto !important;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,6,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,13,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,22,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,70,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,71,'true','null','1.0') ;
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID I-P',0,0,'-1','-',2,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Apellido',0,0,'-1','-',4,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Nombre',0,0,'-1','-',5,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'CUIT',0,0,'-1','-',6,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Tipo de Documento',0,0,'-1','-',7,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'N° Documento',0,0,'-1','-',8,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Domicilio Legal',0,0,'-1','-',9,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Teléfono',0,0,'-1','-',10,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Correo',0,0,'-1','-',11,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Padrón Inmueble',0,0,'-1','-',12,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Empresa Mant.',0,0,'-1','-',14,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Activa',0,0,'-1','-',15,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Dueño',0,0,'-1','-',16,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Representante',0,0,'-1','-',17,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Administrador',0,0,'-1','-',18,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Copropietario',0,0,'-1','-',19,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID Persona',0,0,'-1','-',3,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID E-P',0,0,'-1','-',1,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID Padron',0,0,'-1','-',13,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_CL_Personas','Consulta y Listado de Personas',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',6,'',8361,'


/*org.zkoss.zul.Textbox comp_TXT_NumPadron=(org.zkoss.zul.Textbox) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente("comp_TXT_NumPadron");

org.zkoss.zul.Label comp_LA_perNumPadron=(org.zkoss.zul.Label) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente("comp_LA_perNumPadron");

org.zkoss.zul.Label comp_LA_perEmpMantRep=(org.zkoss.zul.Label) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente("comp_LA_perEmpMantRep");

org.zkoss.zul.Combobox comp_CMB_perEmpMantRep=(org.zkoss.zul.Combobox) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente("comp_CMB_perEmpMantRep");

comp_TXT_NumPadron.setVisible(false);
comp_LA_perNumPadron.setVisible(false);
comp_LA_perEmpMantRep.setVisible(false);
comp_CMB_perEmpMantRep.setVisible(false);*/


' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8361,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_ReporteP',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_ReporteP',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perOpcRep','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_perOpcRep','',@vIdDistribucionCells,'Combobox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\nTextbox comp_TXT_NumPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_NumPadronRep\");\n\nLabel comp_LA_perNumPadronRep=(Label) sup.getInstanciaComponente(\"comp_LA_perNumPadronRep\");\nTextbox comp_TXT_perNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDocRep\");\nLabel comp_LA_perTipoDocRep=(Label) sup.getInstanciaComponente(\"comp_LA_perTipoDocRep\");\nLabel comp_LA_perNumDocRep=(Label) sup.getInstanciaComponente(\"comp_LA_perNumDocRep\");\nLabel comp_LA_perEmpMantRep=(Label) sup.getInstanciaComponente(\"comp_LA_perEmpMantRep\");\nCombobox comp_CMB_perEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMantRep\");\nCombobox comp_CMB_perTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perTipoDocRep\");\nCombobox comp_CMB_perOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perOpcRep\");\n\nButton comp_BTN_perGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_perGenRep\");\n\n\nString areaSeleccionada;\nComboitem selectedItem = comp_CMB_perOpcRep.getSelectedItem();\nareaSeleccionada = selectedItem.getValue();\n\nswitch (areaSeleccionada){\n          \n      case \"-\":\n          \n          comp_TXT_NumPadronRep.setDisabled(true);\n          comp_TXT_perNumDocRep.setDisabled(true);\n          comp_CMB_perEmpMantRep.setDisabled(true);\n          comp_CMB_perTipoDocRep.setDisabled(true);\n          \n          comp_TXT_NumPadronRep.setValue(\"-\");\n          comp_TXT_perNumDocRep.setValue(\"-\");\n          comp_CMB_perEmpMantRep.setValue(\"-\");\n          comp_CMB_perTipoDocRep.setValue(\"-\");\n        \n          comp_BTN_perGenRep.setDisabled(true);\n          \n          break;\n          \n      case \"Persona por Numero Doc.\":\n          \n          comp_TXT_NumPadronRep.setDisabled(true);\n          comp_CMB_perTipoDocRep.setDisabled(false);\n          comp_TXT_perNumDocRep.setDisabled(false);\n          comp_CMB_perEmpMantRep.setDisabled(true);\n          \n          comp_TXT_NumPadronRep.setValue(\"-\");\n          comp_CMB_perEmpMantRep.setValue(\"-\");\n        \n          comp_BTN_perGenRep.setDisabled(false);\n        \n          \n              /*comp_TXT_NumPadron.setVisible(false);\n              comp_LA_perNumPadron.setVisible(false);\n              comp_TXT_perNumDocRep.setVisible(true);\n              comp_LA_perTipoDocRep.setVisible(true);\n              comp_LA_perNumDocRep.setVisible(true);\n              comp_LA_perEmpMantRep.setVisible(false);\n              comp_CMB_perEmpMantRep.setVisible(false);\n              comp_CMB_perTipoDocRep.setVisible(true);*/\n          break;    \n      case \"Personas por Padron Municipal\":\n          \n          comp_TXT_NumPadronRep.setDisabled(false);\n          comp_TXT_perNumDocRep.setDisabled(true);\n          comp_CMB_perEmpMantRep.setDisabled(true);\n          comp_CMB_perTipoDocRep.setDisabled(true);\n          \n          comp_TXT_perNumDocRep.setValue(\"-\");\n          comp_CMB_perEmpMantRep.setValue(\"-\");\n          comp_CMB_perTipoDocRep.setValue(\"-\");\n        \n          comp_BTN_perGenRep.setDisabled(false);\n        \n              /*comp_TXT_NumPadron.setVisible(true);\n              comp_LA_perNumPadron.setVisible(true);\n              comp_TXT_perNumDocRep.setVisible(false);\n              comp_LA_perTipoDocRep.setVisible(false);\n              comp_LA_perNumDocRep.setVisible(false);\n              comp_LA_perEmpMantRep.setVisible(false);\n              comp_CMB_perEmpMantRep.setVisible(false);\n              comp_CMB_perTipoDocRep.setVisible(false);*/\n          break;\n      case \"Personas por Empresa de Mantenimiento\":\n          \n          comp_TXT_NumPadronRep.setDisabled(true);\n          comp_TXT_perNumDocRep.setDisabled(true);\n          comp_CMB_perEmpMantRep.setDisabled(false);\n          comp_CMB_perTipoDocRep.setDisabled(true);\n          \n          comp_TXT_NumPadronRep.setValue(\"-\");\n          comp_TXT_perNumDocRep.setValue(\"-\");\n          comp_CMB_perTipoDocRep.setValue(\"-\");\n        \n          comp_BTN_perGenRep.setDisabled(false);\n        \n          \t  /*comp_TXT_NumPadron.setVisible(false);\n              comp_LA_perNumPadron.setVisible(false);\n              comp_TXT_perNumDocRep.setVisible(false);\n              comp_LA_perTipoDocRep.setVisible(false);\n              comp_LA_perNumDocRep.setVisible(false);\n              comp_LA_perEmpMantRep.setVisible(true);\n              comp_CMB_perEmpMantRep.setVisible(true);\n              comp_CMB_perTipoDocRep.setVisible(false);*/\n          break;\n        \n      default: \n          \n          comp_TXT_NumPadronRep.setDisabled(true);\n          comp_TXT_perNumDocRep.setDisabled(true);\n          comp_CMB_perEmpMantRep.setDisabled(true);\n          comp_CMB_perTipoDocRep.setDisabled(true);\n          \n          comp_TXT_NumPadronRep.setValue(\"-\");\n          comp_TXT_perNumDocRep.setValue(\"-\");\n          comp_CMB_perEmpMantRep.setValue(\"-\");\n          comp_CMB_perTipoDocRep.setValue(\"-\");\n        \n          comp_BTN_perGenRep.setDisabled(true);\n          \n          break;\n}\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Persona por Número Doc.','Persona por Numero Doc.',1,1,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Personas por Padrón Municipal','Personas por Padron Municipal',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Personas por Empresa de Mantenimiento','Personas por Empresa de Mantenimiento',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaP',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Tipo_Documento',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perTipoDocRep','Tipo de Documento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_perTipoDocRep','',@vIdDistribucionCells,'Combobox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,1,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'DNI','1',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Pasaporte','2',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Numero_Documento',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perNumDocRep','Número de Documento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_perNumDocRep','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Empresa_Mantenimiento',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',4,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perEmpMantRep','Empresa Mantenimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_perEmpMantRep','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\norg.zkoss.zul.Combobox comp_CMB_perEmpMantRep=(org.zkoss.zul.Combobox) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente(\"comp_CMB_perEmpMantRep\");\n        //CARGAR EMPRESAS Y REVISORES EN CMB\n\n        try {\n\n            comp_CMB_perEmpMantRep.getItems().clear();\n            //EMPRESA DE MANTENIMIENTO (GET)\n            java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n            Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\t\t\t\n            Comboitem item = new Comboitem();                \n                item.setLabel(\"-\");\n                item.setValue(\"-\");\n                item.setParent(comp_CMB_perEmpMantRep);\n            \n            for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n\n                String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n                String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n                \n                Comboitem item = new Comboitem();                \n                item.setLabel(razonS);\n                item.setValue(id);\n                item.setParent(comp_CMB_perEmpMantRep);\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Numero_Padron',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perNumPadronRep','Numero de padrón:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_NumPadronRep','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'/*import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\n\nModeloComponente sup = new ModeloComponente();\n\nTextbox comp_TXT_NumPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_NumPadronRep\");\nListbox comp_GRID_personas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_personas\");\nButton comp_BTN_perGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_perGenRep\");\n\n\nString regex = \"^(0|[1-9][0-9]*)$\";\nString texto = comp_TXT_NumPadronRep.getValue();\n\nif (texto.length() <= 6 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_NumPadronRep.setStyle(comp_TXT_NumPadronRep.getStyle() + \"; border-color: #606060\");\n    \n    String padronIngresado = comp_TXT_NumPadronRep.getValue().trim();\n    boolean padronEncontrado = false;\n\n    // Recorrer todos los elementos de la grilla\n    for (Listitem item : comp_GRID_personas.getItems()) {\n\n        Listcell cellPadron = (Listcell) item.getChildren().get(11);\n\n        String padron = cellPadron.getLabel().trim();\n\n        if (padron.equals(padronIngresado)) {\n            padronEncontrado = true;\n            comp_BTN_perGenRep.setDisabled(false);\n            break;\n        }\n    }\n\n    if (!padronEncontrado) {\n\n        Messagebox.show(\"No se encontro un Padrón.\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        comp_TXT_NumPadronRep.setValue(\"-\");\n    }\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un número de padrón válido (1 a 6 dígitos).\", \"error\", comp_TXT_NumPadronRep, \"\", 3100);\n    comp_TXT_NumPadronRep.setStyle(comp_TXT_NumPadronRep.getStyle() + \"; border-color: red\");\n    comp_BTN_perGenRep.setDisabled(true);\n}*/','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteP',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteP',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_perGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nMap valorVariablesReportes = new java.util.HashMap();\n//new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"OP_parametrosGeneralesRep\",new java.util.ArrayList());\n//java.util.Map valorVariablesReportes = (java.util.Map) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\").getAttribute(\"return17VariablesReporte\");\nCombobox comp_CMB_perEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perEmpMantRep\");\nTextbox comp_TXT_perNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_perNumDocRep\");\nCombobox comp_CMB_perTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_perTipoDocRep\");\nTextbox comp_TXT_NumPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_NumPadronRep\");\n\nListbox comp_GRID_personas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_personas\");\n\nvalorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\n// valorVariablesReportes.put(\"rp_cuit\", comp_TXT_empCUITRep.getValue().trim());\nvalorVariablesReportes.put(\"p_tipoDoc\", comp_CMB_perTipoDocRep.getSelectedItem().getValue());\nvalorVariablesReportes.put(\"p_numDoc\", comp_TXT_perNumDocRep.getValue());\nvalorVariablesReportes.put(\"p_empresaId\", comp_CMB_perEmpMantRep.getSelectedItem().getValue()); //\nvalorVariablesReportes.put(\"p_empresaName\", comp_CMB_perEmpMantRep.getValue());\nvalorVariablesReportes.put(\"p_padronNum\", comp_TXT_NumPadronRep.getValue());\n\n\nif(!comp_TXT_NumPadronRep.isDisabled() && comp_TXT_NumPadronRep.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe ingresar un Padrón Municipal.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(!comp_CMB_perTipoDocRep.isDisabled() && comp_CMB_perTipoDocRep.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un Tipo de Documento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(!comp_TXT_perNumDocRep.isDisabled() && !comp_TXT_perNumDocRep.getValue().equals(\"-\") && !comp_CMB_perTipoDocRep.isDisabled() && comp_CMB_perTipoDocRep.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un Tipo de Documento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(!comp_CMB_perTipoDocRep.isDisabled() && !comp_CMB_perTipoDocRep.getValue().equals(\"-\") && comp_TXT_perNumDocRep.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe ingresar un Tipo de Documento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(!comp_CMB_perEmpMantRep.isDisabled() && comp_CMB_perEmpMantRep.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else{\n    \n    if(!comp_TXT_NumPadronRep.getValue().equals(\"-\") && comp_CMB_perTipoDocRep.isDisabled() && comp_TXT_perNumDocRep.isDisabled() && comp_CMB_perEmpMantRep.isDisabled()){\n        \n        String padronIngresado = comp_TXT_NumPadronRep.getValue().trim();\n        boolean padronEncontrado = false;\n\n        for (Listitem item : comp_GRID_personas.getItems()) {\n            \n            Listcell cellPadron = (Listcell) item.getChildren().get(11);\n\n            String padron = cellPadron.getLabel().trim();\n\n            if (padron.equals(padronIngresado)) {\n                padronEncontrado = true;\n\n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"PersonasDeMediosDeElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para quefuncione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n\n                break;\n            }\n        }\n\n        if (!padronEncontrado) {\n\n            Messagebox.show(\"No se encontro el Padrón N° \" + padronIngresado, \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }   \n    \n    \n    }else if((!comp_CMB_perTipoDocRep.getValue().equals(\"-\") && !comp_TXT_perNumDocRep.getValue().equals(\"-\")) && (comp_TXT_NumPadronRep.isDisabled() && comp_CMB_perEmpMantRep.isDisabled())){\n        \n        \n        String tipo_Documento_Ingresado = comp_TXT_perNumDocRep.getValue().trim();\n        boolean documento_Encontrado = false;\n\n        for (Listitem item : comp_GRID_personas.getItems()) {\n            \n            Listcell cell_documento = (Listcell) item.getChildren().get(7);\n\n            String documento = cell_documento.getLabel().trim();\n\n            if (documento.equals(tipo_Documento_Ingresado)) {\n                documento_Encontrado = true;\n\n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"PersonasDeMediosDeElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para quefuncione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n\n                break;\n            }\n        }\n\n        if (!documento_Encontrado) {\n\n            Messagebox.show(\"No se encontro el Documento N° \" + tipo_Documento_Ingresado, \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n    }else /*if(!comp_CMB_perEmpMantRep.getValue().equals(\"-\") && (comp_CMB_perTipoDocRep.isDisabled() && comp_TXT_perNumDocRep.isDisabled() && comp_TXT_NumPadronRep.isDisabled()))*/{\n        \n        \n        //BUSCAR POR EMPRESA\n        String empresa_Ingresado = comp_TXT_perNumDocRep.getValue().trim();\n        boolean empresa_Encontrado = false;\n\n        for (Listitem item : comp_GRID_personas.getItems()) {\n            \n            Listcell cell_empresa = (Listcell) item.getChildren().get(13);\n\n            String empresa = cell_empresa.getLabel().trim();\n\n            if (empresa.equals(empresa_Ingresado)) {\n                empresa_Encontrado = true;\n\n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"PersonasDeMediosDeElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para quefuncione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n\n                break;\n            }\n        }\n\n        if (!empresa_Encontrado) {\n\n            Messagebox.show(\"No se encontro la Empresa de Mantenimiento \" + empresa_Ingresado, \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n    }\n}\n\n\n\n\n\n// Parámetros generales\n// new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"OP_parametrosGeneralesRep\",new java.util.ArrayList());\n// java.util.Map valorVariablesReportes = (java.util.Map) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\").getAttribute(\"return17VariablesReporte\");\n\n// Textbox comp_TXT_nEscritura=(Textbox) sup.getInstanciaComponente(\"comp_TXT_nEscritura\");\n// Textbox comp_TXT_fojasEscritura=(Textbox) sup.getInstanciaComponente(\"comp_TXT_fojasEscritura\");\n// Datebox comp_DA_fechaCancelDeudas=(Datebox) sup.getInstanciaComponente(\"comp_DA_fechaCancelDeudas\");\n// Datebox comp_DA_fechaEscritura=(Datebox) sup.getInstanciaComponente(\"comp_DA_fechaEscritura\");\n// Textbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\n// Obtenemos la ventana\n// Window winBuilder=(Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\");\n\n// Obtenemos el número de expediente que se encuentra encima del formulario y lo guardamos\n// String numDocumentoElectronico= (String) winBuilder.getAttribute(\"nexp\");\n\n\n// Asigno los parámetros adicionales\n// /*valorVariablesReportes.put(\"rep_nom\", comp_TXT_NomApeliTitular.getValue());\n// valorVariablesReportes.put(\"rep_direc\", P_IT_Te_CallePadron.getValue()+\" - Distrito \"+comp_CMB_DistritoPadron.getSelectedItem().getValue().toString());\n// valorVariablesReportes.put(\"rep_Propietario\", comp_TXT_NomApeliTitular.getValue());\n// valorVariablesReportes.put(\"rep_Profesional\", comp_TXT_ApeNom_Pres.getValue());\n// valorVariablesReportes.put(\"rep_TipoProfesional\", comp_CMB_Tipo_Prese.getSelectedItem().getValue().toString());\n// valorVariablesReportes.put(\"rep_tipoObra\", tipoObra);\n// valorVariablesReportes.put(\"rep_Padron\",P_IT_Te_Padron.getValue());*/\n// valorVariablesReportes.put(\"rep_ct_nEscritura\", comp_TXT_nEscritura.getValue());\n// valorVariablesReportes.put(\"rep_ct_fojasEscritura\", comp_TXT_fojasEscritura.getValue());\n// valorVariablesReportes.put(\"rep_ExpteRef\", numDocumentoElectronico);\n// valorVariablesReportes.put(\"rep_da_fechaCancelDeudas\", comp_DA_fechaCancelDeudas.getValue());\n// valorVariablesReportes.put(\"rep_da_fechaEscritura\", comp_DA_fechaEscritura.getValue());\n\n\n\n// /*/ Obtén el valor de la variable y su clase\n// String valor = comp_DA_fechaEscritura.toString();\n// String nombreClase = comp_DA_fechaEscritura.getClass().getName();\n\n// Muestra el valor y el nombre de la clase en un Messagebox\n// Messagebox.show(\"Valor: \" + valor + \"\\nClase: \" + nombreClase, \"Información\", Messagebox.OK, Messagebox.INFORMATION);\n// */\n\n\n\n// /*\n// if (rep_da_fechaEscritura == null) {\n//     rep_da_fechaEscritura = new Date(); // Asignar una fecha predeterminada o manejar según tu lógica.\n// }\n// parametrosJasper.put(\"rep_da_fechaEscritura\", rep_da_fechaEscritura);\n// */\n\n\n\n// java.util.List parametros = new java.util.ArrayList();\n// parametros.add(valorVariablesReportes);\n// parametros.add(\"PersonasDeMediosDeElevacion.jrxml\");\n// new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametros);\n  \n// /*java.util.List parametros = new java.util.ArrayList();\n// parametros.add(valorVariablesReportes);\n// new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimir\",parametros);*/\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_EM',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_P',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_perFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_ABM_Inmuebles','Altas, Bajas y Modificaciones de Inmuebles',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',7,'',8362,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8362,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Padron',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Padron',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmPadron','Padrón Municipal:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_inmPadron','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import java.util.regex.*;\nimport modelos.builder.componentes.*;\nimport modelos.builder.eventos.*;\nimport org.zkoss.zul.*;\nimport org.zkoss.json.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n  \n\nTextbox comp_TXT_inmPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadron\");\nTextbox comp_TXT_inmDomicilio=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmDomicilio\");\nCombobox comp_CMB_inmDistrito=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistrito\");\nCombobox comp_CMB_inmDestino=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDestino\");\n\n\n\n\nString regex = \"^(0|[1-9][0-9]*)$\";\nString texto = comp_TXT_inmPadron.getValue();\n\n\nif (texto.length() <= 6 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: #606060\");\n    \n    if(comp_TXT_inmPadron.getValue().equals(\"1\")){\n        comp_TXT_inmDomicilio.setValue(\"Parque Daniel Benavídez, 47 - Santa Maria, And / 22238\");\n        comp_CMB_inmDistrito.setSelectedIndex(1);\n    \n    }\n    else if(comp_TXT_inmPadron.getValue().equals(\"2\")){\n        comp_TXT_inmDomicilio.setValue(\"Muelle Esperanza Puga, 5 - Washington, Mad / 05498\");\n        comp_CMB_inmDistrito.setSelectedIndex(2);\n    }\n    else if(comp_TXT_inmPadron.getValue().equals(\"3\")){\n        comp_TXT_inmDomicilio.setValue(\"Colegio Eloisa Navarrete, 79 - Grand Prairie, Mad / 10695\");\n        comp_CMB_inmDistrito.setSelectedIndex(3);\n    }\n    else if(comp_TXT_inmPadron.getValue().equals(\"4\")){\n        comp_TXT_inmDomicilio.setValue(\"Conjunto Alberto Castro 8 - Hialeah, Com / 76722\");\n        comp_CMB_inmDistrito.setSelectedIndex(4);\n    }\n    else if(comp_TXT_inmPadron.getValue().equals(\"5\")){\n        comp_TXT_inmDomicilio.setValue(\"Puerta Armando Barrera, 2 - Stamford, Ext / 62690\");\n        comp_CMB_inmDistrito.setSelectedIndex(5);\n    }\n    else if(comp_TXT_inmPadron.getValue().equals(\"5\")){\n        comp_TXT_inmDomicilio.setValue(\"Ramal Mónica, 9 - Temple, Man / 92377\");\n        comp_CMB_inmDistrito.setSelectedIndex(5);\n    }else{\n        comp_TXT_inmDomicilio.setValue(\"Vía Pública Conchita Laureano, 09 - Buffalo Grove, Ast / 75290\");\n        comp_CMB_inmDistrito.setSelectedIndex(5);\n    }\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un número de padrón válido (1 a 6 dígitos).\", \"error\", comp_TXT_inmPadron, \"\", 3100);\n    comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: red\");\n    comp_TXT_inmPadron.setValue(\"-\");\n    \n    comp_TXT_inmDomicilio.setValue(\"-\");\n\tcomp_CMB_inmDistrito.setValue(\"-\");\n}\n\n\n\n\n\n\n/*String patron;\nPattern pat1;\nMatcher mat1;\nString pad = comp_TXT_inmPadron.getValue();\n    \npatron = \"^(0|[1-9][0-9]*)$\";\npat1 = Pattern.compile(patron);\nmat1 = pat1.matcher(pad);\n\nif(!mat1.matches())\n{\n    Messagebox.show(\"El formato es incorrecto. Debe ingresar solo números, de 1 a 6 dígitos. Por favor corrija, gracias\");\n}\nelse\n{\n\n    java.util.List parametros = new java.util.ArrayList();\n    parametros.add(pad);\n    //parametros.add(\"\");\n\n    // Devolver body\n    new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"APIpadron2\",parametros);\n    Map bodyWS= (Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return88datosPadron\");    \n\n    boolean _hay_error = false;\n    if (bodyWS==null) {\n\t\t_hay_error = true;\n    }\n    JSONArray dataWS;\n    if (!_hay_error) {                                    \n\t\tdataWS = (JSONArray) bodyWS.get(\"data\");\n\t\tif (dataWS == null) {\n\t\t\t_hay_error = true;\n\t\t}\n    }\n    JSONObject obj_raiz;\n    if (!_hay_error) {\n    \tobj_raiz = (JSONObject) dataWS.get(0); \n\tif (obj_raiz == null) {\n\t\t_hay_error = true;\n\t}\n    }\n    if (!(obj_raiz == null)) {\n    \tint codigo_respuesta = (int) obj_raiz.get(\"codigo_respuesta\");\n\tString mensaje = (String) obj_raiz.get(\"mensaje\");\n    \tif (codigo_respuesta != 0) {\n\t\tMessagebox.show(\"Código de error: \" + codigo_respuesta + \" - Mensaje: \" + mensaje + \"  -  Por favor reportar a Mesa de Ayuda Sayges\");\n\t\t_hay_error = true;\n\t}\n    }\n    if (!_hay_error) {\n        String nomenclatura = (String) obj_raiz.get(\"nomenclatura\");\n    \tint sup_mensura = (int) obj_raiz.get(\"sup_mensura\");\n\n    \tJSONObject obj_domicilio = (JSONObject) obj_raiz.get(\"domicilio\");\n    \n    \tString direccion_nomencla = (String) obj_domicilio.get(\"direccion_nomencla\");\n    \tString provincia_nombre = (String) obj_domicilio.get(\"provincia_nombre\");\n        String departamento_nombre = (String) obj_domicilio.get(\"departamento_nombre\");\n        String distrito_nombre = (String) obj_domicilio.get(\"distrito_nombre\");\n        String barrio_nombre = (String) obj_domicilio.get(\"barrio_nombre\");\n        String direccion_calle = (String) obj_domicilio.get(\"direccion_calle\");\n        String direccion_numeracion = (String) obj_domicilio.get(\"direccion_numeracion\");\n        String direccion_cp = (String) obj_domicilio.get(\"direccion_cp\");\n        String direccion_manzana = (String) obj_domicilio.get(\"direccion_manzana\");\n        String direccion_casa = (String) obj_domicilio.get(\"direccion_casa\");\n        String direccion_piso = (String) obj_domicilio.get(\"direccion_piso\");\n        String direccion_depto = (String) obj_domicilio.get(\"direccion_depto\");\n        String direccion_area = (String) obj_domicilio.get(\"direccion_area\");\n        String direccion_local = (String) obj_domicilio.get(\"direccion_local\");\n        String direccion_torre = (String) obj_domicilio.get(\"direccion_torre\");\n        String direccion_lote = (String) obj_domicilio.get(\"direccion_lote\");\n        String direccion_x = (String) obj_domicilio.get(\"direccion_x\");\n        String direccion_y = (String) obj_domicilio.get(\"direccion_y\");\n\n        String distrito = (String) obj_raiz.get(\"distrito\");\n\n        JSONArray titulares = (JSONArray) obj_raiz.get(\"titulares\");\n        \n        int cant_titulares = 0;\n        String[] t_nombres = new String[10];\n        String[] t_tipo_doc = new String[10];\n        String[] t_num_doc = new String[10];\n        String[] t_telefono = new String[10];\n        String[] t_cuit = new String[10];\n        \n        if (titulares == null) {\n            \n            Messagebox.show(\"No existen titulares registrados bajo el padrón declarado\");\n        \n        } else {\n            \n            for (JSONObject t: titulares){\n                \n                t_nombres[cant_titulares] = t.get(\"nombre\");\n                if (t.get(\"tipo_doc\").equals(\"Documento Nacional de Identidad\")) {\n                    t_tipo_doc[cant_titulares] = \"DNI\";\n                } else {\n                    t_tipo_doc[cant_titulares] = t.get(\"tipo_doc\");\n                }\n                \n                t_num_doc[cant_titulares] = t.get(\"num_doc\");\n                t_telefono[cant_titulares] = t.get(\"telefono\");\n                t_cuit[cant_titulares] = t.get(\"cuit\");\n                cant_titulares++;\n            }\n        }\n        \n        if (cant_titulares > 1) {\n            Messagebox.show(\"Por favor vaya seleccionando de a uno los titulares en la grilla inferior y pulse el botón EDITAR para agregar teléfono y correo electrónico a cada uno.\");\n        } else {\n            Messagebox.show(\"Por favor seleccione el titular en la grilla inferior y pulse el botón EDITAR para agregar teléfono y correo electrónico.\");\n        }\n        \n        // Domicilio\n        StringBuffer sb = new StringBuffer();\n        sb.append(direccion_calle);\n        if (direccion_numeracion != 0) {\n            sb.append(\" \" + direccion_numeracion.trim());\n        } else {\n            sb.append(\" s/n\");\n        }\n        if (barrio_nombre.equals(\"\")) {\n        } else {\n            sb.append(\" Barrio \" + barrio_nombre);\n        }\n        if (direccion_manzana.equals(\"\") || direccion_manzana.equals(\"0\")) {\n        } else {\n            sb.append(\" Mzna.\" + direccion_manzana);\n        }\n        if (direccion_casa.equals(\"\") || direccion_casa.equals(\"0\")) {\n        } else {\n            sb.append(\" C.\" + direccion_casa);\n        }\n        if (direccion_torre.equals(\"\") || direccion_torre.equals(\"0\")) {\n        } else {\n            sb.append(\" Torre \" + direccion_torre);\n        }\n        if (direccion_piso.equals(\"\") || direccion_piso.equals(\"0\")) {\n        } else {\n            sb.append(\" P. \" + direccion_piso);\n        }\n        if (direccion_depto.equals(\"\") || direccion_depto.equals(\"0\")) {\n        } else {\n            sb.append(\" D.\" + direccion_depto);\n        }\n        if (direccion_local.equals(\"\") || direccion_local.equals(\"0\")) {\n        } else {\n            sb.append(\" Loc.\" + direccion_local);\n        }\n        if (direccion_lote.equals(\"\") || direccion_lote.equals(\"0\")) {\n        } else {\n            sb.append(\" Lote \" + direccion_lote);\n        }\n        if (direccion_area.equals(\"\") || direccion_area.equals(\"0\")) {\n        } else {\n            sb.append(\" Área \" + direccion_area);\n        }\n        \n        String domicilio = sb.toString();\n        comp_TXT_inmDomicilio.setValue(domicilio);\n\n\n        // Distrito\n        Boolean encontrado = false;\n        \n        if (distrito_nombre.isEmpty()) {\n            comp_CMB_inmDistrito.setSelectedItem(null);\n        } else {\n            for (Object obj : comp_CMB_inmDistrito.getItems()) {\n                if (distrito_nombre.equals(((Comboitem) obj).getValue())) {\n                    comp_CMB_inmDistrito.setSelectedItem((Comboitem) obj);\n                    break;\n                }\n            }\n        }\n    }\t// fin for\n\n}else {\t\n    \n    //if (bodyWS == null) {\t\t\n        Messagebox.show(\"En este momento no está disponible el servicio de acceso a datos catastrales y no podrá continuar el trámite.\\nPor favor intente más tarde.\\nsoporte-expedientedigital@guaymallen.gob.ar\");\n        \t\n    \n    //} else {\n        Messagebox.show(\"No se ha podido recuperar información del padrón \" + P_IT_Te_Padron.getValue() + \".\\nPor favor revise que el número sea correcto, si lo es reportar el inconveniente a:\\nsoporte-expedientedigital@guaymallen.gob.ar\",\"Advertencia\",1,Messagebox.EXCLAMATION);\n    }\n}*/\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Domi_Dist_Dest',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Domicilio',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmDomicilio','Domicilio:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_inmDomicilio','',@vIdDistribucionCells,'Textbox','500','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Distrito',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmDistrito','Distrito:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_inmDistrito','',@vIdDistribucionCells,'Combobox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Destino',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmDestino','Destino:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_inmDestino','',@vIdDistribucionCells,'Combobox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Inmueble_Activo',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Inmueble_Activo',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmActivo','Activo:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_inmActivo','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Grilla_Inmuebles',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones_Grilla_I',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_inmAgregar','Agregar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n//TXT\nTextbox comp_TXT_inmPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadron\");\nTextbox comp_TXT_inmDomicilio=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmDomicilio\");\nCombobox comp_CMB_inmDistrito=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistrito\");\nCombobox comp_CMB_inmDestino=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDestino\");\n\n//CHEK\nCheckbox comp_CHK_inmActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_inmActivo\");\n\n//BTN\nButton comp_BTN_inmAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmAgregar\");\nButton comp_BTN_inmEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmEditar\");\nButton comp_BTN_inmCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmCancelar\");\n\n\n\n/****************************LÓGICA****************************/\nif(comp_TXT_inmPadron.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Padrón Municipal.\", \"error\", comp_TXT_inmPadron, \"\",3100);\n    comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_inmDomicilio.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Domicilio.\", \"error\", comp_TXT_inmDomicilio, \"\",3100);\n    comp_TXT_inmDomicilio.setStyle(comp_TXT_inmDomicilio.getStyle() + \"; border-color: red\");\n\n}else if(comp_CMB_inmDistrito.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar una Distrito.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(comp_CMB_inmDestino.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un Destino.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else{\n\n    //PADRON\n    String padronString = comp_TXT_inmPadron.getValue().trim();\n    int padron = Integer.parseInt(padronString);\n    \n    //OBTENER EL ID DEL DISTRITO\n    Comboitem selectedItemDi = comp_CMB_inmDistrito.getSelectedItem();\n\tString selectedDisId = (String) selectedItemDi.getValue(); // Obtener el id seleccionado como cadena \n    int distritoID = Integer.parseInt(selectedDisId);\n    \n    //OBTENER EL ID DEL DESTINO\n    Comboitem selectedItemDe = comp_CMB_inmDestino.getSelectedItem();\n\tString selectedDesId = (String) selectedItemDe.getValue(); // Obtener el id seleccionado como cadena \n    int destinoID = Integer.parseInt(selectedDesId);\n    \n    try {\n        \n        \n        \n        //LOGICA APIS\n        //INMUEBLE (POST)\n    \tjava.util.List parametrosfnPostInmueble = new java.util.ArrayList();\n        parametrosfnPostInmueble.add(padron); //padron / int\n        parametrosfnPostInmueble.add(comp_TXT_inmDomicilio.getValue().trim()); //domicilio / String\n        parametrosfnPostInmueble.add(\"500\"); //codigoPostal / String\n        parametrosfnPostInmueble.add(distritoID); //distritoID / int\n        parametrosfnPostInmueble.add(destinoID); //destinoID / int\n        parametrosfnPostInmueble.add(comp_CHK_inmActivo.isChecked()); //activo / Boolean\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostInmueble\",parametrosfnPostInmueble);\n\n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de Inmueble NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    \n    try {\n        \n        //LOGICA APIS\n        //INMUEBLE (GET)\n        java.util.List parametrosfnGetInmuebles = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetInmuebles\",parametrosfnGetInmuebles);\n        Map return80map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return80map\");\n        \n        int size = return80map.get(\"inmuebles\").size();\n        String id = return80map.get(\"inmuebles\").get(size - 1).get(\"inm_id\").toString();\n        \n        Listitem item = new Listitem();  \n        \n        // Agregar los Listcell al Listitem\n        item.appendChild(new Listcell(id));\n        item.appendChild(new Listcell(comp_TXT_inmPadron.getValue()));\n        item.appendChild(new Listcell(comp_TXT_inmDomicilio.getValue()));\n        item.appendChild(new Listcell(comp_CMB_inmDistrito.getValue()));\n        item.appendChild(new Listcell(comp_CMB_inmDestino.getValue()));\n        item.appendChild(new Listcell(comp_CHK_inmActivo.isChecked() ? \"SI\" : \"NO\"));\n\n        \n        Toolbarbutton desv = new Toolbarbutton();\n        desv.setAttribute(\"item\", item);\n        Listcell reg1 = new Listcell();\n        reg1.setStyle(\"text-align:center;\");\n        reg1.setParent(item);\n        desv.setParent(reg1);\n        desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n        desv.setLabel(\"Borrar\");\n        desv.setWidth(\"80px\");\n        desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n            public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n\n                final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                int ind = i.getIndex();\n                comp_GRID_inmuebles.removeItemAt(ind);\n\n                comp_TXT_inmPadron.setValue(\"-\");\n                comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: #606060\");\n                comp_TXT_inmDomicilio.setValue(\"-\");\n                comp_TXT_inmDomicilio.setStyle(comp_TXT_inmDomicilio.getStyle() + \"; border-color: #606060\");\n                comp_CMB_inmDistrito.setValue(\"-\");\n                comp_CMB_inmDestino.setValue(\"-\");\n                comp_CHK_inmActivo.setChecked(true);\n\n                comp_BTN_inmEditar.setLabel(\"Editar\");\n                comp_BTN_inmEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n\n            }\n        });\n\n        comp_GRID_inmuebles.appendChild(item); // Se guarda en la grilla item\n\n        comp_TXT_inmPadron.setValue(\"-\");\n        comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: #606060\");\n        comp_TXT_inmDomicilio.setValue(\"-\");\n        comp_TXT_inmDomicilio.setStyle(comp_TXT_inmDomicilio.getStyle() + \"; border-color: #606060\");\n        comp_CMB_inmDistrito.setValue(\"-\");\n        comp_CMB_inmDestino.setValue(\"-\");\n        comp_CHK_inmActivo.setChecked(true);\n\n        comp_BTN_inmEditar.setDisabled(false);\n        comp_BTN_inmCancelar.setDisabled(false);\n        \n        \n        \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API GET de INMUEBLE NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n}\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_inmEditar','Editar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n//TXT\nTextbox comp_TXT_inmPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadron\");\nTextbox comp_TXT_inmDomicilio=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmDomicilio\");\nCombobox comp_CMB_inmDistrito=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistrito\");\nCombobox comp_CMB_inmDestino=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDestino\");\n\n//CHEK\nCheckbox comp_CHK_inmActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_inmActivo\");\n\n//BTN\nButton comp_BTN_inmAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmAgregar\");\nButton comp_BTN_inmEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmEditar\");\nButton comp_BTN_inmCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmCancelar\");\n\n\n\n\n/****************************LÓGICA****************************/\nint indice= comp_GRID_inmuebles.getSelectedIndex();\n\nif (indice == -1) {\n    \n    //Clients.showNotification(\"Por favor, seleccione el registro que desea Editar.\",true); \n    Messagebox.show(\"Por favor, seleccione el registro que desea Editar.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else {\n    \n    org.zkoss.zul.Listitem item = (org.zkoss.zul.Listitem) comp_GRID_inmuebles.getItemAtIndex(indice);\n    Listcell cel0 = (Listcell) item.getChildren().get(0);\n    Listcell cel1 = (Listcell) item.getChildren().get(1);\n    Listcell cel2 = (Listcell) item.getChildren().get(2);\n    Listcell cel3 = (Listcell) item.getChildren().get(3);\n    Listcell cel4 = (Listcell) item.getChildren().get(4);\n    Listcell cel5 = (Listcell) item.getChildren().get(5);\n        \n    \n    if (comp_BTN_inmEditar.getLabel().equals(\"Editar\")){\n        \n        //comp_TXT_empRazonSocial.setValue(item.getChildren().get(0).getLabel().trim());\n\t\tString padron = item.getChildren().get(1).getLabel().trim();\n\t\tString domicilio = item.getChildren().get(2).getLabel().trim();\n\t\tString distrito = item.getChildren().get(3).getLabel().trim();\n\t\tString destino = item.getChildren().get(4).getLabel().trim();\n\t\tString activo = item.getChildren().get(5).getLabel().trim();\n        \n        comp_TXT_inmPadron.setValue(padron);\n        comp_TXT_inmDomicilio.setValue(domicilio);\n        comp_CMB_inmDistrito.setValue(distrito);\n        comp_CMB_inmDestino.setValue(destino);\n        comp_CHK_inmActivo.setValue(activo);\n        \n        if (activo.equals(\"SI\")){\n        \tcomp_CHK_inmActivo.setChecked(true);\n        } else{\n            comp_CHK_inmActivo.setChecked(false);\n        }\n        \n        \n        comp_BTN_inmEditar.setLabel(\"Guardar Cambios\");\n        comp_BTN_inmEditar.setStyle(\"margin-left:25px; background:#008000; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        comp_BTN_inmAgregar.setDisabled(true);\n    \n    }else if (comp_BTN_inmEditar.getLabel().equals(\"Guardar Cambios\")){\n        \n        \n        \n        //VALIDAR QUE NINGUN DATOS ESTE CON \"-\"\n        if(comp_TXT_inmPadron.getValue().equals(\"-\")){\n    \n            Clients.showNotification(\"Debe ingresar un Padrón Municipal.\", \"error\", comp_TXT_inmPadron, \"\",3100);\n            comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_inmDomicilio.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Domicilio.\", \"error\", comp_TXT_inmDomicilio, \"\",3100);\n            comp_TXT_inmDomicilio.setStyle(comp_TXT_inmDomicilio.getStyle() + \"; border-color: red\");\n\n        }else if(comp_CMB_inmDistrito.getValue().equals(\"-\")){\n            \n            Messagebox.show(\"Debe seleccionar un Distrito.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else if(comp_CMB_inmDestino.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar un Destino.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else{\n            \n            cel1.setLabel(comp_TXT_inmPadron.getValue());\n            cel1.setParent(item);\n\n            cel2.setLabel(comp_TXT_inmDomicilio.getValue());\n            cel2.setParent(item);\n\n            cel3.setLabel(comp_CMB_inmDistrito.getValue());\n            cel3.setParent(item);\n\n            cel4.setLabel(comp_CMB_inmDestino.getValue());\n            cel4.setParent(item);\n            \n            if (comp_CHK_inmActivo.isChecked()) {\n                cel5.setLabel(\"SI\");\n                cel5.setParent(item);\n            } else {\n                cel5.setLabel(\"NO\");\n                cel5.setParent(item);\n            }\n            \n            \n            \n            String id = ((org.zkoss.zul.Listcell) item.getChildren().get(0)).getLabel().trim();\n        \tint idInmueble = Integer.parseInt(id);\n            \n            //PADRON\n            String padronString = comp_TXT_inmPadron.getValue().trim();\n            int padron = Integer.parseInt(padronString);\n\n            //OBTENER EL ID DEL DISTRITO\n            Comboitem selectedItemDi = comp_CMB_inmDistrito.getSelectedItem();\n            String selectedDisId = (String) selectedItemDi.getValue(); // Obtener el id seleccionado como cadena \n            int distritoID = Integer.parseInt(selectedDisId);\n\n            //OBTENER EL ID DEL DESTINO\n            Comboitem selectedItemDe = comp_CMB_inmDestino.getSelectedItem();\n            String selectedDesId = (String) selectedItemDe.getValue(); // Obtener el id seleccionado como cadena \n            int destinoID = Integer.parseInt(selectedDesId);\n            \n            \n            try {\n                \n                //INMUEBLE (PUT)\n                java.util.List parametrosfnPutInmueble = new java.util.ArrayList();\n                parametrosfnPutInmueble.add(idInmueble); //inmuebleID / int\n                parametrosfnPutInmueble.add(padron); //padron / int\n                parametrosfnPutInmueble.add(comp_TXT_inmDomicilio.getValue()); //direccion / String\n                parametrosfnPutInmueble.add(\"10\"); //codigoPostal / String\n                parametrosfnPutInmueble.add(distritoID); //distritoID / int\n                parametrosfnPutInmueble.add(destinoID); //destinoID / int\n                parametrosfnPutInmueble.add(comp_CHK_inmActivo.isChecked()); //activo / Boolean\n            \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutInmueble\",parametrosfnPutInmueble);\n                \n            } catch (Exception e) {\n                //Messagebox.show(\"El servicio de la API PUT de INMUEBLE NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n            }\n\n            comp_TXT_inmPadron.setValue(\"-\");\n            comp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: #606060\");\n            comp_TXT_inmDomicilio.setValue(\"-\");\n            comp_TXT_inmDomicilio.setStyle(comp_TXT_inmDomicilio.getStyle() + \"; border-color: #606060\");\n            comp_CMB_inmDistrito.setValue(\"-\");\n            comp_CMB_inmDestino.setValue(\"-\");\n            comp_CHK_inmActivo.setChecked(true);\n            \n            comp_BTN_inmEditar.setLabel(\"Editar\");\n            comp_BTN_inmEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n            comp_BTN_inmAgregar.setDisabled(false);\n            \n        }\n    }   \n}\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_inmCancelar','Cancelar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px;  background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n//TXT\nTextbox comp_TXT_inmPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadron\");\nTextbox comp_TXT_inmDomicilio=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmDomicilio\");\nCombobox comp_CMB_inmDistrito=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistrito\");\nCombobox comp_CMB_inmDestino=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDestino\");\n\n//CHEK\nCheckbox comp_CHK_inmActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_inmActivo\");\n\n//BTN\nButton comp_BTN_inmAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmAgregar\");\nButton comp_BTN_inmEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmEditar\");\nButton comp_BTN_inmCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_inmCancelar\");\n\n\n\n/****************************LÓGICA****************************/\ncomp_TXT_inmPadron.setValue(\"-\");\ncomp_TXT_inmPadron.setStyle(comp_TXT_inmPadron.getStyle() + \"; border-color: #606060\");\ncomp_TXT_inmDomicilio.setValue(\"-\");\ncomp_TXT_inmDomicilio.setStyle(comp_TXT_inmDomicilio.getStyle() + \"; border-color: #606060\");\ncomp_CMB_inmDistrito.setValue(\"-\");\ncomp_CMB_inmDestino.setValue(\"-\");\ncomp_CHK_inmActivo.setChecked(true);\n\ncomp_BTN_inmEditar.setLabel(\"Editar\");\ncomp_BTN_inmEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\ncomp_BTN_inmAgregar.setDisabled(false);\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Grilla_Inmuebles',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_GRID_inmuebles','',@vIdDistribucionCells,'Listbox','100','%','130','px','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','height: auto !important;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,6,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,13,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,22,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,70,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,71,'true','null','1.0') ;
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Padrón',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Domicilio',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Distrito',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Destino',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Activo',0,0,'-1','-',0,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_CL_Inmuebles','Consulta y Listado de Inmuebles',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',8,'',8363,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8363,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_ReporteInmueble',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_ReporteInmueble',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmOpcReporte','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_inmOpcReporte','',@vIdDistribucionCells,'Combobox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.Component;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport org.zkoss.zul.Paging;\n\n\nModeloComponente sup = new ModeloComponente();\n\n\nCombobox comp_CMB_inmOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmOpcReporte\");\nCombobox comp_CMB_inmDistritoRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmDistritoRep\");\n\nTextbox comp_TXT_inmPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadronRep\");\nButton comp_BTN_inmGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_inmGenRep\");\n\n\n\n\nString opciones = comp_CMB_inmOpcReporte.getValue().toString();\n\nif(opciones.equals(\"-\")){\n    \n    comp_CMB_inmDistritoRep.setDisabled(true);\n\tcomp_TXT_inmPadronRep.setDisabled(true);\n    \n    comp_CMB_inmDistritoRep.setValue(\"-\");\n\tcomp_TXT_inmPadronRep.setValue(\"-\");\n    \n    comp_BTN_inmGenRep.setDisabled(true);\n\n}else if(opciones.equals(\"Todos los inmuebles\")){\n    \n    //comp_CMB_activo.setDisabled(true);\n    comp_CMB_inmDistritoRep.setDisabled(true);\n    comp_TXT_inmPadronRep.setDisabled(true);\n    \n\t//comp_CMB_activo.setValue(\"-\");\n    comp_CMB_inmDistritoRep.setValue(\"-\");\n    comp_TXT_inmPadronRep.setValue(\"-\");\n    \n    comp_BTN_inmGenRep.setDisabled(false);\n    \n    \n}else if(opciones.equals(\"Datos del inmueble por Padrón\")){\n    \n    //comp_CMB_activo.setDisabled(true);\n    comp_CMB_inmDistritoRep.setDisabled(true);\n    comp_TXT_inmPadronRep.setDisabled(false);\n    \n\t//comp_CMB_activo.setValue(\"-\");\n    comp_CMB_inmDistritoRep.setValue(\"-\");\n    \n    comp_BTN_inmGenRep.setDisabled(false);\n\n}else if(opciones.equals(\"Todos los inmuebles de un distrito\")){\n    \n    //comp_CMB_activo.setDisabled(true);\n    comp_CMB_inmDistritoRep.setDisabled(false);\n    comp_TXT_inmPadronRep.setDisabled(true);\n    \n\t//comp_CMB_activo.setValue(\"-\");\n    comp_TXT_inmPadronRep.setValue(\"-\");\n    \n    comp_BTN_inmGenRep.setDisabled(false);\n    \n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Todos los inmuebles','Todos los inmuebles',1,1,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Todos los inmuebles de un distrito','Todos los inmuebles de un distrito',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Datos del inmueble por Padrón','Datos del inmueble por Padrón',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaInmueble',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Distrito',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmDistritoRep','Distrito:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_inmDistritoRep','',@vIdDistribucionCells,'Combobox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_inmDistritoRep=(Textbox) sup.getInstanciaComponente(\"comp_CMB_inmDistritoRep\");\n\ntry {\n        comp_CMB_inmDistritoRep.getItems().clear();\n\n        //INMUEBLE (GET)\n        java.util.List parametrosfnGetInmuebles = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetInmuebles\",parametrosfnGetInmuebles);\n        Map return80map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return80map\");\n\n        java.util.List parametrosfnGetDistrito = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetDistrito\",parametrosfnGetDistrito);\n        Map return89map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return89map\");\n\n        Comboitem item = new Comboitem();                \n        item.setLabel(\"-\");\n        item.setValue(\"-\");\n        item.setParent(comp_CMB_inmDistritoRep);\n\n        for (int i = 0; i < return89map.get(\"distritos\").size(); i++){\n            \n            String id_dis = return89map.get(\"distritos\").get(i).get(\"dis_id\").toString(); \n            String name_dis =  return89map.get(\"distritos\").get(i).get(\"dis_nombre\").toString();\n\n        \n            Comboitem item = new Comboitem();                \n            item.setLabel(name_dis);\n            item.setValue(id_dis);\n            item.setParent(comp_CMB_inmDistritoRep);\n        }\n\n    } \n    catch (Exception e) \n    {\n        Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Padron_Municipal',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmPadronRep','Padrón Municipal:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_inmPadronRep','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_activo',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_activo','',@vIdDistribucionCells,'Combobox','50','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Si','1',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'No','0',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteInmueble',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteInmueble',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_inmGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nMap valorVariablesReportes = new java.util.HashMap();\n\nCombobox comp_CMB_inmDistritoRep=(Textbox) sup.getInstanciaComponente(\"comp_CMB_inmDistritoRep\");\nTextbox comp_TXT_inmPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_inmPadronRep\");\nCombobox comp_CMB_activo=(Combobox) sup.getInstanciaComponente(\"comp_CMB_activo\");\nCombobox comp_CMB_inmOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_inmOpcReporte\");\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n\nvalorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\nvalorVariablesReportes.put(\"p_distrito\", comp_CMB_inmDistritoRep.getSelectedItem().getValue().toString());\nvalorVariablesReportes.put(\"p_distritoName\", comp_CMB_inmDistritoRep.getValue().toString());\nvalorVariablesReportes.put(\"p_padronNum\", comp_TXT_inmPadronRep.getValue().toString());\nvalorVariablesReportes.put(\"p_activo\", comp_CMB_activo.getSelectedItem().getValue().toString());\n\n\n\nif(!comp_TXT_inmPadronRep.isDisabled() && comp_TXT_inmPadronRep.getValue().equals(\"-\") && comp_CMB_inmDistritoRep.isDisabled()){\n    \n    Messagebox.show(\"Debe ingresar un Padrón Municipal.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(!comp_CMB_inmDistritoRep.isDisabled() && comp_CMB_inmDistritoRep.getValue().equals(\"-\") && comp_TXT_inmPadronRep.isDisabled()){\n    \n    Messagebox.show(\"Debe seleccionar una Distrito.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else{\n    \n    if(!comp_TXT_inmPadronRep.getValue().equals(\"-\") && comp_CMB_inmDistritoRep.isDisabled()){\n        \n        String padron_Ingresado = comp_TXT_inmPadronRep.getValue().trim();\n        boolean padron_Encontrado = false;\n\n        for (Listitem item : comp_GRID_inmuebles.getItems()) {\n            \n            Listcell cell_Padron = (Listcell) item.getChildren().get(1);\n\n            String padron = cell_Padron.getLabel().trim();\n\n            if (padron.equals(padron_Ingresado)) {\n                padron_Encontrado = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"InmueblesMed.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                \n                break;\n            }\n        }\n        \n        if (!padron_Encontrado) {\n            Messagebox.show(\"No se encontro el Padrón N° \" + padron_Ingresado, \"Error\", Messagebox.OK, Messagebox.ERROR);\n        } \n    \n    }else if(!comp_CMB_inmDistritoRep.getValue().equals(\"-\") && comp_TXT_inmPadronRep.isDisabled()){\n        \n        \n        String distrito_Ingresado = comp_CMB_inmDistritoRep.getValue().trim();\n        boolean distrito_Encontrado = false;\n\n        for (Listitem item : comp_GRID_inmuebles.getItems()) {\n            \n            Listcell cell_Distrito = (Listcell) item.getChildren().get(3);\n\n            String distrito = cell_Distrito.getLabel().trim();\n\n            if (distrito.equals(distrito_Ingresado)) {\n                distrito_Encontrado = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"InmueblesMed.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                \n                break;\n            }\n        }\n        \n        if (!distrito_Encontrado) {\n            Messagebox.show(\"No se encontro el Distrito \" + distrito_Ingresado, \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n    }else{\n        \n        //Función reporte\n        List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n        parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n        parametrosfnImprimirSelReporte.add(\"InmueblesMed.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n        org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                \n    }\n\n}\n\n\n\n\n// import modelos.builder.componentes.*;\n// import org.zkoss.zul.*;\n\n// ModeloComponente sup = new ModeloComponente();\n\n// //Parámetros generales\n// new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"OP_parametrosGeneralesRep\",new java.util.ArrayList());\n// java.util.Map valorVariablesReportes = (java.util.Map) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\").getAttribute(\"return17VariablesReporte\");\n\n// //Textbox comp_TXT_nEscritura=(Textbox) sup.getInstanciaComponente(\"comp_TXT_nEscritura\");\n// //Textbox comp_TXT_fojasEscritura=(Textbox) sup.getInstanciaComponente(\"comp_TXT_fojasEscritura\");\n// //Datebox comp_DA_fechaCancelDeudas=(Datebox) sup.getInstanciaComponente(\"comp_DA_fechaCancelDeudas\");\n// //Datebox comp_DA_fechaEscritura=(Datebox) sup.getInstanciaComponente(\"comp_DA_fechaEscritura\");\n// Textbox comp_TXT_empCUITRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_empCUITRep\");\n// //Obtenemos la ventana\n// Window winBuilder=(Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\");\n\n// //Obtenemos el número de expediente que se encuentra encima del formulario y lo guardamos\n// String numDocumentoElectronico= (String) winBuilder.getAttribute(\"nexp\");\n\n\n// //Asigno los parámetros adicionales\n// /*valorVariablesReportes.put(\"rep_nom\", comp_TXT_NomApeliTitular.getValue());\n// valorVariablesReportes.put(\"rep_direc\", P_IT_Te_CallePadron.getValue()+\" - Distrito \"+comp_CMB_DistritoPadron.getSelectedItem().getValue().toString());\n// valorVariablesReportes.put(\"rep_Propietario\", comp_TXT_NomApeliTitular.getValue());\n// valorVariablesReportes.put(\"rep_Profesional\", comp_TXT_ApeNom_Pres.getValue());\n// valorVariablesReportes.put(\"rep_TipoProfesional\", comp_CMB_Tipo_Prese.getSelectedItem().getValue().toString());\n// valorVariablesReportes.put(\"rep_tipoObra\", tipoObra);\n// valorVariablesReportes.put(\"rep_Padron\",P_IT_Te_Padron.getValue());*/\n// valorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\n// valorVariablesReportes.put(\"rp_cuit\", comp_TXT_empCUITRep.getValue().trim());\n// //valorVariablesReportes.put(\"rep_ct_nEscritura\", comp_TXT_nEscritura.getValue());\n// //valorVariablesReportes.put(\"rep_ct_fojasEscritura\", comp_TXT_fojasEscritura.getValue());\n// //valorVariablesReportes.put(\"rep_ExpteRef\", numDocumentoElectronico);\n// //valorVariablesReportes.put(\"rep_da_fechaCancelDeudas\", comp_DA_fechaCancelDeudas.getValue());\n// //valorVariablesReportes.put(\"rep_da_fechaEscritura\", comp_DA_fechaEscritura.getValue());\n\n\n\n// /*/ Obtén el valor de la variable y su clase\n// String valor = comp_DA_fechaEscritura.toString();\n// String nombreClase = comp_DA_fechaEscritura.getClass().getName();\n\n// // Muestra el valor y el nombre de la clase en un Messagebox\n// Messagebox.show(\"Valor: \" + valor + \"\\nClase: \" + nombreClase, \"Información\", Messagebox.OK, Messagebox.INFORMATION);\n// */\n\n\n\n// /*\n// if (rep_da_fechaEscritura == null) {\n//     rep_da_fechaEscritura = new Date(); // Asignar una fecha predeterminada o manejar según tu lógica.\n// }\n// parametrosJasper.put(\"rep_da_fechaEscritura\", rep_da_fechaEscritura);\n// */\n\n\n\n// java.util.List parametros = new java.util.ArrayList();\n// parametros.add(valorVariablesReportes);\n// parametros.add(\"InmueblesMed.jrxml\");\n// new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametros);\n  \n// /*java.util.List parametros = new java.util.ArrayList();\n// parametros.add(valorVariablesReportes);\n// new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimir\",parametros);*/\n\n\n\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_Inmueble',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_Inmueble',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_inmFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_ABM_ME','Altas, Bajas y Modificaciones de Medios de Elevación',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',9,'',8364,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8364,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_PadronM_Dire',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_PadronMunicipal',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdePadron','Padrón Municipal:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mdePadron','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_mdePadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadron\");\nLabel comp_LA_mdeInmDireccion=(Label) sup.getInstanciaComponente(\"comp_LA_mdeInmDireccion\");\nTextbox comp_TXT_mde_IDinmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mde_IDinmueble\");\nTextbox comp_TXT_mde_Distrito_Oculto=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mde_Distrito_Oculto\");\n\n//GRILLA INMUEBLES\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n\n\n\nString regex = \"^(0|[1-9][0-9]*)$\";\nString texto = comp_TXT_mdePadron.getValue();\n\nif (texto.length() <= 6 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: #606060\");\n    \n    \n    // Obtener el valor ingresado en el Textbox\n    String padronIngresado = comp_TXT_mdePadron.getValue().trim();\n\n    // Bandera para saber si encontramos el padrón\n    boolean padronEncontrado = false;\n\n    // Recorrer todos los elementos de la grilla\n    for (Listitem item : comp_GRID_inmuebles.getItems()) {\n\n        // Obtener el número de padrón y el ID de la grilla\n        Listcell cellDistrito = (Listcell) item.getChildren().get(3); // celda del domicilio\n        Listcell cellDomicilio = (Listcell) item.getChildren().get(2); // celda del domicilio\n        Listcell cellPadron = (Listcell) item.getChildren().get(1); // celda del padrón\n        Listcell cellID = (Listcell) item.getChildren().get(0); // celda del ID\n\n        String padron = cellPadron.getLabel().trim();\n\n        // Comprobar si el padrón ingresado coincide con el de la grilla\n        if (padron.equals(padronIngresado)) {\n\n            // Si es correcto, obtener el ID del PADRON asociado\n            String id_PadronAsociado = cellID.getLabel().trim();\n\n            // Si es correcto, obtener el PADRON asociado\n            String padronAsociado = cellPadron.getLabel().trim();\n\n            // Si es correcto, obtener el Domicilio asociado\n            String domicilio = cellDomicilio.getLabel().trim();\n            \n            //Si es correcto, obtener el Distrito asociado \n            String distrito = cellDistrito.getLabel().trim();\n\n            // Establecer el ID en el Textbox\n            comp_TXT_mde_Distrito_Oculto.setValue(distrito);\n            comp_TXT_mde_IDinmueble.setValue(id_PadronAsociado); //aca antes enviaba el ID ahora necesito mandar su numero de padron\n            comp_TXT_mdePadron.setValue(padronAsociado);\n\n            // Establecer el Domicilio en el Label\n            comp_LA_mdeInmDireccion.setValue(domicilio);\n\n            // Indicar que se encontró el padrón\n            padronEncontrado = true;\n\n            break; // salir del ciclo, ya encontramos lo que buscábamos\n        }    \n    }\n\n    // Si el padrón no se encontró, mostrar mensaje\n    if (!padronEncontrado) {\n\n        Messagebox.show(\"Padrón no encontrado.\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n\t\tcomp_TXT_mdePadron.setValue(\"-\");\n        comp_LA_mdeInmDireccion.setValue(\"Dirección\");\n        comp_TXT_mde_IDinmueble.setValue(\"-\");\n        comp_TXT_mde_Distrito_Oculto.setValue(\"-\");\n    }\n    \n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un número de padrón válido (1 a 6 dígitos).\", \"error\", comp_TXT_mdePadron, \"\", 3100);\n    comp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: red\");\n    comp_TXT_mdePadron.setValue(\"-\");\n\n}\t\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Direccion',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeInmDireccion','Dirección',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','margin-right:50px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mde_IDinmueble','ID',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Distrito_Oculto',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mde_Distrito_Oculto','Dsitrito Oculto:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mde_Distrito_Oculto','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_TipoM_Ubi_Niv',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Tipo_Maquina',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeMaquina','Tipo de Máquina:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mdeMaquina','',@vIdDistribucionCells,'Combobox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Ascensor','Ascensor',0,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Montacarga','Montacarga',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Escalera','Escalera',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Ubicacion',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeUbicacion','Ubicación:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mdeUbicacion','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_mdeUbicacion=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeUbicacion\");\n\n//Letras\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$\";\nString texto = comp_TXT_mdeUbicacion.getValue();\n\n\nif (texto.length() <= 200 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese una ubicación válida.\", \"error\", comp_TXT_mdeUbicacion, \"\", 3100);\n    comp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: red\");\n    comp_TXT_mdeUbicacion.setValue(\"-\");\n    \n}\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Niveles',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',4,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeNiveles','Niveles:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mdeNiveles','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_mdeNiveles=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeNiveles\");\n\n\nString regex = \"^(0|[1-9][0-9]?|[1-9]0)$\";\nString texto = comp_TXT_mdeNiveles.getValue();\n\n\nif (texto.matches(regex) && !texto.equals(\"-\")) {\n    \n    comp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un nivel válido.\", \"error\", comp_TXT_mdeNiveles, \"\", 3100);\n    comp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: red\");\n    comp_TXT_mdeNiveles.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Tipo',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeTipo','Tipo:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mdeTipo','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_mdeTipo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeTipo\");\n\n//Letras\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$\";\nString texto = comp_TXT_mdeTipo.getValue();\n\n\nif (texto.length() <= 25 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un tipo válido.\", \"error\", comp_TXT_mdeTipo, \"\", 3100);\n    comp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: red\");\n    comp_TXT_mdeTipo.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_PlanosA_ExpedienteP',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Planos_Aprobados',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdePlanosAprob','¿Planos Aprobados?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_mdePlanosAprob','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Expediente_Planos',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeExptePlanos','Expediente de planos:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mdeExptePlanos','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_mdeExptePlanos=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeExptePlanos\");\n\nString regex = \"^[0-9a-zA-ZáéíóúÁÉÍÓÚñÑ\\s-]+$\";\nString texto = comp_TXT_mdeExptePlanos.getValue();\n\n\nif (texto.length() <= 20 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_mdeExptePlanos.setStyle(comp_TXT_mdeExptePlanos.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un expediente válido.\", \"error\", comp_TXT_mdeExptePlanos, \"\", 3100);\n    comp_TXT_mdeExptePlanos.setStyle(comp_TXT_mdeExptePlanos.getStyle() + \"; border-color: red\");\n    comp_TXT_mdeExptePlanos.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Empresa_Mantenimiento',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Empresa_Mantenimiento',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeEmpMant','Empresa de Mantenimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mdeEmpMant','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'empresa1','empresa1',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'empresa2','empresa2',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_MDE_Activo',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_MDE_Activo',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeActivo','Activo:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_mdeActivo','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Grilla_MDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones_Grilla_MDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mdeAgregar','Agregar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_medioselevacion=(Listbox) sup.getInstanciaComponente(\"comp_GRID_medioselevacion\");\n\n//CMB\nCombobox comp_CMB_mdeMaquina=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaquina\");\nCombobox comp_CMB_mdeEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMant\");\n\n//TXT\nTextbox comp_TXT_mde_IDinmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mde_IDinmueble\");\nTextbox comp_TXT_mdePadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadron\");\nTextbox comp_TXT_mdeUbicacion=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeUbicacion\");\nTextbox comp_TXT_mdeTipo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeTipo\");\nTextbox comp_TXT_mdeNiveles=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeNiveles\");\nTextbox comp_TXT_mdeExptePlanos=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeExptePlanos\");\n\n//CHEK\nCheckbox comp_CHK_mdePlanosAprob=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdePlanosAprob\");\nCheckbox comp_CHK_mdeActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdeActivo\");\n\n//BTN\nButton comp_BTN_mdeAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeAgregar\");\nButton comp_BTN_mdeEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeEditar\");\nButton comp_BTN_mdeCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeCancelar\");\n\n\n\n \n\n/****************************LÓGICA****************************/\nif(comp_TXT_mdePadron.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Padrón Municipal.\", \"error\", comp_TXT_mdePadron, \"\",3100);\n    comp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: red\");\n\n}else if(comp_CMB_mdeMaquina.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un tipo de Máquina.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(comp_TXT_mdeUbicacion.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar una Ubicación.\", \"error\", comp_TXT_mdeUbicacion, \"\",3100);\n    comp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_mdeTipo.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar una Tipo.\", \"error\", comp_TXT_mdeTipo, \"\",3100);\n    comp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: red\");\n\n}\nelse if(comp_TXT_mdeNiveles.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar niveles.\", \"error\", comp_TXT_mdeNiveles, \"\",3100);\n    comp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: red\"); \n\n/*}else if(comp_CMB_mdeEmpMant.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n*/}else{\n\n    \n    //OBTENER EL ID DEL TIPO DE MAQUINA\n    Comboitem selectedItemMaq = comp_CMB_mdeMaquina.getSelectedItem();\n\tString selectedMaqId = (String) selectedItemMaq.getValue(); // Obtener el emp_id seleccionado como cadena \n    int maquinaID = Integer.parseInt(selectedMaqId);\n    \n    //OBTENER EL ID DE EMPRESA DE MANTENIMIENTO\n    Comboitem selectedItemEmp = comp_CMB_mdeEmpMant.getSelectedItem();\n    int empresaID = 0; // Por defecto asignar 0\n\n    if (selectedItemEmp != null) {\n        String selectedEmpId = (String) selectedItemEmp.getValue();\n        if (!selectedEmpId.equals(\"-\")) {\n            empresaID = Integer.parseInt(selectedEmpId); // Asignar el ID de la empresa seleccionada\n        }\n    }\n\t\n    \n    //CONVERTIR NIVELES A INT\n    int niveles = Integer.parseInt(comp_TXT_mdeNiveles.getValue().trim());\n    \n    \n    try {\n        \n        //MEDIOS DE ELEVACIÓN (POST)\n        java.util.List parametrosfnPostMedioDeElevacion = new java.util.ArrayList();\n        parametrosfnPostMedioDeElevacion.add(maquinaID); //maquinaID / int\n        parametrosfnPostMedioDeElevacion.add(comp_TXT_mdeUbicacion.getValue()); //ubicacion / String\n        parametrosfnPostMedioDeElevacion.add(comp_TXT_mdeTipo.getValue()); //tipo / String\n        parametrosfnPostMedioDeElevacion.add(niveles); //niveles / int\n        parametrosfnPostMedioDeElevacion.add(comp_CHK_mdePlanosAprob.isChecked()); //planosAprobados / Boolean\n        parametrosfnPostMedioDeElevacion.add(comp_TXT_mdeExptePlanos.getValue()); //expedientePlanos / String\n        parametrosfnPostMedioDeElevacion.add(empresaID); //empresaID / int\n        parametrosfnPostMedioDeElevacion.add(comp_CHK_mdeActivo.isChecked()); //activo / Boolean\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostMedioDeElevacion\",parametrosfnPostMedioDeElevacion);\n        \n    }catch (Exception e) {\n            Messagebox.show(\"El servicio de la API POST de MEDIOS DE ELEVACION NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    \n    //METODO PARA OBTENER EL ID DEL MEDIO DE ELEVACIÓN RECIEN CREADO\n    public String obtenerIDmde() {\n        try {\n            \n            //MEDIO DE ELEVACION (GET)\n            java.util.List parametrosfnGetMediosDeElevacion = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetMediosDeElevacion\",parametrosfnGetMediosDeElevacion);\n            Map return85map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return85map\");\n            \n            int size = return85map.get(\"mediosDeElevacion\").size();\n            String id = return85map.get(\"mediosDeElevacion\").get(size - 1).get(\"mde_id\").toString();\n            \n            return id;\n        }catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de MEDIOS DE ELEVACION NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }\n    }\n    \n    \n    //CONVERTIR ID INMUEBLES A INT\n    int inm_ID = Integer.parseInt(comp_TXT_mde_IDinmueble.getValue().trim());\n    \n    //CONVERTIR ID MDE\n    int mdeID = Integer.parseInt(obtenerIDmde().trim());\n    \n    \n    try {\n        \n        //MEDIOS DE ELEVACIÓN INMUEBLE (POST)\n        java.util.List parametrosfnPostInmuebleMedioDeElevacion = new java.util.ArrayList();\n        parametrosfnPostInmuebleMedioDeElevacion.add(inm_ID); //inmuebleID / int\n        parametrosfnPostInmuebleMedioDeElevacion.add(mdeID); //mdeID / int\n\t\tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostInmuebleMedioDeElevacion\",parametrosfnPostInmuebleMedioDeElevacion);\n        \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de MEDIOS DE ELEVACIÓN INMUEBLE NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    \n    \n    try {\n        \n        //PRIMER MEDIO DE ELEVACIÓN INMUEBLE (POST)\n        java.util.List parametrosfnGetPrimerMedioDeElevacionInmueble = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPrimerMedioDeElevacionInmueble\",parametrosfnGetPrimerMedioDeElevacionInmueble);\n        Map return86map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return86map\");\n\n        //OBTENER EL ULTIMO ID CREADO\n        /*int size = return86map.get(\"medioElevacionesInmueble\").size();\n        String id = return86map.get(\"medioElevacionesInmueble\").get(size - 1).get(\"mde_id\").toString();\n        \n         String idInmuebleMDE = return86map.get(\"medioElevacionesInmueble\").get(\"dst_detalle\").toString();*/\n        \n        if (return86map.containsKey(\"medioElevacionesInmueble\")) {\n            \n            List inmuebleMDE = (List) return86map.get(\"medioElevacionesInmueble\");\n        \tint size = inmuebleMDE.size();\n            \n            if (size > 0) {\n                \n                // Obtener el último elemento de la lista\n                Map ultimoItem = (Map) inmuebleMDE.get(size - 1);\n                \n\n                String idEInmuebleMDE = \"-\";\n                String idMDE = \"-\";\n                \n                if (ultimoItem.containsKey(\"ime_id\")) {\n                    idEInmuebleMDE = ultimoItem.get(\"ime_id\").toString();\n                    idMDE = ultimoItem.get(\"mde_id\").toString();\n                }\n                \n      \n                String idInmId = \"-\";\n                String disNombre = \"-\";\n                Object inmueblesObj = ultimoItem.get(\"inmueble\");\n                if (inmueblesObj != null && inmueblesObj instanceof Map) {\n                    Map inmueblesMap = (Map) inmueblesObj;\n                    Object inmIdObj = inmueblesMap.get(\"inm_id\");\n                    if (inmIdObj != null) {\n                        idInmId = inmIdObj.toString();\n                    }\n\n                    // Obtener el nombre del distrito\n                    Object distritoObj = inmueblesMap.get(\"distrito\");\n                    if (distritoObj != null && distritoObj instanceof Map) {\n                        Map distritoMap = (Map) distritoObj;\n                        Object disNombreObj = distritoMap.get(\"dis_nombre\");\n                        if (disNombreObj != null) {\n                            disNombre = disNombreObj.toString();\n                        }\n                    }\n                }\n                \n                Listitem item = new Listitem();\n        \n                item.appendChild(new Listcell(idEInmuebleMDE));\n                item.appendChild(new Listcell(idMDE));\n                item.appendChild(new Listcell(comp_CMB_mdeMaquina.getValue()));\n                item.appendChild(new Listcell(comp_TXT_mdePadron.getValue()));\n                item.appendChild(new Listcell(idInmId));\n                item.appendChild(new Listcell(disNombre)); // Añadir el nombre del distrito\n                item.appendChild(new Listcell(comp_TXT_mdeUbicacion.getValue()));\n                item.appendChild(new Listcell(comp_TXT_mdeTipo.getValue()));\n                item.appendChild(new Listcell(comp_TXT_mdeNiveles.getValue()));\n                item.appendChild(new Listcell(comp_CHK_mdePlanosAprob.isChecked() ? \"SI\" : \"NO\")); //Planos Aprobados ?\n                item.appendChild(new Listcell(comp_TXT_mdeExptePlanos.getValue())); \n                item.appendChild(new Listcell(comp_CMB_mdeEmpMant.getValue()));\n                item.appendChild(new Listcell(comp_CHK_mdeActivo.isChecked() ? \"SI\" : \"NO\")); //Activo ?\n\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n\n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                        int ind = i.getIndex();\n                        comp_GRID_medioselevacion.removeItemAt(ind);\n\n                        comp_TXT_mde_IDinmueble.setValue(\"-\");\n                        comp_TXT_mde_IDinmueble.setStyle(comp_TXT_mde_IDinmueble.getStyle() + \"; border-color: #606060\");\n                        comp_CMB_mdeMaquina.setValue(\"-\");\n                        comp_TXT_mdePadron.setValue(\"-\");\n                        comp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_mdeUbicacion.setValue(\"-\");\n                        comp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_mdeTipo.setValue(\"-\");\n                        comp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: #606060\");\n                        comp_TXT_mdeNiveles.setValue(\"-\");\n                        comp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: #606060\");\n                        comp_CMB_mdeEmpMant.setValue(\"-\");\n                        comp_CHK_mdePlanosAprob.setChecked(false);\n                        comp_TXT_mdeExptePlanos.setValue(\"-\");\n                        comp_TXT_mdeExptePlanos.setStyle(comp_TXT_mdeExptePlanos.getStyle() + \"; border-color: #606060\");\n                        comp_CHK_mdeActivo.setChecked(true);\n\n                        comp_BTN_mdeEditar.setLabel(\"Editar\");\n                        comp_BTN_mdeEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n\n                    }\n                });\n\n                comp_GRID_medioselevacion.appendChild(item); \n\n                comp_CMB_mdeMaquina.setValue(\"-\");\n                comp_TXT_mde_IDinmueble.setValue(\"-\");\n                comp_TXT_mdePadron.setValue(\"-\");\n                comp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: #606060\");\n                comp_TXT_mdeUbicacion.setValue(\"-\");\n                comp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: #606060\");\n                comp_TXT_mdeTipo.setValue(\"-\");\n                comp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: #606060\");\n                comp_TXT_mdeNiveles.setValue(\"-\");\n                comp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: #606060\");\n                comp_CMB_mdeEmpMant.setValue(\"-\");\n                comp_CHK_mdePlanosAprob.setChecked(false);\n                comp_TXT_mdeExptePlanos.setValue(\"-\");\n                comp_TXT_mdeExptePlanos.setStyle(comp_TXT_mdeExptePlanos.getStyle() + \"; border-color: #606060\");\n                comp_CHK_mdeActivo.setChecked(true);\n\n                comp_BTN_mdeEditar.setDisabled(false);\n                comp_BTN_mdeCancelar.setDisabled(false);\n            }\n        }\n\n        \n        \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de PRIMER MEDIO DE ELEVACIÓN INMUEBLE NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mdeEditar','Editar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_medioselevacion=(Listbox) sup.getInstanciaComponente(\"comp_GRID_medioselevacion\");\n\n//CMB\nCombobox comp_CMB_mdeMaquina=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaquina\");\nCombobox comp_CMB_mdeEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMant\");\n\n//TXT\nTextbox comp_TXT_mde_IDinmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mde_IDinmueble\");\nTextbox comp_TXT_mdePadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadron\");\nTextbox comp_TXT_mdeUbicacion=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeUbicacion\");\nTextbox comp_TXT_mdeTipo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeTipo\");\nTextbox comp_TXT_mdeNiveles=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeNiveles\");\nTextbox comp_TXT_mdeExptePlanos=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeExptePlanos\");\nTextbox comp_TXT_mde_Distrito_Oculto=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mde_Distrito_Oculto\");\n\n\n//CHEK\nCheckbox comp_CHK_mdePlanosAprob=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdePlanosAprob\");\nCheckbox comp_CHK_mdeActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdeActivo\");\n\n//BTN\nButton comp_BTN_mdeAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeAgregar\");\nButton comp_BTN_mdeEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeEditar\");\nButton comp_BTN_mdeCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeCancelar\");\n\n\n\n/****************************LÓGICA****************************/\nint indice= comp_GRID_medioselevacion.getSelectedIndex();\n\nif (indice == -1) {\n    \n    //Clients.showNotification(\"Por favor, seleccione el registro que desea Editar.\",true); \n    Messagebox.show(\"Por favor, seleccione el registro que desea Editar.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else {\n    \n    org.zkoss.zul.Listitem item = (org.zkoss.zul.Listitem) comp_GRID_medioselevacion.getItemAtIndex(indice);\n    Listcell cel0 = (Listcell) item.getChildren().get(0);\n    Listcell cel1 = (Listcell) item.getChildren().get(1);\n    Listcell cel2 = (Listcell) item.getChildren().get(2);\n    Listcell cel3 = (Listcell) item.getChildren().get(3);\n    Listcell cel4 = (Listcell) item.getChildren().get(4);\n    Listcell cel5 = (Listcell) item.getChildren().get(5); //Distrito\n    Listcell cel6 = (Listcell) item.getChildren().get(6);\n    Listcell cel7 = (Listcell) item.getChildren().get(7);\n    Listcell cel8 = (Listcell) item.getChildren().get(8);\n    Listcell cel9 = (Listcell) item.getChildren().get(9);\n    Listcell cel10 = (Listcell) item.getChildren().get(10);\n    Listcell cel11 = (Listcell) item.getChildren().get(11);\n    Listcell cel12 = (Listcell) item.getChildren().get(12);\n        \n    \n    if (comp_BTN_mdeEditar.getLabel().equals(\"Editar\")){\n        \n        \n        String idInmuebleMDE = item.getChildren().get(0).getLabel().trim();\n        String idMDE = item.getChildren().get(1).getLabel().trim();\n        String maquina = item.getChildren().get(2).getLabel().trim();\n\t\tString padron = item.getChildren().get(3).getLabel().trim();\n        String idPadron = item.getChildren().get(4).getLabel().trim();\n        String distrito = item.getChildren().get(5).getLabel().trim();\n\t\tString ubicacion = item.getChildren().get(6).getLabel().trim();\n        String tipo = item.getChildren().get(7).getLabel().trim();\n\t\tString niveles = item.getChildren().get(8).getLabel().trim();\n        String planosAprobados = item.getChildren().get(9).getLabel().trim();\n        String expedienteP = item.getChildren().get(10).getLabel().trim();\n\t\tString empresaM = item.getChildren().get(11).getLabel().trim();\n        String activo = item.getChildren().get(12).getLabel().trim();\n        \n        comp_CMB_mdeMaquina.setValue(maquina);\n        comp_TXT_mdePadron.setValue(padron);\n        comp_TXT_mde_IDinmueble.setValue(idPadron);\n        comp_TXT_mde_Distrito_Oculto.setValue(distrito);\n        comp_TXT_mdeUbicacion.setValue(ubicacion);\n        comp_TXT_mdeTipo.setValue(tipo);\n        comp_TXT_mdeNiveles.setValue(niveles);\n        \n        if (planosAprobados.equals(\"SI\")){\n        \tcomp_CHK_mdePlanosAprob.setChecked(true);\n        } else{\n            comp_CHK_mdePlanosAprob.setChecked(false);\n        }\n        \n        comp_TXT_mdeExptePlanos.setValue(expedienteP);\n        comp_CMB_mdeEmpMant.setValue(empresaM);\n        \n        if (activo.equals(\"SI\")){\n        \tcomp_CHK_mdeActivo.setChecked(true);\n        } else{\n            comp_CHK_mdeActivo.setChecked(false);\n        }\n        \n        comp_BTN_mdeEditar.setLabel(\"Guardar Cambios\");\n        comp_BTN_mdeEditar.setStyle(\"margin-left:25px; background:#008000; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        comp_BTN_mdeAgregar.setDisabled(true);\n    \n    }else if (comp_BTN_mdeEditar.getLabel().equals(\"Guardar Cambios\")){\n        \n        \n        //VALIDAR QUE NINGUN DATOS ESTE CON \"-\"\n        if(comp_TXT_mdePadron.getValue().equals(\"-\")){\n    \n            Clients.showNotification(\"Debe ingresar un Padrón Municipal.\", \"error\", comp_TXT_mdePadron, \"\",3100);\n            comp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_mdeUbicacion.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar una Ubicación.\", \"error\", comp_TXT_mdeUbicacion, \"\",3100);\n            comp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_mdeTipo.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Tipo.\", \"error\", comp_TXT_mdeTipo, \"\",3100);\n            comp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_mdeNiveles.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar niveles.\", \"error\", comp_TXT_mdeNiveles, \"\",3100);\n            comp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: red\"); \n\n        }else if(comp_CMB_mdeEmpMant.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else{\n            \n            cel2.setLabel(comp_CMB_mdeMaquina.getValue());\n            cel2.setParent(item);\n            \n            cel3.setLabel(comp_TXT_mdePadron.getValue());\n            cel3.setParent(item);\n            \n            cel4.setLabel(comp_TXT_mde_IDinmueble.getValue());\n            cel4.setParent(item);\n            \n            cel5.setLabel(comp_TXT_mde_Distrito_Oculto.getValue());\n            cel5.setParent(item);\n\n            cel6.setLabel(comp_TXT_mdeUbicacion.getValue());\n            cel6.setParent(item);\n            \n            cel7.setLabel(comp_TXT_mdeTipo.getValue());\n            cel7.setParent(item);\n\n            cel8.setLabel(comp_TXT_mdeNiveles.getValue());\n            cel8.setParent(item);\n            \n            if (comp_CHK_mdePlanosAprob.isChecked()) {\n                cel9.setLabel(\"SI\");\n                cel9.setParent(item);\n            } else {\n                cel9.setLabel(\"NO\");\n                cel9.setParent(item);\n            }\n            \n            cel10.setLabel(comp_TXT_mdeExptePlanos.getValue());\n            cel10.setParent(item);\n            \n            cel11.setLabel(comp_CMB_mdeEmpMant.getValue());\n            cel11.setParent(item);\n            \n            if (comp_CHK_mdeActivo.isChecked()) {\n                cel12.setLabel(\"SI\");\n                cel12.setParent(item);\n            } else {\n                cel12.setLabel(\"NO\");\n                cel12.setParent(item);\n            }\n            \n            \n            //ACTUALIZAR ID PADRON (INMUEBLE)\n            \n            String idInmueblePersona = ((org.zkoss.zul.Listcell) item.getChildren().get(0)).getLabel().trim();\n            int idIMDE = Integer.parseInt(idInmueblePersona);\n\n            //CONVERTIR STRING ID PADRON A INT\n            int idPadronInt = Integer.parseInt(comp_TXT_mde_IDinmueble.getValue());\n            \n            try {\n                \n                java.util.List parametrosfnPutInmuebleDeMedioElevacion = new java.util.ArrayList();\n                parametrosfnPutInmuebleDeMedioElevacion.add(idIMDE); //idInmuebleMDE / int\n                parametrosfnPutInmuebleDeMedioElevacion.add(idPadronInt); //idInmueble / int\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutInmuebleDeMedioElevacion\",parametrosfnPutInmuebleDeMedioElevacion);\n                \n\t\t\t} catch (Exception e) {\n                Messagebox.show(\"El servicio de la API PUT de INMUEBLE MEDIO DE ELEVACION NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n            }\n            \n            \n            //ACTUALIZAR TIPO MAQUINA Y EMPRESA DE MANTENIMIENTO\n            //ACTUALIZAR ID TIPO MAQUINA\n            Comboitem selectedItem = comp_CMB_mdeMaquina.getSelectedItem();\n            String selectedMaqId = (String) selectedItem.getValue(); \n            int maquinaID = Integer.parseInt(selectedMaqId);\n            \n            //ACTUALIZAR ID TIPO MAQUINA\n            Comboitem selectedItemE = comp_CMB_mdeEmpMant.getSelectedItem();\n            String selectedEmpId = (String) selectedItemE.getValue(); \n            int empresaID = Integer.parseInt(selectedEmpId);\n            \n            //ID de MEDIO DE ELEVACION\n            String idMedioDE = ((org.zkoss.zul.Listcell) item.getChildren().get(1)).getLabel().trim();\n            int idMDE = Integer.parseInt(idMedioDE);\n            \n            int niveles = Integer.parseInt(comp_TXT_mdeNiveles.getValue());\n            \n            \n            //ACTUALIZAR MEDIO DE ELEVACIÓN\n            try {\n                \n                java.util.List parametrosfnPutMedioDeElevacion = new java.util.ArrayList();\n                parametrosfnPutMedioDeElevacion.add(idMDE); //idMDE / int\n                parametrosfnPutMedioDeElevacion.add(maquinaID); //idMaquinaNueva / int\n                parametrosfnPutMedioDeElevacion.add(comp_TXT_mdeUbicacion.getValue()); //ubicacion / String\n                parametrosfnPutMedioDeElevacion.add(comp_TXT_mdeTipo.getValue()); //tipo / String\n                parametrosfnPutMedioDeElevacion.add(niveles); //niveles / int\n                parametrosfnPutMedioDeElevacion.add(comp_CHK_mdePlanosAprob.isChecked()); //planosAprobados / Boolean\n                parametrosfnPutMedioDeElevacion.add(comp_TXT_mdeExptePlanos.getValue()); //expedientePlanos / String\n                parametrosfnPutMedioDeElevacion.add(empresaID); //idEmpresaNueva / int\n                parametrosfnPutMedioDeElevacion.add(comp_CHK_mdeActivo.isChecked()); //activo / Boolean\n            \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutMedioDeElevacion\",parametrosfnPutMedioDeElevacion);\n                \n            } catch (Exception e) {\n                \n                Messagebox.show(\"El servicio de la API PUT de MEDIO DE ELEVACIÓN NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n            }\n            \n            \n            \n            \n            comp_TXT_mde_IDinmueble.setValue(\"-\");\n            comp_TXT_mde_IDinmueble.setStyle(comp_TXT_mde_IDinmueble.getStyle() + \"; border-color: #606060\");\n            comp_TXT_mdePadron.setValue(\"-\");\n            comp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: #606060\");\n            comp_CMB_mdeMaquina.setValue(\"-\");\n            comp_TXT_mdeUbicacion.setValue(\"-\");\n            comp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: #606060\");\n            comp_TXT_mde_Distrito_Oculto.setValue(\"-\");\n            comp_TXT_mdeTipo.setValue(\"-\");\n            comp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: #606060\");\n            comp_TXT_mdeNiveles.setValue(\"-\");\n            comp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: #606060\");\n            comp_CHK_mdePlanosAprob.setChecked(false);\n            comp_TXT_mdeExptePlanos.setValue(\"-\");\n            comp_TXT_mdeExptePlanos.setStyle(comp_TXT_mdeExptePlanos.getStyle() + \"; border-color: #606060\");\n            comp_CMB_mdeEmpMant.setValue(\"-\");\n            comp_CHK_mdeActivo.setChecked(true);\t\n            \n            comp_BTN_mdeEditar.setLabel(\"Editar\");\n            comp_BTN_mdeEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n            comp_BTN_mdeAgregar.setDisabled(false);\n            \n        }\n    }   \n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mdeCancelar','Cancelar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',3,'-','-','margin-left:25px;  background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_medioselevacion=(Listbox) sup.getInstanciaComponente(\"comp_GRID_medioselevacion\");\n\n//CMB\nCombobox comp_CMB_mdeMaquina=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaquina\");\nCombobox comp_CMB_mdeEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMant\");\n\n//TXT\nTextbox comp_TXT_mde_IDinmueble=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mde_IDinmueble\");\nTextbox comp_TXT_mdePadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadron\");\nTextbox comp_TXT_mdeUbicacion=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeUbicacion\");\nTextbox comp_TXT_mdeTipo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeTipo\");\nTextbox comp_TXT_mdeNiveles=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeNiveles\");\nTextbox comp_TXT_mdeExptePlanos=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdeExptePlanos\");\n\n\n//CHEK\nCheckbox comp_CHK_mdePlanosAprob=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdePlanosAprob\");\nCheckbox comp_CHK_mdeActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mdeActivo\");\n\n//BTN\nButton comp_BTN_mdeAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeAgregar\");\nButton comp_BTN_mdeEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeEditar\");\nButton comp_BTN_mdeCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeCancelar\");\n\n\n\n/****************************LÓGICA****************************/      \ncomp_TXT_mde_IDinmueble.setValue(\"-\");\ncomp_TXT_mde_IDinmueble.setStyle(comp_TXT_mde_IDinmueble.getStyle() + \"; border-color: #606060\");\ncomp_TXT_mdePadron.setValue(\"-\");\ncomp_TXT_mdePadron.setStyle(comp_TXT_mdePadron.getStyle() + \"; border-color: #606060\");\ncomp_CMB_mdeMaquina.setValue(\"-\");\ncomp_TXT_mdeUbicacion.setValue(\"-\");\ncomp_TXT_mdeUbicacion.setStyle(comp_TXT_mdeUbicacion.getStyle() + \"; border-color: #606060\");\ncomp_TXT_mdeTipo.setValue(\"-\");\ncomp_TXT_mdeTipo.setStyle(comp_TXT_mdeTipo.getStyle() + \"; border-color: #606060\");\ncomp_TXT_mdeNiveles.setValue(\"-\");\ncomp_TXT_mdeNiveles.setStyle(comp_TXT_mdeNiveles.getStyle() + \"; border-color: #606060\");\ncomp_CHK_mdePlanosAprob.setChecked(false);\ncomp_TXT_mdeExptePlanos.setValue(\"-\");\ncomp_TXT_mdeExptePlanos.setStyle(comp_TXT_mdeExptePlanos.getStyle() + \"; border-color: #606060\");\ncomp_CMB_mdeEmpMant.setValue(\"-\");\ncomp_CHK_mdeActivo.setChecked(true);\n\ncomp_BTN_mdeEditar.setLabel(\"Editar\");\ncomp_BTN_mdeEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\ncomp_BTN_mdeAgregar.setDisabled(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Grilla_MDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_GRID_medioselevacion','',@vIdDistribucionCells,'Listbox','100','%','130','px','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','height: auto !important;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,6,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,13,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,22,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,70,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,71,'true','null','1.0') ;
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID MDE',0,0,'-1','-',2,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Máquina',0,0,'-1','-',3,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Ubicación',0,0,'-1','-',7,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Niveles',0,0,'-1','-',9,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Empresa Mantenimiento',0,0,'-1','-',12,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Activo',0,0,'-1','-',13,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Padrón',0,0,'-1','-',4,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Tipo',0,0,'-1','-',8,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Planos A',0,0,'-1','-',10,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Expediente P',0,0,'-1','-',11,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID Inmuble-MDE',0,0,'-1','-',1,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID Padrón',0,0,'-1','-',5,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Distrito',0,0,'-1','-',6,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_CL_MDE','Consulta y Listado de Medios de Elevación',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',10,'',8365,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8365,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_ReporteMDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_ReporteMDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeOpcReporte','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mdeOpcReporte','',@vIdDistribucionCells,'Combobox','420','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.Component;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport org.zkoss.zul.Paging;\n\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mdeOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeOpcReporte\");\nTextbox comp_TXT_mdePadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadronRep\");\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\nButton comp_BTN_mdeGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mdeGenRep\");\n\n\n\n//APIS\n//MAQUINAS\ntry {\n    \n    comp_CMB_mdeMaqRep.getItems().clear();\n    java.util.List parametrosfnGetTipoMaquina = new java.util.ArrayList();\n\tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetTipoMaquina\",parametrosfnGetTipoMaquina);\n\tMap return84map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return84map\");\n    \n    Comboitem item = new Comboitem();                \n    item.setLabel(\"-\");\n    item.setValue(\"-\");\n    item.setParent(comp_CMB_mdeMaqRep);\n    \n    for (int i = 0; i < return84map.get(\"tipoMaquinas\").size(); i++){\n        \n        String id_dis = return84map.get(\"tipoMaquinas\").get(i).get(\"tma_cod\").toString(); \n        String name_dis =  return84map.get(\"tipoMaquinas\").get(i).get(\"tma_detalle\").toString();\n        \n        Comboitem item = new Comboitem();                \n        item.setLabel(name_dis);\n        item.setValue(id_dis);\n        item.setParent(comp_CMB_mdeMaqRep);\n        }\n} \ncatch (Exception e) \n{\n    Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n}\n\n//EMPRESAS MANTENIMIENTO\ntry {\n    \n    comp_CMB_mdeEmpMantRep.getItems().clear();\n    //EMPRESA DE MANTENIMIENTO (GET)\n    java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n    new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n    Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n    \n    Comboitem item = new Comboitem();                \n    item.setLabel(\"-\");\n    item.setValue(\"-\");\n    item.setParent(comp_CMB_mdeEmpMantRep);\n    \n    for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n        \n        String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n        String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n        Comboitem item = new Comboitem();                \n        item.setLabel(razonS);\n        item.setValue(id);\n        item.setParent(comp_CMB_mdeEmpMantRep);\n    }\n\n} catch (Exception e) {\n    \n    Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n}\n\n\n//DISTRITOS\ntry {\n    \n    comp_CMB_mdeDistritoRepME.getItems().clear();\n\n    java.util.List parametrosfnGetDistrito = new java.util.ArrayList();\n    new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetDistrito\",parametrosfnGetDistrito);\n    Map return89map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return89map\");\n\n    Comboitem item = new Comboitem();                \n    item.setLabel(\"-\");\n    item.setValue(\"-\");\n    item.setParent(comp_CMB_mdeDistritoRepME);\n    \n    for (int i = 0; i < return89map.get(\"distritos\").size(); i++){\n        \n        String id_dis = return89map.get(\"distritos\").get(i).get(\"dis_id\").toString(); \n        String name_dis =  return89map.get(\"distritos\").get(i).get(\"dis_nombre\").toString();\n        \n        Comboitem item = new Comboitem();                \n        item.setLabel(name_dis);\n        item.setValue(id_dis);\n        item.setParent(comp_CMB_mdeDistritoRepME);\n    }\n} \ncatch (Exception e) \n{\n    Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n}\n\n\n\nString opciones = comp_CMB_mdeOpcReporte.getValue().toString();\n\nif(opciones.equals(\"-\")){\n    \n    comp_TXT_mdePadronRep.setDisabled(true);\n    comp_CMB_mdeMaqRep.setDisabled(true);\n    comp_CMB_mdeEmpMantRep.setDisabled(true);\n    comp_CMB_mdeDistritoRepME.setDisabled(true);\n    \n    comp_TXT_mdePadronRep.setValue(\"-\");\n    comp_CMB_mdeMaqRep.setValue(\"-\");\n    comp_CMB_mdeEmpMantRep.setValue(\"-\");\n    comp_CMB_mdeDistritoRepME.setValue(\"-\");\n    \n    comp_BTN_mdeGenRep.setDisabled(true);\n    \n}\n\nif(opciones.equals(\"Todos los Medios de Elevación\")){\n    \n    comp_TXT_mdePadronRep.setDisabled(true);\n    comp_CMB_mdeMaqRep.setDisabled(true);\n    comp_CMB_mdeEmpMantRep.setDisabled(true);\n    comp_CMB_mdeDistritoRepME.setDisabled(true);\n    \n    \n    comp_TXT_mdePadronRep.setValue(\"-\");\n    comp_CMB_mdeMaqRep.setValue(\"-\");\n    comp_CMB_mdeEmpMantRep.setValue(\"-\");\n    comp_CMB_mdeDistritoRepME.setValue(\"-\");\n    \n    comp_BTN_mdeGenRep.setDisabled(false);\n    \n}else if(opciones.equals(\"Medios de Elevación por Padrón\")){\n    \n    \n    comp_TXT_mdePadronRep.setDisabled(false);\n    comp_CMB_mdeMaqRep.setDisabled(true);\n    comp_CMB_mdeEmpMantRep.setDisabled(true);\n    comp_CMB_mdeDistritoRepME.setDisabled(true);\n    \n    comp_CMB_mdeMaqRep.setValue(\"-\");\n    comp_CMB_mdeEmpMantRep.setValue(\"-\");\n    comp_CMB_mdeDistritoRepME.setValue(\"-\");\n    \n    comp_BTN_mdeGenRep.setDisabled(false);\n\n}else if(opciones.equals(\"Medios de Elevación por Empresa de Mantenimiento, Máquina y Distrito\")){\n    \n    comp_TXT_mdePadronRep.setDisabled(true);\n    comp_CMB_mdeMaqRep.setDisabled(false);\n    comp_CMB_mdeEmpMantRep.setDisabled(false);\n    comp_CMB_mdeDistritoRepME.setDisabled(false);\n    \n    comp_TXT_mdePadronRep.setValue(\"-\");\n    \n    comp_BTN_mdeGenRep.setDisabled(false);\n    \n}\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Todos los Medios de Elevación','Todos los Medios de Elevación',1,1,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Medios de Elevación por Padrón','Medios de Elevación por Padrón',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Medios de Elevación por Empresa de Mantenimiento, Máquina y Distrito','Medios de Elevación por Empresa de Mantenimiento, Máquina y Distrito',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaMDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Padron_MunicipalMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdePadronRep','Padrón Municipal:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mdePadronRep','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Maquina',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeMaqRep','Máquina:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mdeMaqRep','',@vIdDistribucionCells,'Combobox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'/*import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\n\n\ntry {\n        comp_CMB_mdeMaqRep.getItems().clear();\n\n      \tjava.util.List parametrosfnGetTipoMaquina = new java.util.ArrayList();\n\t\tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetTipoMaquina\",parametrosfnGetTipoMaquina);\n\t\tMap return84map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return84map\");\n\n        Comboitem item = new Comboitem();                \n        item.setLabel(\"-\");\n        item.setValue(\"-\");\n        item.setParent(comp_CMB_mdeMaqRep);\n\t\t\n        for (int i = 0; i < return84map.get(\"tipoMaquinas\").size(); i++){\n            \n            String id_dis = return84map.get(\"tipoMaquinas\").get(i).get(\"tma_cod\").toString(); \n            String name_dis =  return84map.get(\"tipoMaquinas\").get(i).get(\"tma_detalle\").toString();\n\n        \n            Comboitem item = new Comboitem();                \n            item.setLabel(name_dis);\n            item.setValue(id_dis);\n            item.setParent(comp_CMB_mdeMaqRep);\n        }\n\n    } \n    catch (Exception e) \n    {\n        Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n*/\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\n\ncomp_CMB_mdeEmpMantRep.setSelectedIndex(0);\ncomp_CMB_mdeDistritoRepME.setSelectedIndex(0);\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Empresa_MantenimientoMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',4,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeEmpMantRep','Empresa Mantenimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mdeEmpMantRep','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'/*import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\norg.zkoss.zul.Combobox comp_CMB_mdeEmpMantRep=(org.zkoss.zul.Combobox) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\n        //CARGAR EMPRESAS Y REVISORES EN CMB\n\n        try {\n\n            comp_CMB_mdeEmpMantRep.getItems().clear();\n            //EMPRESA DE MANTENIMIENTO (GET)\n            java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n            Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\t\t\t\n            Comboitem item = new Comboitem();                \n                item.setLabel(\"-\");\n                item.setValue(\"-\");\n                item.setParent(comp_CMB_mdeEmpMantRep);\n            \n            for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n\n                String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n                String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n                \n                Comboitem item = new Comboitem();                \n                item.setLabel(razonS);\n                item.setValue(id);\n                item.setParent(comp_CMB_mdeEmpMantRep);\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }*/','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\n\ncomp_CMB_mdeMaqRep.setSelectedIndex(0);\ncomp_CMB_mdeDistritoRepME.setSelectedIndex(0);\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_DistritoMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',5,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeDistritoRep','Distrito:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mdeDistritoRepME','',@vIdDistribucionCells,'Combobox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'/*import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mdeDistritoRepME =(Textbox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\n\ntry {\n        comp_CMB_mdeDistritoRepME.getItems().clear();\n\n        java.util.List parametrosfnGetDistrito = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetDistrito\",parametrosfnGetDistrito);\n        Map return89map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return89map\");\n\n        Comboitem item = new Comboitem();                \n        item.setLabel(\"-\");\n        item.setValue(\"-\");\n        item.setParent(comp_CMB_mdeDistritoRepME);\n\n        for (int i = 0; i < return89map.get(\"distritos\").size(); i++){\n            \n            String id_dis = return89map.get(\"distritos\").get(i).get(\"dis_id\").toString(); \n            String name_dis =  return89map.get(\"distritos\").get(i).get(\"dis_nombre\").toString();\n\n        \n            Comboitem item = new Comboitem();                \n            item.setLabel(name_dis);\n            item.setValue(id_dis);\n            item.setParent(comp_CMB_mdeDistritoRepME);\n        }\n\n    } \n    catch (Exception e) \n    {\n        Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }*/','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\n\ncomp_CMB_mdeMaqRep.setSelectedIndex(0);\ncomp_CMB_mdeEmpMantRep.setSelectedIndex(0);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteMDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteMDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mdeGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\n\nCombobox comp_CMB_mdeMaqRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeMaqRep\");\nCombobox comp_CMB_mdeDistritoRepME=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeDistritoRepME\");\nCombobox comp_CMB_mdeEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mdeEmpMantRep\");\nTextbox comp_TXT_mdePadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mdePadronRep\");\nListbox comp_GRID_medioselevacion=(Listbox) sup.getInstanciaComponente(\"comp_GRID_medioselevacion\");\n\nMap valorVariablesReportes = new java.util.HashMap();\n\nvalorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\nvalorVariablesReportes.put(\"p_tipoMaquina\", comp_CMB_mdeMaqRep.getSelectedItem().getValue().toString());\nvalorVariablesReportes.put(\"p_maquinaName\", comp_CMB_mdeMaqRep.getSelectedItem().getLabel());\nvalorVariablesReportes.put(\"p_padronNum\", comp_TXT_mdePadronRep.getValue());\nvalorVariablesReportes.put(\"p_empresa\", comp_CMB_mdeEmpMantRep.getSelectedItem().getValue().toString()); \nvalorVariablesReportes.put(\"p_empresaName\", comp_CMB_mdeEmpMantRep.getSelectedItem().getLabel());\nvalorVariablesReportes.put(\"p_distrito\", comp_CMB_mdeDistritoRepME.getSelectedItem().getValue().toString());  \nvalorVariablesReportes.put(\"p_distritoName\", comp_CMB_mdeDistritoRepME.getSelectedItem().getLabel());\n\n//Función reporte\n/*List parametrosfnImprimirSelReporte = new java.util.ArrayList();\nparametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\nparametrosfnImprimirSelReporte.add(\"NoHMedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\norg.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n*/\n\nboolean padron_Activo = !comp_TXT_mdePadronRep.isDisabled();\nboolean padron_SinDato = comp_TXT_mdePadronRep.getValue().equals(\"-\");\nboolean maquinaEmpresaDistrito_Inactivos = comp_CMB_mdeMaqRep.isDisabled() && comp_CMB_mdeEmpMantRep.isDisabled() && comp_CMB_mdeDistritoRepME.isDisabled();\nboolean maquina_SinDato = comp_CMB_mdeMaqRep.getValue().equals(\"-\");\nboolean empresa_SinDato = comp_CMB_mdeEmpMantRep.getValue().equals(\"-\");\nboolean distrito_SinDato = comp_CMB_mdeDistritoRepME.getValue().equals(\"-\");\n\n\nif (padron_Activo && padron_SinDato && maquinaEmpresaDistrito_Inactivos) {\n    \n    Messagebox.show(\"Debe ingresar un Padrón Municipal.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(!padron_Activo && (!maquinaEmpresaDistrito_Inactivos && maquina_SinDato && empresa_SinDato && distrito_SinDato)) {\n    \n    Messagebox.show(\"Debe seleccionar al menos una Máquina/Empresa/Distrito\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else{\n    \n    if (!padron_SinDato && maquinaEmpresaDistrito_Inactivos) {\n        \n        //SE ENCONTRO PADRON ?\n        String padron_Ingresado = comp_TXT_mdePadronRep.getValue().trim();\n        boolean padron_Encontrado = false;\n\n        for (Listitem item : comp_GRID_medioselevacion.getItems()) {\n            \n            Listcell cell_Padron = (Listcell) item.getChildren().get(3);\n\n            String padron = cell_Padron.getLabel().trim();\n\n            if (padron.equals(padron_Ingresado)) {\n                padron_Encontrado = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"NoHMedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                break;\n            }\n        }\n        \n        if (!padron_Encontrado) {\n            Messagebox.show(\"No se encontro el Padrón N° \" + padron_Ingresado + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n    }else if (!maquina_SinDato && padron_SinDato && empresa_SinDato && distrito_SinDato) {\n        \n        //SE ENCONTRO MAQUINA ?\n        String maquina_Seleccionada = comp_CMB_mdeMaqRep.getValue().trim();\n        boolean maquina_Encontrada = false;\n\n        for (Listitem item : comp_GRID_medioselevacion.getItems()) {\n            \n            Listcell cell_Maquina = (Listcell) item.getChildren().get(2);\n\n            String maquina = cell_Maquina.getLabel().trim();\n\n            if (maquina.equals(maquina_Seleccionada)) {\n                maquina_Encontrada = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"NoHMedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                break;\n            }\n        }\n        \n        if (!maquina_Encontrada) {\n            Messagebox.show(\"No se encontro la Máquina \" + maquina_Seleccionada + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n        \n            \n    } else if (!empresa_SinDato && padron_SinDato && maquina_SinDato && distrito_SinDato) {\n        \n        //SE ENCONTRO EMPRESA ?\n        String empresa_Seleccionada = comp_CMB_mdeEmpMantRep.getValue().trim();\n        boolean empresa_Encontrada = false;\n\n        for (Listitem item : comp_GRID_medioselevacion.getItems()) {\n            \n            Listcell cell_Empresa = (Listcell) item.getChildren().get(11);\n\n            String empresa = cell_Empresa.getLabel().trim();\n\n            if (empresa.equals(empresa_Seleccionada)) {\n                empresa_Encontrada = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"NoHMedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                break;\n            }\n        }\n        \n        if (!empresa_Encontrada) {\n            Messagebox.show(\"No se encontro la Empresa \" + empresa_Seleccionada + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n        \n        \n    } else if (!distrito_SinDato && padron_SinDato && maquina_SinDato && empresa_SinDato) {\n        \n        //SE ENCONTRO DISTRITO ?\n        String distrito_Seleccionado = comp_CMB_mdeDistritoRepME.getValue().trim();\n        boolean distrito_Encontrado = false;\n\n        for (Listitem item : comp_GRID_medioselevacion.getItems()) {\n            \n            Listcell cell_Distrito = (Listcell) item.getChildren().get(5);\n\n            String distrito = cell_Distrito.getLabel().trim();\n\n            if (distrito.equals(distrito_Seleccionado)) {\n                distrito_Encontrado = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"NoHMedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                break;\n            }\n        }\n        \n        if (!distrito_Encontrado) {\n            Messagebox.show(\"No se encontro el Distrito \" + distrito_Seleccionado + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n        \n        \n        \n    } /*else if(!maquina_SinDato && !empresa_SinDato && !distrito_SinDato ){\n        \n        //SE ENCONTRO EMPRESA ?\n        String empresa_Seleccionada = comp_CMB_mdeEmpMantRep.getValue().trim();\n        boolean empresa_Encontrada = false;\n\n        for (Listitem item : comp_GRID_medioselevacion.getItems()) {\n            \n            Listcell cell_Empresa = (Listcell) item.getChildren().get(11);\n\n            String empresa = cell_Empresa.getLabel().trim();\n\n            if (empresa.equals(empresa_Seleccionada)) {\n                empresa_Encontrada = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"NoHMedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                break;\n            }\n        }\n        \n        if (!empresa_Encontrada) {\n            Messagebox.show(\"No se encontro la Empresa \" + empresa_Seleccionada + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n\n    */}else{\n        \n        //Función reporte\n        List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n        parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n        parametrosfnImprimirSelReporte.add(\"NoHMedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n        org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n    }\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_MDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_MDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mdeFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_ABM_RevisoresE','Altas, Bajas y Modificaciones de Revisores Electrotécnica',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',11,'',8366,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8366,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Apellido_Nombre_RE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Nombre_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revNombre','Nombre:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revNombre','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_revNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNombre\");\n\n//Letras\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$\";\nString texto = comp_TXT_revNombre.getValue();\n\n\nif (texto.length() <= 50 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un nombre válido.\", \"error\", comp_TXT_revNombre, \"\", 3100);\n    comp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: red\");\n    comp_TXT_revNombre.setValue(\"-\");\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Apellido_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revApellido','Apellido:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revApellido','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_revApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revApellido\");\n\n//Letras\nString regex = \"^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$\";\nString texto = comp_TXT_revApellido.getValue();\n\n\nif (texto.length() <= 50 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un apellido válido.\", \"error\", comp_TXT_revApellido, \"\", 3100);\n    comp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: red\");\n    comp_TXT_revApellido.setValue(\"-\");\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_CUIT_Documento_RE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_CUIT/CUIL_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revCUIL','CUIT/CUIL:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revCUIL','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Tipo_Documento_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revTipoDoc','Tipo Documento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revTipoDoc','',@vIdDistribucionCells,'Textbox','50','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_revTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTipoDoc\");\nTextbox comp_TXT_revNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDoc\");\n\n\nString regex = \"[1-2]\";\nString texto = comp_TXT_revTipoDoc.getValue();\n\ncomp_TXT_revNumDoc.setValue(\"-\");\n\nif (texto.matches(regex) && !texto.equals(\"-\")) {\n    \n    comp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un tipo de documento válido (1-DNI o 2-Pasaporte).\", \"error\", comp_TXT_revTipoDoc, \"\", 3100);\n    comp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: red\");\n    comp_TXT_revTipoDoc.setValue(\"-\");\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revNumDoc','Número de Documento',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:10px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revNumDoc','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_revTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTipoDoc\");\nTextbox comp_TXT_revNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDoc\");\n\n\nString regex = \"\\\\d{8}\";\nString regex2 = \"^\\\\d{0,8}$\";\nString texto = comp_TXT_revNumDoc.getValue();\n\n\nif(comp_TXT_revTipoDoc.getValue().equals(\"1\")){\n    \n    if (texto.matches(regex) && !texto.equals(\"-\")) {\n        \n        comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: #606060\");\n    \n    } else {\n\n        Clients.showNotification(\"Ingrese un número de documento válido.\", \"error\", comp_TXT_revNumDoc, \"\", 3100);\n        comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: red\");\n        comp_TXT_revNumDoc.setValue(\"-\");\n    }\n\n}else {\n    \n    if (texto.matches(regex2) && !texto.equals(\"-\")) {\n        \n        comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: #606060\");\n    \n    } else {\n\n        Clients.showNotification(\"Ingrese un número de pasaporte válido.\", \"error\", comp_TXT_revNumDoc, \"\", 3100);\n        comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: red\");\n        comp_TXT_revNumDoc.setValue(\"-\");\n    }\n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Telefono_Correo_RE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Correo_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revCorreo','Correo Electrónico:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revCorreo','',@vIdDistribucionCells,'Textbox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_revCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCorreo\");\n\nString regex = \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\";\nString texto = comp_TXT_revCorreo.getValue();\n\n\nif (texto.length() <= 30 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un correo electrónico válido.\", \"error\", comp_TXT_revCorreo, \"\", 3100);\n    comp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: red\");\n    comp_TXT_revCorreo.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Telefono_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revTelefono','Teléfono:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revTelefono','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_revTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTelefono\");\n\n\nString regex = \"[0-9]{10,13}\";\nString texto = comp_TXT_revTelefono.getValue();\n\n\nif (texto.matches(regex) && !texto.equals(\"-\")) {\n    \n    comp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: #606060\");\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un número de teléfono válido.\", \"error\", comp_TXT_revTelefono, \"\", 3100);\n    comp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: red\");\n    comp_TXT_revTelefono.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Usuario_Sayges_RE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Usuario_Sayges',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revLoginSayges','Usuario Login Sayges:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revLoginSayges','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_revLoginSayges=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revLoginSayges\");\n\n\nString regex = \"^[a-z]+$\";\nString texto = comp_TXT_revLoginSayges.getValue();\n\n\nif (texto.length() <= 60 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un nombre de usuario válido.\", \"error\", comp_TXT_revLoginSayges, \"\", 3100);\n    comp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: red\");\n    comp_TXT_revLoginSayges.setValue(\"-\");\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Checks_Permisos_RE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',5,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Aprobar_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revPerAME','¿Tiene permiso para aprobar medios de elevación?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_revPerAME','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,5,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n//CHEK\nCheckbox comp_CHK_revPerAME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAME\");\nCheckbox comp_CHK_revPerRME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerRME\");\nCheckbox comp_CHK_revPerAEM=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAEM\");\n\ncomp_CHK_revPerRME.setChecked(false);\ncomp_CHK_revPerAEM.setChecked(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Aprobar_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revPerRME','¿Tiene permiso para aprobar renovaciones de habilitación de medios de elevación?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_revPerRME','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,5,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n//CHEK\nCheckbox comp_CHK_revPerAME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAME\");\nCheckbox comp_CHK_revPerRME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerRME\");\nCheckbox comp_CHK_revPerAEM=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAEM\");\n\ncomp_CHK_revPerAME.setChecked(false);\ncomp_CHK_revPerAEM.setChecked(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Aprobar_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revPerAEM','¿Tiene permiso para aprobar empresas de mantenimiento?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_revPerAEM','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,5,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n//CHEK\nCheckbox comp_CHK_revPerAME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAME\");\nCheckbox comp_CHK_revPerRME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerRME\");\nCheckbox comp_CHK_revPerAEM=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAEM\");\n\ncomp_CHK_revPerAME.setChecked(false);\ncomp_CHK_revPerRME.setChecked(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Grilla_Revisores_RE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',7,'padding-top:2px; margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones_Grilla_RE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_revAgregar','Agregar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_revisores=(Listbox) sup.getInstanciaComponente(\"comp_GRID_revisores\");\n\n//TXT\nTextbox comp_TXT_revApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revApellido\");\nTextbox comp_TXT_revNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNombre\");\nTextbox comp_TXT_revCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCUIL\");\nTextbox comp_TXT_revTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTipoDoc\");\nTextbox comp_TXT_revNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDoc\");\nTextbox comp_TXT_revTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTelefono\");\nTextbox comp_TXT_revCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCorreo\");\nTextbox comp_TXT_revLoginSayges=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revLoginSayges\");\n\n//CHEK\nCheckbox comp_CHK_revPerAME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAME\");\nCheckbox comp_CHK_revPerRME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerRME\");\nCheckbox comp_CHK_revPerAEM=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAEM\");\nCheckbox comp_CHK_revActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revActivo\");\n\n//BTN\nButton comp_BTN_revAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_revAgregar\");\nButton comp_BTN_revEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_revEditar\");\nButton comp_BTN_revCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_revCancelar\");\n\n\n\n/****************************LÓGICA****************************/\n\n//Variable para los 3 checks\nboolean alMenosUnoSeleccionado = comp_CHK_revPerAME.isChecked() || comp_CHK_revPerRME.isChecked() || comp_CHK_revPerAEM.isChecked();\n\nif(comp_TXT_revApellido.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Apellido.\", \"error\", comp_TXT_revApellido, \"\",3100);\n    comp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_revNombre.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Nombre.\", \"error\", comp_TXT_revNombre, \"\",3100);\n    comp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: red\"); \n\n}else if(comp_TXT_revCUIL.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un CUIT/CUIL.\", \"error\", comp_TXT_revCUIL, \"\",3100);\n    comp_TXT_revCUIL.setStyle(comp_TXT_revCUIL.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_revTipoDoc.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Tipo de Documento.\", \"error\", comp_TXT_revTipoDoc, \"\",3100);\n    comp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_revNumDoc.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Número de Documento.\", \"error\", comp_TXT_revNumDoc, \"\",3100);\n    comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_revCorreo.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Correo Electrónico.\", \"error\", comp_TXT_revCorreo, \"\",3100);\n    comp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_revTelefono.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Número de Teléfono.\", \"error\", comp_TXT_revTelefono, \"\",3100);\n    comp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: red\");\n\n}else if(comp_TXT_revLoginSayges.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Usuario Login Sayges.\", \"error\", comp_TXT_revLoginSayges, \"\",3100);\n    comp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: red\");\n\n}else if (!alMenosUnoSeleccionado){\n    \n    Messagebox.show(\"Debe seleccionar al menos una opción de Permiso.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else{\n    \n    int tipoDoc = Integer.parseInt(comp_TXT_revTipoDoc.getValue());\n\n    \n    try {\n        \n        //REVISOR (POST)\n        java.util.List parametrosfnPostRevisor = new java.util.ArrayList();\n        parametrosfnPostRevisor.add(comp_TXT_revApellido.getValue().trim()); //apellido / String\n        parametrosfnPostRevisor.add(comp_TXT_revNombre.getValue().trim()); //nombre / String\n        parametrosfnPostRevisor.add(comp_TXT_revCUIL.getValue().trim()); //cuit / String\n        parametrosfnPostRevisor.add(tipoDoc); //tipoDoc / int\n        parametrosfnPostRevisor.add(comp_TXT_revNumDoc.getValue().trim()); //numDoc / String\n        parametrosfnPostRevisor.add(comp_TXT_revCorreo.getValue().trim()); //corrreo / String\n        parametrosfnPostRevisor.add(comp_TXT_revTelefono.getValue().trim()); //telefono / String\n        parametrosfnPostRevisor.add(comp_TXT_revLoginSayges.getValue().trim()); //usuarioSayges / String\n        parametrosfnPostRevisor.add(comp_CHK_revPerAME.isChecked()); //aprobMDE / Boolean\n        parametrosfnPostRevisor.add(comp_CHK_revPerRME.isChecked()); //renovMDE / Boolean\n        parametrosfnPostRevisor.add(comp_CHK_revPerAEM.isChecked()); //aprobEM / Boolean\n        parametrosfnPostRevisor.add(comp_CHK_revActivo.isChecked()); //activo / Boolean\n    \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostRevisor\",parametrosfnPostRevisor);\n        \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de REVISORES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    \n    //try {\n        \n        //REVISOR (GET)\n        /*java.util.List parametrosfnGetRevisores = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetRevisores\",parametrosfnGetRevisores);\n        Map return94map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return94map\");*/\n        java.util.List parametrosfnGetRevisores = new java.util.ArrayList();\n        parametrosfnGetRevisores.add(0); //listar_Revisores / int\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetRevisores\",parametrosfnGetRevisores);\n        Map return94map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return94map\");\n        \n        int size = return94map.get(\"revisores\").size();\n        String id = return94map.get(\"revisores\").get(size - 1).get(\"rev_id\").toString();\n        \n        Listitem item = new Listitem();  \n        \n        item.appendChild(new Listcell(id));\n        item.appendChild(new Listcell(comp_TXT_revApellido.getValue()));\n        item.appendChild(new Listcell(comp_TXT_revNombre.getValue()));\n        item.appendChild(new Listcell(comp_TXT_revCUIL.getValue()));\n        item.appendChild(new Listcell(comp_TXT_revTipoDoc.getValue()));\n        item.appendChild(new Listcell(comp_TXT_revNumDoc.getValue()));\n        item.appendChild(new Listcell(comp_TXT_revCorreo.getValue()));\n        item.appendChild(new Listcell(comp_TXT_revTelefono.getValue()));\n        item.appendChild(new Listcell(comp_TXT_revLoginSayges.getValue()));\n        \n        //Celdas para las opciones de Permisos\n        if(comp_CHK_revPerAME.isChecked() && !comp_CHK_revPerRME.isChecked() && !comp_CHK_revPerAEM.isChecked()){\n\n            item.appendChild(new Listcell(\"SI\"));\n            item.appendChild(new Listcell(\"NO\"));\n            item.appendChild(new Listcell(\"SI\"));\n        }\n\n        if(!comp_CHK_revPerAME.isChecked() && comp_CHK_revPerRME.isChecked() && !comp_CHK_revPerAEM.isChecked()){\n\n            item.appendChild(new Listcell(\"NO\"));\n            item.appendChild(new Listcell(\"SI\"));\n            item.appendChild(new Listcell(\"NO\"));\n        }\n\n        if(!comp_CHK_revPerAME.isChecked() && !comp_CHK_revPerRME.isChecked() && comp_CHK_revPerAEM.isChecked()){\n\n            item.appendChild(new Listcell(\"NO\"));\n            item.appendChild(new Listcell(\"NO\"));\n            item.appendChild(new Listcell(\"SI\"));\n        }\n        \n        item.appendChild(new Listcell(comp_CHK_revActivo.isChecked() ? \"SI\" : \"NO\")); //Activo ?\n        \n        Toolbarbutton desv = new Toolbarbutton();\n        desv.setAttribute(\"item\", item);\n        Listcell reg1 = new Listcell();\n        reg1.setStyle(\"text-align:center;\");\n        reg1.setParent(item);\n        desv.setParent(reg1);\n        desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n        desv.setLabel(\"Borrar\");\n        desv.setWidth(\"80px\");\n        desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n            public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n\n                final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                int ind = i.getIndex();\n                comp_GRID_revisores.removeItemAt(ind);\n\n                comp_TXT_revApellido.setValue(\"-\");\n                comp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: #606060\");\n                comp_TXT_revNombre.setValue(\"-\");\n                comp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: #606060\");\n                comp_TXT_revCUIL.setValue(\"-\");\n                comp_TXT_revCUIL.setStyle(comp_TXT_revCUIL.getStyle() + \"; border-color: #606060\");\n                comp_TXT_revTipoDoc.setValue(\"-\");\n                comp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: #606060\");\n                comp_TXT_revNumDoc.setValue(\"-\");\n                comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: #606060\");\n                comp_TXT_revCorreo.setValue(\"-\");\n                comp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: #606060\");\n                comp_TXT_revTelefono.setValue(\"-\");\n                comp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: #606060\");\n                comp_TXT_revLoginSayges.setValue(\"-\");\n                comp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: #606060\");\n\n                comp_CHK_revPerAME.setChecked(false);\n                comp_CHK_revPerRME.setChecked(false);\n                comp_CHK_revPerAEM.setChecked(false);\n                comp_CHK_revActivo.setChecked(true);\n\n                comp_BTN_revEditar.setLabel(\"Editar\");\n                comp_BTN_revEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n\n            }\n        });\n\n        comp_GRID_revisores.appendChild(item); // Se guarda en la grilla item\n\n        comp_TXT_revApellido.setValue(\"-\");\n        comp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: #606060\");\n        comp_TXT_revNombre.setValue(\"-\");\n        comp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: #606060\");\n        comp_TXT_revCUIL.setValue(\"-\");\n        comp_TXT_revCUIL.setStyle(comp_TXT_revCUIL.getStyle() + \"; border-color: #606060\");\n        comp_TXT_revTipoDoc.setValue(\"-\");\n        comp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: #606060\");\n        comp_TXT_revNumDoc.setValue(\"-\");\n        comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: #606060\");\n        comp_TXT_revCorreo.setValue(\"-\");\n        comp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: #606060\");\n        comp_TXT_revTelefono.setValue(\"-\");\n        comp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: #606060\");\n        comp_TXT_revLoginSayges.setValue(\"-\");\n        comp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: #606060\");\n\n        comp_CHK_revPerAME.setChecked(false);\n        comp_CHK_revPerRME.setChecked(false);\n        comp_CHK_revPerAEM.setChecked(false);\n        comp_CHK_revActivo.setChecked(true);\n\n        comp_BTN_revEditar.setDisabled(false);\n        comp_BTN_revCancelar.setDisabled(false);\n\n        \n\n    /*}catch (Exception e) {\n        Messagebox.show(\"El servicio de la API GET de REVISORES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }*/\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_revEditar','Editar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_revisores=(Listbox) sup.getInstanciaComponente(\"comp_GRID_revisores\");\n\n//TXT\nTextbox comp_TXT_revApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revApellido\");\nTextbox comp_TXT_revNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNombre\");\nTextbox comp_TXT_revCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCUIL\");\nTextbox comp_TXT_revTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTipoDoc\");\nTextbox comp_TXT_revNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDoc\");\nTextbox comp_TXT_revTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTelefono\");\nTextbox comp_TXT_revCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCorreo\");\nTextbox comp_TXT_revLoginSayges=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revLoginSayges\");\n\n//CHEK\nCheckbox comp_CHK_revPerAME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAME\");\nCheckbox comp_CHK_revPerRME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerRME\");\nCheckbox comp_CHK_revPerAEM=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAEM\");\nCheckbox comp_CHK_revActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revActivo\");\n\n//BTN\nButton comp_BTN_revAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_revAgregar\");\nButton comp_BTN_revEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_revEditar\");\nButton comp_BTN_revCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_revCancelar\");\n\n\n\n/****************************LÓGICA****************************/\nint indice= comp_GRID_revisores.getSelectedIndex();\n\nif (indice == -1) {\n    \n    //Clients.showNotification(\"Por favor, seleccione el registro que desea Editar.\",true); \n    Messagebox.show(\"Por favor, seleccione el registro que desea Editar.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else {\n    \n    org.zkoss.zul.Listitem item = (org.zkoss.zul.Listitem) comp_GRID_revisores.getItemAtIndex(indice);\n    Listcell cel0 = (Listcell) item.getChildren().get(0);\n    Listcell cel1 = (Listcell) item.getChildren().get(1);\n    Listcell cel2 = (Listcell) item.getChildren().get(2);\n    Listcell cel3 = (Listcell) item.getChildren().get(3);\n    Listcell cel4 = (Listcell) item.getChildren().get(4);\n    Listcell cel5 = (Listcell) item.getChildren().get(5);\n    Listcell cel6 = (Listcell) item.getChildren().get(6);\n    Listcell cel7 = (Listcell) item.getChildren().get(7);\n    Listcell cel8 = (Listcell) item.getChildren().get(8);\n    Listcell cel9 = (Listcell) item.getChildren().get(9);\n    Listcell cel10 = (Listcell) item.getChildren().get(10);\n    Listcell cel11 = (Listcell) item.getChildren().get(11);\n    Listcell cel12 = (Listcell) item.getChildren().get(12);\n\n    \n    if (comp_BTN_revEditar.getLabel().equals(\"Editar\")){\n        \n        String apellido = item.getChildren().get(1).getLabel().trim();\n        String nombre = item.getChildren().get(2).getLabel().trim();\n        String cuil = item.getChildren().get(3).getLabel().trim();\n        String tipoDocumento = item.getChildren().get(4).getLabel().trim();\n        String numeroDocumento = item.getChildren().get(5).getLabel().trim();\n        String correo = item.getChildren().get(6).getLabel().trim();\n        String telefono = item.getChildren().get(7).getLabel().trim(); \n        String loginSayges = item.getChildren().get(8).getLabel().trim();\n        String aprobarMDE = item.getChildren().get(9).getLabel().trim();\n        String habilitacionMDE = item.getChildren().get(10).getLabel().trim();\n        String aprobarEDM = item.getChildren().get(11).getLabel().trim();\n        String activo = item.getChildren().get(12).getLabel().trim(); \n        \n        if(aprobarMDE.equals(\"SI\") && habilitacionMDE.equals(\"NO\") && aprobarEDM.equals(\"NO\")){\n            \n            comp_CHK_revPerAME.setChecked(true);\n            comp_CHK_revPerRME.setChecked(false);\n            comp_CHK_revPerAEM.setChecked(false);\n            \n        }\n        \n        if(aprobarMDE.equals(\"NO\") && habilitacionMDE.equals(\"SI\") && aprobarEDM.equals(\"NO\")){\n            \n            comp_CHK_revPerAME.setChecked(false);\n            comp_CHK_revPerRME.setChecked(true);\n            comp_CHK_revPerAEM.setChecked(false);\n            \n        }\n        \n        if(aprobarMDE.equals(\"NO\") && habilitacionMDE.equals(\"NO\") && aprobarEDM.equals(\"SI\")){\n            \n            comp_CHK_revPerAME.setChecked(false);\n            comp_CHK_revPerRME.setChecked(false);\n            comp_CHK_revPerAEM.setChecked(true);\n            \n        }\n        \n        if (activo.equals(\"SI\")){\n            \n        \tcomp_CHK_revActivo.setChecked(true);\n            \n        } else{\n            \n            comp_CHK_revActivo.setChecked(false);\n        }\n\n        comp_TXT_revApellido.setValue(apellido);\n        comp_TXT_revNombre.setValue(nombre);\n        comp_TXT_revCUIL.setValue(cuil);\n        comp_TXT_revTipoDoc.setValue(tipoDocumento);\n        comp_TXT_revNumDoc.setValue(numeroDocumento);\n        comp_TXT_revCorreo.setValue(correo);\n        comp_TXT_revTelefono.setValue(telefono);\n        comp_TXT_revLoginSayges.setValue(loginSayges);\n        comp_CHK_revPerAME.setValue(aprobarMDE);\n        comp_CHK_revPerRME.setValue(habilitacionMDE);\n        comp_CHK_revPerAEM.setValue(aprobarEDM);\n        comp_CHK_revActivo.setValue(activo);\n        \n        comp_BTN_revEditar.setLabel(\"Guardar Cambios\");\n        comp_BTN_revEditar.setStyle(\"margin-left:25px; background:#008000; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        comp_BTN_revAgregar.setDisabled(true);\n    \n    }else if (comp_BTN_revEditar.getLabel().equals(\"Guardar Cambios\")){\n        \n        \n        //VALIDAR QUE NINGUN DATOS ESTE CON \"-\"\n        \n        //Variable para los 3 checks\n        boolean alMenosUnoSeleccionado = comp_CHK_revPerAME.isChecked() || comp_CHK_revPerRME.isChecked() || comp_CHK_revPerAEM.isChecked();\n\n        if(comp_TXT_revApellido.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Apellido.\", \"error\", comp_TXT_revApellido, \"\",3100);\n            comp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_revNombre.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Nombre.\", \"error\", comp_TXT_revNombre, \"\",3100);\n            comp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: red\"); \n\n        }else if(comp_TXT_revCUIL.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un CUIT/CUIL.\", \"error\", comp_TXT_revCUIL, \"\",3100);\n            comp_TXT_revCUIL.setStyle(comp_TXT_revCUIL.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_revTipoDoc.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Tipo de Documento.\", \"error\", comp_TXT_revTipoDoc, \"\",3100);\n            comp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_revNumDoc.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Número de Documento.\", \"error\", comp_TXT_revNumDoc, \"\",3100);\n            comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_revTelefono.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Número de Teléfono.\", \"error\", comp_TXT_revTelefono, \"\",3100);\n            comp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_revCorreo.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Correo Electrónico.\", \"error\", comp_TXT_revCorreo, \"\",3100);\n            comp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: red\");\n\n        }else if(comp_TXT_revLoginSayges.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Usuario Login Sayges.\", \"error\", comp_TXT_revLoginSayges, \"\",3100);\n            comp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: red\");\n\n        }else if (!alMenosUnoSeleccionado){\n\n             Messagebox.show(\"Debe seleccionar al menos una opción de Permiso.\");\n\n        }else{\n  \n            cel1.setLabel(comp_TXT_revApellido.getValue());\n            cel1.setParent(item);\n            cel2.setLabel(comp_TXT_revNombre.getValue());\n            cel2.setParent(item);\n            cel3.setLabel(comp_TXT_revCUIL.getValue());\n            cel3.setParent(item);\n            cel4.setLabel(comp_TXT_revTipoDoc.getValue());\n            cel4.setParent(item);\n            cel5.setLabel(comp_TXT_revNumDoc.getValue());\n            cel5.setParent(item);\n            cel6.setLabel(comp_TXT_revCorreo.getValue());\n            cel6.setParent(item);\n            cel7.setLabel(comp_TXT_revTelefono.getValue());\n            cel7.setParent(item);\n            cel8.setLabel(comp_TXT_revLoginSayges.getValue());\n            cel8.setParent(item);\n            \n            if(comp_CHK_revPerAME.isChecked() && !comp_CHK_revPerRME.isChecked() && !comp_CHK_revPerAEM.isChecked()){\n                \n                cel9.setLabel(\"SI\");\n            \tcel9.setParent(item);\n                \n                cel10.setLabel(\"NO\");\n                cel10.setParent(item);\n                \n                cel12.setLabel(\"NO\");\n                cel12.setParent(item);\n                \n            }\n            \n            if(!comp_CHK_revPerAME.isChecked() && comp_CHK_revPerRME.isChecked() && !comp_CHK_revPerAEM.isChecked()){\n                \n                cel9.setLabel(\"NO\");\n            \tcel9.setParent(item);\n                \n                cel10.setLabel(\"SI\");\n                cel10.setParent(item);\n                \n                cel11.setLabel(\"NO\");\n                cel11.setParent(item);\n                \n            }\n            \n            if(!comp_CHK_revPerAME.isChecked() && !comp_CHK_revPerRME.isChecked() && comp_CHK_revPerAEM.isChecked()){\n                \n                cel9.setLabel(\"NO\");\n            \tcel9.setParent(item);\n                \n                cel10.setLabel(\"NO\");\n                cel10.setParent(item);\n                \n                cel11.setLabel(\"SI\");\n                cel11.setParent(item);\n                \n            }\n            \n            \n            if (comp_CHK_revActivo.isChecked()) {\n                cel12.setLabel(\"SI\");\n                cel12.setParent(item);\n            } else {\n                cel12.setLabel(\"NO\");\n                cel12.setParent(item);\n            }\n            \n            \n            String id = ((org.zkoss.zul.Listcell) item.getChildren().get(0)).getLabel().trim();\n        \tint idRevisor = Integer.parseInt(id);\n            \n            int tipoDoc = Integer.parseInt(comp_TXT_revTipoDoc.getValue());\n            \n            try {\n                \n                //REVISOR (PUT)\n                java.util.List parametrosfnPutRevisores = new java.util.ArrayList();\n                parametrosfnPutRevisores.add(idRevisor); //idRevisor / int\n                parametrosfnPutRevisores.add(comp_TXT_revApellido.getValue().trim()); //apellido / String\n                parametrosfnPutRevisores.add(comp_TXT_revNombre.getValue().trim()); //nombre / String\n                parametrosfnPutRevisores.add(comp_TXT_revCUIL.getValue().trim()); //cuit / String\n                parametrosfnPutRevisores.add(tipoDoc); //tipoDoc / int\n                parametrosfnPutRevisores.add(comp_TXT_revNumDoc.getValue().trim()); //numDoc / String\n                parametrosfnPutRevisores.add(comp_TXT_revCorreo.getValue().trim()); //correo / String\n                parametrosfnPutRevisores.add(comp_TXT_revTelefono.getValue().trim()); //telefono / String\n                parametrosfnPutRevisores.add(comp_TXT_revLoginSayges.getValue().trim()); //usuarioSayges / String\n                parametrosfnPutRevisores.add(comp_CHK_revPerAME.isChecked()); //aprobMDE / Boolean\n                parametrosfnPutRevisores.add(comp_CHK_revPerRME.isChecked()); //renovMDE / Boolean\n                parametrosfnPutRevisores.add(comp_CHK_revPerAEM.isChecked()); //aprobEM / Boolean\n                parametrosfnPutRevisores.add(comp_CHK_revActivo.isChecked()); //activo / Boolean\n            \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutRevisores\",parametrosfnPutRevisores);\n                \n            } catch (Exception e) {\n                \n                Messagebox.show(\"El servicio de la API PUT de REVISORES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n            }\n            \n\n            comp_TXT_revApellido.setValue(\"-\");\n            comp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: #606060\");\n            comp_TXT_revNombre.setValue(\"-\");\n            comp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: #606060\");\n            comp_TXT_revCUIL.setValue(\"-\");\n            comp_TXT_revCUIL.setStyle(comp_TXT_revCUIL.getStyle() + \"; border-color: #606060\");\n            comp_TXT_revTipoDoc.setValue(\"-\");\n            comp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: #606060\");\n            comp_TXT_revNumDoc.setValue(\"-\");\n            comp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: #606060\");\n            comp_TXT_revTelefono.setValue(\"-\");\n            comp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: #606060\");\n            comp_TXT_revCorreo.setValue(\"-\");\n            comp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: #606060\");\n            comp_TXT_revLoginSayges.setValue(\"-\");\n            comp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: #606060\");\n            \n            comp_CHK_revPerAME.setChecked(false);\n            comp_CHK_revPerRME.setChecked(false);\n            comp_CHK_revPerAEM.setChecked(false);\n            comp_CHK_revActivo.setChecked(true);\n            \n            comp_BTN_revEditar.setLabel(\"Editar\");\n            comp_BTN_revEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n            comp_BTN_revAgregar.setDisabled(false);\n            \n        }\n    }   \n}\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_revCancelar','Cancelar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px;  background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_revisores=(Listbox) sup.getInstanciaComponente(\"comp_GRID_revisores\");\n\n//TXT\nTextbox comp_TXT_revApellido=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revApellido\");\nTextbox comp_TXT_revNombre=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNombre\");\nTextbox comp_TXT_revCUIL=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCUIL\");\nTextbox comp_TXT_revTipoDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTipoDoc\");\nTextbox comp_TXT_revNumDoc=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDoc\");\nTextbox comp_TXT_revTelefono=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revTelefono\");\nTextbox comp_TXT_revCorreo=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revCorreo\");\nTextbox comp_TXT_revLoginSayges=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revLoginSayges\");\n\n//CHEK\nCheckbox comp_CHK_revPerAME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAME\");\nCheckbox comp_CHK_revPerRME=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerRME\");\nCheckbox comp_CHK_revPerAEM=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revPerAEM\");\nCheckbox comp_CHK_revActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_revActivo\");\n\n//BTN\nButton comp_BTN_revAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_revAgregar\");\nButton comp_BTN_revEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_revEditar\");\nButton comp_BTN_revCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_revCancelar\");\n\n\n\n/****************************LÓGICA****************************/\ncomp_TXT_revApellido.setValue(\"-\");\ncomp_TXT_revApellido.setStyle(comp_TXT_revApellido.getStyle() + \"; border-color: #606060\");\ncomp_TXT_revNombre.setValue(\"-\");\ncomp_TXT_revNombre.setStyle(comp_TXT_revNombre.getStyle() + \"; border-color: #606060\");\ncomp_TXT_revCUIL.setValue(\"-\");\ncomp_TXT_revCUIL.setStyle(comp_TXT_revCUIL.getStyle() + \"; border-color: #606060\");\ncomp_TXT_revTipoDoc.setValue(\"-\");\ncomp_TXT_revTipoDoc.setStyle(comp_TXT_revTipoDoc.getStyle() + \"; border-color: #606060\");\ncomp_TXT_revNumDoc.setValue(\"-\");\ncomp_TXT_revNumDoc.setStyle(comp_TXT_revNumDoc.getStyle() + \"; border-color: #606060\");\ncomp_TXT_revTelefono.setValue(\"-\");\ncomp_TXT_revTelefono.setStyle(comp_TXT_revTelefono.getStyle() + \"; border-color: #606060\");\ncomp_TXT_revCorreo.setValue(\"-\");\ncomp_TXT_revCorreo.setStyle(comp_TXT_revCorreo.getStyle() + \"; border-color: #606060\");\ncomp_TXT_revLoginSayges.setValue(\"-\");\ncomp_TXT_revLoginSayges.setStyle(comp_TXT_revLoginSayges.getStyle() + \"; border-color: #606060\");\n\ncomp_CHK_revPerAME.setChecked(false);\ncomp_CHK_revPerRME.setChecked(false);\ncomp_CHK_revPerAEM.setChecked(false);\ncomp_CHK_revActivo.setChecked(true);\n\ncomp_BTN_revEditar.setLabel(\"Editar\");\ncomp_BTN_revEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \ncomp_BTN_revAgregar.setDisabled(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Grilla_RevisoresE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_GRID_revisores','',@vIdDistribucionCells,'Listbox','100','%','130','px','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','height: auto !important;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,6,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,13,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,22,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,70,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,71,'true','null','1.0') ;
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID',0,0,'-1','-',1,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Apellido',0,0,'-1','-',2,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Nombre',0,0,'-1','-',3,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'CUIT',0,0,'-1','-',4,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Tipo de Documento',0,0,'-1','-',5,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'N° de Documento',0,0,'-1','-',6,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Correo',0,0,'-1','-',7,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Teléfono',0,0,'-1','-',8,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Usuario Sayges',0,0,'-1','-',9,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Permiso AME',0,0,'-1','-',11,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Permiso RME',0,0,'-1','-',12,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Permiso AEM',0,0,'-1','-',13,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Activo',0,0,'-1','-',14,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_ActivoRE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',6,'padding-top:2px;  margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_ActivoRE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revActivo','Activo:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_revActivo','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_CL_RevisoresE','Consulta y Listado de Revisores Electrotécnica',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',12,'',8367,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8367,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_ReporteRE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_ReporteRE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revOpcRep','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_revOpcRep','',@vIdDistribucionCells,'Combobox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.Component;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport org.zkoss.zul.Paging;\n\n\nModeloComponente sup = new ModeloComponente();\n\n\nCombobox comp_CMB_revOpcRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revOpcRep\");\nCombobox comp_CMB_revTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revTipoDocRep\");\nTextbox comp_TXT_revNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDocRep\");\nButton comp_BTN_revGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_revGenRep\");\n\n\n\nString opciones = comp_CMB_revOpcRep.getValue().toString();\n\nif(opciones.equals(\"-\")){\n    \n    comp_CMB_revTipoDocRep.setDisabled(true);\n\tcomp_TXT_revNumDocRep.setDisabled(true);\n    \n    comp_CMB_revTipoDocRep.setValue(\"-\");\n\tcomp_TXT_revNumDocRep.setValue(\"-\");\n    \n    comp_BTN_revGenRep.setDisabled(true);\n    \n}else if(opciones.equals(\"Todos los revisores\")){\n    \n    comp_CMB_revTipoDocRep.setDisabled(true);\n\tcomp_TXT_revNumDocRep.setDisabled(true);\n    \n    comp_CMB_revTipoDocRep.setValue(\"-\");\n\tcomp_TXT_revNumDocRep.setValue(\"-\");\n    \n    comp_BTN_revGenRep.setDisabled(false);\n    \n}else if(opciones.equals(\"Revisor por DNI\")){\n    \n    comp_CMB_revTipoDocRep.setDisabled(false);\n\tcomp_TXT_revNumDocRep.setDisabled(false);  \n    \n    comp_BTN_revGenRep.setDisabled(false);\n}\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Todos los revisores','Todos los revisores',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Revisor por DNI','Revisor por DNI',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaRE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_TipoDocumento_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revTipoDocRep','Tipo de Documento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_revTipoDocRep','',@vIdDistribucionCells,'Combobox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_revTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revTipoDocRep\");\nTextbox comp_TXT_revNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDocRep\");\n\ncomp_TXT_revNumDocRep.setValue(\"-\");','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,1,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'DNI','1',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Pasaporte','2',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_NumeroDocumento_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revNumDocRep','Número de Documento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_revNumDocRep','',@vIdDistribucionCells,'Textbox','100','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_revTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revTipoDocRep\");\nTextbox comp_TXT_revNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDocRep\");\n\ncomp_CMB_revTipoDocRep.setSelectedIndex(0);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteRE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteEM',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_revGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nTextbox comp_TXT_revNumDocRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_revNumDocRep\");\nCombobox comp_CMB_revTipoDocRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_revTipoDocRep\");\n\nListbox comp_GRID_revisores=(Listbox) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente(\"comp_GRID_revisores\");\n\n\n\nMap valorVariablesReportes = new java.util.HashMap();\n\nvalorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\nvalorVariablesReportes.put(\"p_numDoc\", comp_TXT_revNumDocRep.getValue());\nvalorVariablesReportes.put(\"p_tipoDoc\", comp_CMB_revTipoDocRep.getSelectedItem().getValue());\n//valorVariablesReportes.put(\"p_tipoDoc\", \"2\");\n\n\n//Función reporte\n/*List parametrosfnImprimirSelReporte = new java.util.ArrayList();\nparametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\nparametrosfnImprimirSelReporte.add(\"RevisoresMediosDeElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\norg.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n*/\n\n\n\nif (comp_CMB_revTipoDocRep.getValue().equals(\"-\") && comp_TXT_revNumDocRep.getValue().equals(\"-\") && (!comp_CMB_revTipoDocRep.isDisabled() && !comp_TXT_revNumDocRep.isDisabled() )){\n    \n    Messagebox.show(\"Debe seleccionar/ingresar un Tipo de Documento/Número de Documento\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else {\n    \n    if(!comp_CMB_revTipoDocRep.getValue().equals(\"-\") && comp_TXT_revNumDocRep.getValue().equals(\"-\")){\n        \n        //SE ENCONTRO REVISOR?\n        String tipoDoc_Seleccionado = comp_CMB_revTipoDocRep.getValue().trim();\n        boolean tipoDoc_Encontrado = false;\n\n        for (Listitem item : comp_GRID_revisores.getItems()) {\n            \n            Listcell cell_TipoDoc = (Listcell) item.getChildren().get(4);\n\n            String tipoDoc = cell_TipoDoc.getLabel().trim();\n            \n            // Parsear el tipo de documento\n            String tipoDocNombre;\n            \n            if (\"1\".equals(tipoDoc)) {\n                tipoDocNombre = \"DNI\";\n                \n            } else if (\"2\".equals(tipoDoc)) {\n                tipoDocNombre = \"Pasaporte\";\n                \n            }\n\n            if (tipoDocNombre.equals(tipoDoc_Seleccionado)) {\n                tipoDoc_Encontrado = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"RevisoresMediosDeElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                break;\n            }\n        }\n        \n        if (!tipoDoc_Encontrado) {\n            Messagebox.show(\"No se encontro el Tipo de Documento seleccionado \" + tipoDoc_Seleccionado + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n    }else if(comp_CMB_revTipoDocRep.getValue().equals(\"-\") && !comp_TXT_revNumDocRep.getValue().equals(\"-\")){\n        \n        //SE ENCONTRO REVISOR?\n        String numeroDoc_Ingresado = comp_TXT_revNumDocRep.getValue().trim();\n        boolean numeroDoc_Encontrado = false;\n\n        for (Listitem item : comp_GRID_revisores.getItems()) {\n            \n            Listcell cell_NumeroDoc = (Listcell) item.getChildren().get(5);\n\n            String numeroDoc = cell_NumeroDoc.getLabel().trim();\n\n            if (numeroDoc.equals(numeroDoc_Ingresado)) {\n                numeroDoc_Encontrado = true;\n                \n                //Función reporte\n                List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n                parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n                parametrosfnImprimirSelReporte.add(\"RevisoresMediosDeElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n                org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n                break;\n            }\n        }\n        \n        if (!numeroDoc_Encontrado) {\n            Messagebox.show(\"No se encontro el N° de Documento ingresado \" + numeroDoc_Ingresado + \".\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        }\n    \n    }else{\n        \n        //Función reporte\n        List parametrosfnImprimirSelReporte = new java.util.ArrayList();\n        parametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\n        parametrosfnImprimirSelReporte.add(\"RevisoresMediosDeElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\n        org.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n    }\n}\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_RE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_RE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_revFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_ABM_HDE','Altas, Bajas y Modificaciones de Habilitación de Empresas',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',13,'',8368,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8368,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_EmpresaH_HDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_FechaH_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaFechaHab','Fecha Habilitación:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_ehaFechaHab','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty;','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_ExpedienteS_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaExpte','Expediente Sayges:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:15px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_ehaExpte','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_ehaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ehaExpte\");\n\n\nString regex = \"^[0-9a-zA-ZáéíóúÁÉÍÓÚñÑ\\s-]+$\";\nString texto = comp_TXT_ehaExpte.getValue();\n\n\nif (texto.length() <= 20 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un expediente válido.\", \"error\", comp_TXT_ehaExpte, \"\", 3100);\n    comp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: red\");\n    comp_TXT_ehaExpte.setValue(\"-\");\n    \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_FechaV_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaFechaVtoHab','Fecha Vencimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:3px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_ehaFechaVtoHab','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty;','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_EmpresaH_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaHabilitada','Empresa Habilitada',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:14px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_ehaHabilitada','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_RevisorA_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaRevisor','Revisor Autorizó:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_ehaRevisor','',@vIdDistribucionCells,'Combobox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'revisor1','revisor1',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'revisor2','revisor2',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_EmpresaM_HDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_EmpresaM_HDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaEmpMant','Empresa de Mantenimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_ehaEmpMant','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'empresa1','empresa1',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'empresa2','empresa2',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_HDE_Activo',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_HDE_Activo',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaActivo','Activo:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_ehaActivo','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Grilla_HDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px; margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones_Grilla_HDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_ehaAgregar','Agregar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.text.SimpleDateFormat;  \nimport java.util.Date; \nimport java.util.Calendar;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_habilitacionesempresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesempresas\");\n\n//DATE\nDatebox comp_DA_ehaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaHab\");\nDatebox comp_DA_ehaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaVtoHab\");\n\n//CMB\nCombobox comp_CMB_ehaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMant\");\nCombobox comp_CMB_ehaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaRevisor\");\n\n//TXT\nTextbox comp_TXT_ehaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ehaExpte\");\n\n//CHEK\nCheckbox comp_CHK_ehaHabilitada=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaHabilitada\");\nCheckbox comp_CHK_ehaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaActivo\");\n\n//BTN\nButton comp_BTN_ehaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaAgregar\");\nButton comp_BTN_ehaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaEditar\");\nButton comp_BTN_ehaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaCancelar\");\n\n \n\n/****************************LÓGICA****************************/\n\n//Logica para la fecha\njava.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd/MM/yyyy\", new Locale(\"es\", \"ES\"));\n\nDate fechaHabilitacion = comp_DA_ehaFechaHab.getValue();\nDate fechaVencimiento = comp_DA_ehaFechaVtoHab.getValue();\n\n\n\nif(comp_CMB_ehaEmpMant.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else if(comp_TXT_ehaExpte.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Expediente Sayges.\", \"error\", comp_TXT_ehaExpte, \"\",3100);\n    comp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: red\");\n    \n}else if(fechaHabilitacion.equals(fechaVencimiento) || fechaVencimiento.before(fechaHabilitacion)) {\n    \n    Messagebox.show(\"La Fecha Vencimiento seleccionada no es válida.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else if(comp_CMB_ehaRevisor.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un Revisor.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else{\n    \n    \n    //OBTENER EL ID DE LA EMPRESA\n    Comboitem selectedItemEM = comp_CMB_ehaEmpMant.getSelectedItem();\n\tString selectedEMId = (String) selectedItemEM.getValue(); // Obtener el id seleccionado como cadena \n    int empresaID = Integer.parseInt(selectedEMId);\n    \n    //OBTENER EL ID DEL REVISOR\n    Comboitem selectedItemR = comp_CMB_ehaRevisor.getSelectedItem();\n\tString selectedRId = (String) selectedItemR.getValue(); // Obtener el id seleccionado como cadena \n    int revisorID = Integer.parseInt(selectedRId);\n    \n    // Obtener valores de la selección actual\n    //String empresaSeleccionada = comp_CMB_ehaEmpMant.getValue();\n    //String revisorSeleccionado = comp_CMB_ehaRevisor.getValue();\n    \n    //FORMATEAR FECHAS ANTES DE ENVIAR POR LA API\n    // Definir el formato de fecha deseado para la API\n    SimpleDateFormat apiDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n    // Obtener fechas desde los componentes `Datebox`\n    Date fechaHab = comp_DA_ehaFechaHab.getValue();\n    Date fechaVtoHab = comp_DA_ehaFechaVtoHab.getValue();\n    \n    // Verificar si la empresa ya tiene un revisor asignado\n    for (Listitem item : comp_GRID_habilitacionesempresas.getItems()) {\n        \n        //String empresaGrilla = item.getChildren().get(2).getLabel(); // Índice 1 es la empresa\n\t\tint empresaGrilla = Integer.parseInt(item.getChildren().get(1).getLabel()); \n        \n        if (empresaID == empresaGrilla) {\n            // Mostrar mensaje de error si la empresa ya tiene un revisor\n            Messagebox.show(\"Esta empresa ya tiene un revisor asignado. Por favor seleccione otra empresa.\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n            return; // Detener el proceso para evitar agregar más relaciones para esta empresa\n    \t}\n        /*if (empresaID == empresaGrilla) {\n            // Mostrar mensaje de error si la empresa ya tiene un revisor\n            Messagebox.show(\"Esta empresa ya tiene un revisor asignado. Por favor seleccione otra empresa.\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n            return; // Detener el proceso para evitar agregar más relaciones para esta empresa\n    \t}*/\n    }\n\n    // Convertir fechas a cadenas usando el formato \"yyyy-MM-dd\"\n    String fechaHabStr = (fechaHab != null) ? apiDateFormat.format(fechaHab) : null;\n    String fechaVtoHabStr = (fechaVtoHab != null) ? apiDateFormat.format(fechaVtoHab) : null;\n\n    \n    //try {\n        \n        //HABILITACION DE EMPRESAS (POST)\n        java.util.List parametrosfnPostHabilitacionEmpresas = new java.util.ArrayList();\n        parametrosfnPostHabilitacionEmpresas.add(fechaHabStr); //fechaH / String\n        parametrosfnPostHabilitacionEmpresas.add(empresaID); //empresaID / int\n        parametrosfnPostHabilitacionEmpresas.add(comp_TXT_ehaExpte.getValue().trim()); //expediente / String\n        parametrosfnPostHabilitacionEmpresas.add(comp_CHK_ehaHabilitada.isChecked()); //empresaH / Boolean\n        parametrosfnPostHabilitacionEmpresas.add(fechaVtoHabStr); //fechaV / String\n        parametrosfnPostHabilitacionEmpresas.add(revisorID); //revisorID / int\n        parametrosfnPostHabilitacionEmpresas.add(comp_CHK_ehaActivo.isChecked()); //activo / Boolean\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostHabilitacionEmpresas\",parametrosfnPostHabilitacionEmpresas);\n        \n    /*}catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de HABILITACION DE EMPRESAS NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }*/\n    \n    try {\n        \n        //HABILITACION DE EMPRESAS (GET)\n        java.util.List parametrosfnGetHabilitacionEmpresas = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetHabilitacionEmpresas\",parametrosfnGetHabilitacionEmpresas);\n        Map return95map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return95map\");\n\n        //int size = return95map.get(\"habilitacionEmpresas\").size();\n        //String idHDE = return95map.get(\"habilitacionEmpresas\").get(size - 1).get(\"eha_id\").toString();\n        \n        if (return95map.containsKey(\"habilitacionEmpresas\")) {\n            \n            List habilitacionEmp = (List) return95map.get(\"habilitacionEmpresas\");\n        \tint size = habilitacionEmp.size();\n            \n            if (size > 0) {\n                \n                // Obtener el último elemento de la lista\n                Map ultimoItem = (Map) habilitacionEmp.get(size - 1);\n                \n                \n                String idHDE = \"-\";\n                \n                if (ultimoItem.containsKey(\"eha_id\")) {\n                    \n                    idHDE = ultimoItem.get(\"eha_id\").toString();\n                }\n                \n      \n                //EMPRESA\n                String idEmpresa = \"-\";\n                Object empresaObj = ultimoItem.get(\"empresa\");\n                if (empresaObj != null && empresaObj instanceof Map) {\n                    Map empresaMap = (Map) empresaObj;\n                    Object empresaIDObj = empresaMap.get(\"emp_id\");\n                    if (empresaIDObj != null) {\n                        idEmpresa = empresaIDObj.toString();\n                    }\n                }\n                \n                //REVISOR\n                String idRevisor = \"-\";\n                Object revisorObj = ultimoItem.get(\"revisor\");\n                if (revisorObj != null && revisorObj instanceof Map) {\n                    Map revisorMap = (Map) revisorObj;\n                    Object revisorIDObj = revisorMap.get(\"rev_id\");\n                    if (revisorIDObj != null) {\n                        idRevisor = revisorIDObj.toString();\n                    }\n                }\n\n                Listitem item = new Listitem();\n                // Agregar los Listcell al Listitem\n                item.appendChild(new Listcell(idHDE));\n                item.appendChild(new Listcell(idEmpresa));\n                item.appendChild(new Listcell(comp_CMB_ehaEmpMant.getValue()));\n                item.appendChild(new Listcell(sdf.format(comp_DA_ehaFechaHab.getValue())));\n                item.appendChild(new Listcell(comp_TXT_ehaExpte.getValue()));\n                item.appendChild(new Listcell(sdf.format(comp_DA_ehaFechaVtoHab.getValue())));\n                item.appendChild(new Listcell(comp_CHK_ehaHabilitada.isChecked() ? \"SI\" : \"NO\")); //Empresa Habilitada ?\n                item.appendChild(new Listcell(idRevisor));\n                item.appendChild(new Listcell(comp_CMB_ehaRevisor.getValue()));\n                item.appendChild(new Listcell(comp_CHK_ehaActivo.isChecked() ? \"SI\" : \"NO\"));\n\n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n\n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                        int ind = i.getIndex();\n                        comp_GRID_habilitacionesempresas.removeItemAt(ind);\n\n                        comp_CMB_ehaEmpMant.setValue(\"-\");\n                        comp_DA_ehaFechaHab.setValue(new java.util.Date());\n                        comp_TXT_ehaExpte.setValue(\"-\");\n                        comp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: #606060\");\n                        comp_DA_ehaFechaVtoHab.setValue(new java.util.Date());\n                        comp_CHK_ehaHabilitada.setChecked(false);\n                        comp_CMB_ehaRevisor.setValue(\"-\");\n                        comp_CHK_ehaActivo.setChecked(true);\n\n                        comp_BTN_ehaEditar.setLabel(\"Editar\");\n                        comp_BTN_ehaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n\n                    }\n                });\n\n                comp_GRID_habilitacionesempresas.appendChild(item); // Se guarda en la grilla item\n\n                comp_CMB_ehaEmpMant.setValue(\"-\");\n                comp_DA_ehaFechaHab.setValue(new java.util.Date());\n                comp_TXT_ehaExpte.setValue(\"-\");\n                comp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: #606060\");\n                comp_DA_ehaFechaVtoHab.setValue(new java.util.Date());\n                comp_CHK_ehaHabilitada.setChecked(false);\n                comp_CMB_ehaRevisor.setValue(\"-\");\n                comp_CHK_ehaActivo.setChecked(true);\n\n                comp_BTN_ehaEditar.setDisabled(false);\n                comp_BTN_ehaCancelar.setDisabled(false);\n            }\n        }\n    \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API GET de HABILITACION DE EMPRESAS NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_ehaEditar','Editar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.text.SimpleDateFormat;  \nimport java.util.Date; \nimport java.util.Calendar;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_habilitacionesempresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesempresas\");\n\n//DATE\nDatebox comp_DA_ehaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaHab\");\nDatebox comp_DA_ehaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaVtoHab\");\n\n//CMB\nCombobox comp_CMB_ehaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMant\");\nCombobox comp_CMB_ehaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaRevisor\");\n\n//TXT\nTextbox comp_TXT_ehaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ehaExpte\");\n\n//CHEK\nCheckbox comp_CHK_ehaHabilitada=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaHabilitada\");\nCheckbox comp_CHK_ehaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaActivo\");\n\n//BTN\nButton comp_BTN_ehaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaAgregar\");\nButton comp_BTN_ehaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaEditar\");\nButton comp_BTN_ehaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaCancelar\");\n\n \n\n/****************************LÓGICA****************************/\n\n//DESACTOVAR COMPONENTES\ncomp_CMB_ehaEmpMant.setDisabled(true);\n\nint indice= comp_GRID_habilitacionesempresas.getSelectedIndex();\n\nif (indice == -1) {\n    \n    //Clients.showNotification(\"Por favor, seleccione el registro que desea Editar.\",true); \n    Messagebox.show(\"Por favor, seleccione el registro que desea Editar.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else {\n    \n    org.zkoss.zul.Listitem item = (org.zkoss.zul.Listitem) comp_GRID_habilitacionesempresas.getItemAtIndex(indice);\n    Listcell cel0 = (Listcell) item.getChildren().get(0);\n    Listcell cel1 = (Listcell) item.getChildren().get(1);\n    Listcell cel2 = (Listcell) item.getChildren().get(2);\n    Listcell cel3 = (Listcell) item.getChildren().get(3);\n    Listcell cel4 = (Listcell) item.getChildren().get(4);\n    Listcell cel5 = (Listcell) item.getChildren().get(5);\n    Listcell cel6 = (Listcell) item.getChildren().get(6);\n    Listcell cel7 = (Listcell) item.getChildren().get(7);\n    Listcell cel8 = (Listcell) item.getChildren().get(8);\n    Listcell cel9 = (Listcell) item.getChildren().get(9);\n        \n    \n    if (comp_BTN_ehaEditar.getLabel().equals(\"Editar\")){\n        \n        String empresaM = item.getChildren().get(2).getLabel().trim();\n        String fechaH = item.getChildren().get(3).getLabel().trim();\n        String expediente = item.getChildren().get(4).getLabel().trim();\n        String fechaV = item.getChildren().get(5).getLabel().trim();\n        String empresaH = item.getChildren().get(6).getLabel().trim();\n        String revisor = item.getChildren().get(8).getLabel().trim();\n        String activo = item.getChildren().get(9).getLabel().trim();\n        \n        //FECHA\n        // Convertir las cadenas de fecha a objetos Date\n    \tSimpleDateFormat dateFormat = new SimpleDateFormat(\"dd/MM/yyyy\");\n        Date fechaHab;\n        Date fechaVtoHab;\n        \n        fechaHab = dateFormat.parse(fechaH);\n        fechaVtoHab = dateFormat.parse(fechaV);\n        comp_DA_ehaFechaHab.setValue(fechaHab);\n        comp_DA_ehaFechaVtoHab.setValue(fechaVtoHab);\n        \n        comp_CMB_ehaEmpMant.setValue(empresaM);\n        comp_TXT_ehaExpte.setValue(expediente);\n        \n        if (empresaH.equals(\"SI\")){\n        \tcomp_CHK_ehaHabilitada.setChecked(true);\n        } else{\n            comp_CHK_ehaHabilitada.setChecked(false);\n        }\n\n        comp_CMB_ehaRevisor.setValue(revisor);\n\n        if (activo.equals(\"SI\")){\n        \tcomp_CHK_ehaActivo.setChecked(true);\n        } else{\n            comp_CHK_ehaActivo.setChecked(false);\n        }\n        \n        comp_BTN_ehaEditar.setLabel(\"Guardar Cambios\");\n        comp_BTN_ehaEditar.setStyle(\"margin-left:25px; background:#008000; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        comp_BTN_ehaAgregar.setDisabled(true);\n    \n    }else if (comp_BTN_ehaEditar.getLabel().equals(\"Guardar Cambios\")){\n        \n        //Logica para la fecha\n        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd/MM/yyyy\");\n\n        Date fechaHabilitacion = comp_DA_ehaFechaHab.getValue();\n        Date fechaVencimiento = comp_DA_ehaFechaVtoHab.getValue();\n\n\t\t//VALIDAR QUE NINGUN DATOS ESTE CON \"-\"\n        if(comp_CMB_ehaEmpMant.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n            }else if(fechaHabilitacion.equals(fechaVencimiento) || fechaVencimiento.before(fechaHabilitacion)) {\n\n            Messagebox.show(\"La Fecha Vencimiento seleccionada no es válida.\", \"Advertencia\",null,null,null);\n\n        }else if(comp_TXT_ehaExpte.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Expediente Sayges.\", \"error\", comp_TXT_ehaExpte, \"\",3100);\n            comp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: red\");\n\n        }else if(comp_CMB_ehaRevisor.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar un Revisor.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else{\n            \n            cel2.setLabel(comp_CMB_ehaEmpMant.getValue()); \n            cel2.setParent(item); \n            \n            cel3.setLabel(sdf.format(comp_DA_ehaFechaHab.getValue())); \n            cel3.setParent(item);\n            \n            cel4.setLabel(comp_TXT_ehaExpte.getValue());\n            cel4.setParent(item);\n            \n            cel5.setLabel(sdf.format(comp_DA_ehaFechaVtoHab.getValue())); \n            cel5.setParent(item);\n            \n            if(comp_CHK_ehaHabilitada.isChecked()){\n                cel6.setLabel(\"SI\");\n                cel6.setParent(item);\n            }else{\n               cel6.setLabel(\"NO\");\n               cel6.setParent(item); \n            }\n            \n            cel8.setLabel(comp_CMB_ehaRevisor.getValue());\n            cel8.setParent(item);\n\n            if(comp_CHK_ehaActivo.isChecked()){\n                \n                cel9.setLabel(\"SI\");\n                cel9.setParent(item);\n            }else{\n                cel9.setLabel(\"NO\");\n                cel9.setParent(item); \n            }\n            \n            \n        \n            //FORMATEAR FECHAS ANTES DE ENVIAR POR LA API\n            java.text.SimpleDateFormat dateFormatForPut = new java.text.SimpleDateFormat(\"yyyy-MM-dd\");\n            String fechaHab = dateFormatForPut.format(comp_DA_ehaFechaHab.getValue());\n            String fechaVen = dateFormatForPut.format(comp_DA_ehaFechaVtoHab.getValue());\n\n            \n            //ACTUALIZAR ID REVISOR\n            Comboitem selectedItemR = comp_CMB_ehaRevisor.getSelectedItem();\n            String selectedRevisor = (String) selectedItemR.getValue(); \n            int revisorID = Integer.parseInt(selectedRevisor);\n            \n            //ID HABILITACON DE EMPRESAS\n            String idHabilitacionDE = ((org.zkoss.zul.Listcell) item.getChildren().get(0)).getLabel().trim();\n            int idHDE = Integer.parseInt(idHabilitacionDE);\n            \n            try {\n                \n                java.util.List parametrosfnPutHabilitacionEmpresas = new java.util.ArrayList();\n                parametrosfnPutHabilitacionEmpresas.add(idHDE); //eha_id / int\n                parametrosfnPutHabilitacionEmpresas.add(fechaHab); //eha_fecha / String\n                parametrosfnPutHabilitacionEmpresas.add(comp_TXT_ehaExpte.getValue()); //eha_expediente / String\n                parametrosfnPutHabilitacionEmpresas.add(comp_CHK_ehaHabilitada.isChecked()); //eha_habilitada / Boolean\n                parametrosfnPutHabilitacionEmpresas.add(fechaVen); //eha_vto_hab / String\n                parametrosfnPutHabilitacionEmpresas.add(revisorID); //rev_id / int\n                parametrosfnPutHabilitacionEmpresas.add(comp_CHK_ehaActivo.isChecked()); //eha_activo / Boolean\n            \tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutHabilitacionEmpresas\",parametrosfnPutHabilitacionEmpresas);\n                \n            }catch (Exception e) {\n                Messagebox.show(\"El servicio de la API PUT de HABILITACION DE EMPRESAS NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n            }\n\n            \n            comp_CMB_ehaEmpMant.setValue(\"-\");\n            comp_DA_ehaFechaHab.setValue(new java.util.Date());\n            comp_TXT_ehaExpte.setValue(\"-\");\n            comp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: #606060\");\n            comp_DA_ehaFechaVtoHab.setValue(new java.util.Date());\n            comp_CHK_ehaHabilitada.setChecked(false);\n            comp_CMB_ehaRevisor.setValue(\"-\");\n            comp_CHK_ehaActivo.setChecked(true);\t\n            \n            comp_BTN_ehaEditar.setLabel(\"Editar\");\n            comp_BTN_ehaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n            comp_BTN_ehaAgregar.setDisabled(false);\n            \n        }\n    }   \n}\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_ehaCancelar','Cancelar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px;  background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.text.SimpleDateFormat;  \nimport java.util.Date; \nimport java.util.Calendar;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_habilitacionesempresas=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesempresas\");\n\n//DATE\nDatebox comp_DA_ehaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaHab\");\nDatebox comp_DA_ehaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaFechaVtoHab\");\n\n//CMB\nCombobox comp_CMB_ehaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMant\");\nCombobox comp_CMB_ehaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaRevisor\");\n\n//TXT\nTextbox comp_TXT_ehaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ehaExpte\");\n\n//CHEK\nCheckbox comp_CHK_ehaHabilitada=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaHabilitada\");\nCheckbox comp_CHK_ehaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_ehaActivo\");\n\n//BTN\nButton comp_BTN_ehaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaAgregar\");\nButton comp_BTN_ehaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaEditar\");\nButton comp_BTN_ehaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaCancelar\");\n\n \n\n/****************************LÓGICA****************************/\n\ncomp_CMB_ehaEmpMant.setValue(\"-\");\ncomp_CMB_ehaEmpMant.setDisabled(false);\ncomp_DA_ehaFechaHab.setValue(new java.util.Date());\ncomp_TXT_ehaExpte.setValue(\"-\");\ncomp_TXT_ehaExpte.setStyle(comp_TXT_ehaExpte.getStyle() + \"; border-color: #606060\");\ncomp_DA_ehaFechaVtoHab.setValue(new java.util.Date());\ncomp_CHK_ehaHabilitada.setChecked(false);\ncomp_CMB_ehaRevisor.setValue(\"-\");\ncomp_CHK_ehaActivo.setChecked(true);\n\ncomp_BTN_ehaEditar.setLabel(\"Editar\");\ncomp_BTN_ehaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\ncomp_BTN_ehaAgregar.setDisabled(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Grilla_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_GRID_habilitacionesempresas','',@vIdDistribucionCells,'Listbox','100','%','130','px','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','height: auto !important;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,6,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,13,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,22,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,70,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,71,'true','null','1.0') ;
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID',0,0,'-1','-',1,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Empresa',0,0,'-1','-',3,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Fecha Habilitación',0,0,'-1','-',4,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Expediente',0,0,'-1','-',5,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Fecha Vencimiento',0,0,'-1','-',6,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Habilitada (SI/NO)',0,0,'-1','-',7,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Revisor',0,0,'-1','-',9,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Activo',0,0,'-1','-',10,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID-Empresa',0,0,'-1','-',2,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID-Revisor',0,0,'-1','-',8,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_CL_HDE','Consulta y Listado de Habilitaciones de Empresas',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',14,'',8369,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8369,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_ReporteHDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_ReporteHDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaOpcReporte','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_ehaOpcReporte','',@vIdDistribucionCells,'Combobox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.Component;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport org.zkoss.zul.Paging;\n\n\nModeloComponente sup = new ModeloComponente();\n\n\n\nCombobox comp_CMB_ehaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaOpcReporte\");\nCombobox comp_CMB_ehaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMantRep\");\nDatebox comp_DA_ehaDdeFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaDdeFechaVigRep\");\nDatebox comp_DA_ehaHtaFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaHtaFechaVigRep\");\nButton comp_BTN_ehaGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_ehaGenRep\");\n\n\n\nString opciones = comp_CMB_ehaOpcReporte.getValue().toString();\n\nif(opciones.equals(\"-\")){\n    \n    comp_BTN_ehaGenRep.setDisabled(true);\n    comp_CMB_ehaEmpMantRep.setDisabled(true);\n    comp_DA_ehaDdeFechaVigRep.setDisabled(true);\n    comp_DA_ehaHtaFechaVigRep.setDisabled(true);\n    \n    comp_CMB_ehaEmpMantRep.setValue(\"-\");\n    comp_DA_ehaDdeFechaVigRep.setValue(new java.util.Date());\n    comp_DA_ehaHtaFechaVigRep.setValue(new java.util.Date());\n    \n}\n\nif(opciones.equals(\"De Empresa\")){\n\n    //CARGAR EMPRESAS Y REVISORES EN CMB\n    try {\n\n        comp_CMB_ehaEmpMantRep.getItems().clear();\n        //EMPRESA DE MANTENIMIENTO (GET)\n        java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n        Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\n        Comboitem item = new Comboitem();                \n            item.setLabel(\"-\");\n            item.setValue(\"-\");\n            item.setParent(comp_CMB_ehaEmpMantRep);\n\n        for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n\n            String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n            String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n\n            Comboitem item = new Comboitem();                \n            item.setLabel(razonS);\n            item.setValue(id);\n            item.setParent(comp_CMB_ehaEmpMantRep);\n        }\n\n    } catch (Exception e) {\n        Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    comp_BTN_ehaGenRep.setDisabled(false);\n    comp_CMB_ehaEmpMantRep.setDisabled(false);\n    comp_DA_ehaDdeFechaVigRep.setDisabled(true);\n\tcomp_DA_ehaHtaFechaVigRep.setDisabled(true);\n    \n    comp_DA_ehaDdeFechaVigRep.setValue(new java.util.Date());\n    comp_DA_ehaHtaFechaVigRep.setValue(new java.util.Date());\n\n}else if(opciones.equals(\"Desde Fecha Vigencia\")){\n    \n    comp_BTN_ehaGenRep.setDisabled(false);\n    comp_CMB_ehaEmpMantRep.setDisabled(true);\n    comp_DA_ehaDdeFechaVigRep.setDisabled(false);\n    comp_DA_ehaHtaFechaVigRep.setDisabled(true);\n    \n    comp_CMB_ehaEmpMantRep.setValue(\"-\");\n    comp_DA_ehaHtaFechaVigRep.setValue(new java.util.Date());\n    \n\n}else if(opciones.equals(\"Hasta Fecha Vigencia\")){\n    \n    comp_BTN_ehaGenRep.setDisabled(false);\n    comp_CMB_ehaEmpMantRep.setDisabled(true);\n    comp_DA_ehaDdeFechaVigRep.setDisabled(true);\n    comp_DA_ehaHtaFechaVigRep.setDisabled(false);\n    \n    comp_CMB_ehaEmpMantRep.setValue(\"-\");\n    comp_DA_ehaDdeFechaVigRep.setValue(new java.util.Date());\n    \n}\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'De Empresa','De Empresa',1,1,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Desde Fecha Vigencia','Desde Fecha Vigencia',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Hasta Fecha Vigencia','Hasta Fecha Vigencia',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaHDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_EmpresaM_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaEmpMantRep','Empresa de Mantenimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_ehaEmpMantRep','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'/*import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\n\nCombobox comp_CMB_ehaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMantRep\");\n\n//CARGAR EMPRESAS Y REVISORES EN CMB\ntry {\n\n    comp_CMB_ehaEmpMantRep.getItems().clear();\n    //EMPRESA DE MANTENIMIENTO (GET)\n    java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n    new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n    Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n    \n    Comboitem item = new Comboitem();                \n        item.setLabel(\"-\");\n        item.setValue(\"-\");\n        item.setParent(comp_CMB_ehaEmpMantRep);\n    \n    for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n\n        String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n        String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n        \n        Comboitem item = new Comboitem();                \n        item.setLabel(razonS);\n        item.setValue(id);\n        item.setParent(comp_CMB_ehaEmpMantRep);\n    }\n    \n} catch (Exception e) {\n    Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n} */','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_DesdeFechaVigencia_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaDdeFechaVigRep','Desde Fecha Vigencia:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:1px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_ehaDdeFechaVigRep','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_HastaFechaVigencia_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',4,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaHtaFechaVigRep','Hasta Fecha Vigencia:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:13px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_ehaHtaFechaVigRep','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteHDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteHDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_ehaGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nDatebox comp_DA_ehaDdeFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaDdeFechaVigRep\");\nDatebox comp_DA_ehaHtaFechaVigRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_ehaHtaFechaVigRep\");\nCombobox comp_CMB_ehaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_ehaEmpMantRep\");\n\n\nSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\nString desde = \"-\";\nString hasta = \"-\";\n\nif (!comp_DA_ehaDdeFechaVigRep.isDisabled()) {\n    desde = sdf.format(comp_DA_ehaDdeFechaVigRep.getValue());\n}\n\nif (!comp_DA_ehaHtaFechaVigRep.isDisabled()) {\n    hasta = sdf.format(comp_DA_ehaHtaFechaVigRep.getValue());\n}\n\nMap valorVariablesReportes = new java.util.HashMap();\n\nvalorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\nvalorVariablesReportes.put(\"p_fechaDesde\", desde);\nvalorVariablesReportes.put(\"p_fechaHasta\", hasta);\nvalorVariablesReportes.put(\"p_empID\", comp_CMB_ehaEmpMantRep.getSelectedItem().getValue().toString());\nvalorVariablesReportes.put(\"p_empName\", comp_CMB_ehaEmpMantRep.getValue());\n\n//Función reporte\nList parametrosfnImprimirSelReporte = new java.util.ArrayList();\nparametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\nparametrosfnImprimirSelReporte.add(\"HabilitacionDeEmpresas.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\norg.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_HDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_HDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_ehaFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_ABM_HDMDE','Altas, Bajas y Modificaciones de Habilitación de Medios de Elevación',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',15,'',8370,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8370,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_PadronI_MDE_EDM_Tec_HDMDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_PadronI_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaPadron','Padrón Inmueble:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mhaPadron','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.zkoss.json.JSONObject;\nimport org.zkoss.json.JSONArray;\nimport org.zkoss.json.JSONValue;\nimport org.zkoss.json.parser.JSONParser;\nimport org.apache.log4j.Logger;\n\nModeloComponente sup = new ModeloComponente();\n\n//TXT\nTextbox comp_TXT_mhaPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadron\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\nTextbox comp_TXT_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\n\n//CMB\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\n\n//GRILLAS\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\nListbox comp_GRID_medioselevacion=(Listbox) sup.getInstanciaComponente(\"comp_GRID_medioselevacion\");\n\n\n\n\n\n//LIMPIAR MDE\ncomp_CMB_mhaMedioElev.getItems().clear();\nComboitem defaultItem = new Comboitem(\"-\");\ndefaultItem.setParent(comp_CMB_mhaMedioElev);\ncomp_CMB_mhaMedioElev.setSelectedIndex(0);\n\n//LIMPIAR TECNICO\ncomp_CMB_mhaTecnico.getItems().clear();\nComboitem defaultItem = new Comboitem(\"-\");\ndefaultItem.setParent(comp_CMB_mhaTecnico);\ncomp_CMB_mhaTecnico.setSelectedIndex(0);\n\n//DEFAULT\ncomp_CMB_mhaEmpMant.setSelectedIndex(0);\n\n//LIMPIAR COMPONENTES\ncomp_TXT_ID_mhaEmpMant.setValue(\"-\");\ncomp_TXT_mhaEmpMant.setValue(\"-\");\ncomp_TXT_ID_mhaEmpMant_GuardarDato.setValue(\"-\");\ncomp_TXT_mhaEmpMant_GuardarDato.setValue(\"-\");\n\n//OCULTAR/MOSTRAR COMPONENTES\n//comp_TXT_ID_mhaEmpMant.setVisible(true);\n//comp_TXT_mhaEmpMant.setVisible(true);\n//comp_TXT_ID_mhaEmpMant_GuardarDato.setVisible(false);\n//comp_TXT_mhaEmpMant_GuardarDato.setVisible(false);\ncomp_CMB_mhaEmpMant.setDisabled(true);\ncomp_CMB_mhaEmpMant.setValue(\"-\");\n\n//comp_CMB_mhaEmpMant.setDisabled(true);\n\n\n\n\nString regex = \"^(0|[1-9][0-9]*)$\";\nString texto = comp_TXT_mhaPadron.getValue();\n\nif (texto.length() <= 6 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_mhaPadron.setStyle(comp_TXT_mhaPadron.getStyle() + \"; border-color: #606060\");\n    \n    \n    // Obtener el valor ingresado en el Textbox\n    String padronIngresado = comp_TXT_mhaPadron.getValue().trim();\n\n    // Bandera para saber si encontramos el padrón\n    boolean padronEncontrado = false;\n\n    // Recorrer todos los elementos de la grilla\n    for (Listitem item : comp_GRID_medioselevacion.getItems()) {\n\n        Listcell cellPadron = (Listcell) item.getChildren().get(3);\n\n        String padron = cellPadron.getLabel().trim();\n\n        if (padron.equals(padronIngresado)) {\n            // El padrón ingresado coincide con uno en la grilla\n            padronEncontrado = true;\n            // Obtener el padron como entero\n            int padronInt = Integer.parseInt(padronIngresado);\n\n            // Realizar la consulta a la base de datos para obtener los medios de elevación\n            java.util.List parametrosfnGetMediosDeElevacionPorInmueble = new java.util.ArrayList();\n            parametrosfnGetMediosDeElevacionPorInmueble.add(padronInt); //inmuebleID / int\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetMediosDeElevacionPorInmueble\",parametrosfnGetMediosDeElevacionPorInmueble);\n            String return101mdePorInmueble=(String) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return101mdePorInmueble\");\n\n            // Procesar el resultado obtenido\n            try {\n                JSONParser parser = new JSONParser();  \n                JSONObject json_raiz = (JSONObject) parser.parse(return101mdePorInmueble);\n                JSONArray json_mde = (JSONArray) json_raiz.get(\"mediosElevacion\"); \n\n                for (Object obj : json_mde) {\n                    JSONObject medioElevacion = (JSONObject) obj;\n                    String idMDE = medioElevacion.get(\"mde_id\").toString();\n\n                    JSONObject tiposMaquinas = (JSONObject) medioElevacion.get(\"tiposMaquinas\");\n                    String detalleMaquina = tiposMaquinas.get(\"tma_detalle\").toString();\n                    String ubicacion = medioElevacion.get(\"mde_ubicacion\").toString();\n                    String labelText = detalleMaquina + \" - \" + ubicacion;\n\n                    Comboitem itemCombo = new Comboitem();                \n                    itemCombo.setLabel(labelText);\n                    itemCombo.setValue(idMDE);\n                    itemCombo.setParent(comp_CMB_mhaMedioElev);\n                }\n            } catch(Exception e) {\n                // Manejar cualquier excepción que pueda ocurrir durante el procesamiento del resultado\n                e.printStackTrace();\n                java.util.logging.Logger.getLogger(\"Datos devueltos: \\n\").log(java.util.logging.Level.SEVERE, e.getMessage());\n            }\n\n            // Salir del bucle ya que encontramos el padrón\n            break;\n        }\n    }\n\n    // Si el padrón no se encontró, mostrar mensaje de error\n    if (!padronEncontrado) {\n\n        Messagebox.show(\"No se encontro un Padrón relacionado con un Medio de Elevación.\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n        comp_TXT_mhaPadron.setValue(\"-\");\n        comp_TXT_mde_IDinmueble.setValue(\"-\");\n    }\n    \n} else {\n    \n    Clients.showNotification(\"Ingrese un número de padrón válido (1 a 6 dígitos).\", \"error\", comp_TXT_mhaPadron, \"\", 3100);\n    comp_TXT_mhaPadron.setStyle(comp_TXT_mhaPadron.getStyle() + \"; border-color: red\");\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n//CONVERTIR A INT \nint padronInt = Integer.parseInt(comp_TXT_mhaPadron.getValue().trim());\n\n//MEDIOS DE ELEVACION POR INMUEBLE (GET)\njava.util.List parametrosfnGetMediosDeElevacionPorInmueble = new java.util.ArrayList();\nparametrosfnGetMediosDeElevacionPorInmueble.add(padronInt); //inmuebleID / int\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetMediosDeElevacionPorInmueble\",parametrosfnGetMediosDeElevacionPorInmueble);\nString return101mdePorInmueble=(String) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return101mdePorInmueble\");\n\n\n\ntry{\n    \n    JSONParser parser = new JSONParser();  \n    JSONObject json_raiz = (JSONObject) parser.parse(return101mdePorInmueble);\n    JSONArray json_mde = (JSONArray) json_raiz.get(\"mediosElevacion\"); \n    \n    for (Object obj : json_mde) {\n        \n        JSONObject medioElevacion = (JSONObject) obj;\n        \n        String idMDE = medioElevacion.get(\"mde_id\").toString();\n        \n    \tJSONObject tiposMaquinas = (JSONObject) medioElevacion.get(\"tiposMaquinas\");\n        \n        String detalleMaquina = tiposMaquinas.get(\"tma_detalle\").toString();\n        String ubicacion = medioElevacion.get(\"mde_ubicacion\").toString();\n        String labelText = detalleMaquina + \" - \" + ubicacion;\n        \n        Comboitem item = new Comboitem();                \n        item.setLabel(labelText);\n        item.setValue(idMDE);\n        item.setParent(comp_CMB_mhaMedioElev);\n        \n\t}\n    \n}catch(Exception e){\n    \n    java.util.logging.Logger.getLogger(\"Datos devuelto: \\n\").log(java.util.logging.Level.SEVERE, e.getMessage());\n}*/','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_ubicacionPadron_Oculto','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',3,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'false','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_MDE_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaMedioElev','Medios de Elevación:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaMedioElev','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.zkoss.json.JSONObject;\nimport org.zkoss.json.JSONArray;\nimport org.zkoss.json.JSONValue;\nimport org.zkoss.json.parser.JSONParser;\nimport org.apache.log4j.Logger;\n\nModeloComponente sup = new ModeloComponente();\n\n//TXT\nTextbox comp_TXT_mhaPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadron\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nLabel comp_LA_mhaEmpMant=(Label) sup.getInstanciaComponente(\"comp_LA_mhaEmpMant\");\nTextbox comp_TXT_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant\"); \nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\n\n//CMB\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\n\n//GRILLAS\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\nListbox comp_GRID_medioselevacion=(Listbox) sup.getInstanciaComponente(\"comp_GRID_medioselevacion\");\n\n\n\n\n\n//LIMPIAR TECNICO\ncomp_CMB_mhaTecnico.getItems().clear();\nComboitem defaultItem = new Comboitem(\"-\");\ndefaultItem.setParent(comp_CMB_mhaTecnico);\ncomp_CMB_mhaTecnico.setSelectedIndex(0);\n\n//LIMPIAR/OCULTAR \ncomp_TXT_ID_mhaEmpMant.setValue(\"-\");\ncomp_TXT_mhaEmpMant.setValue(\"-\");\ncomp_TXT_ID_mhaEmpMant_GuardarDato.setValue(\"-\");\ncomp_TXT_mhaEmpMant_GuardarDato.setValue(\"-\");\ncomp_CMB_mhaEmpMant.setValue(\"-\");\n\n\n//SELECCIONAR UN MEDIO DE ELEVACIÓN\nComboitem selectedItem = comp_CMB_mhaMedioElev.getSelectedItem();\nString selectedEmpId = (String) selectedItem.getValue();\nint mdeID = Integer.parseInt(selectedEmpId);\n\n\n//MEDIO ELEVACION POR ID (GET)\njava.util.List parametrosfnGetMediosDeElevacionPorID = new java.util.ArrayList();\n    parametrosfnGetMediosDeElevacionPorID.add(mdeID); //mde_id / int\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetMediosDeElevacionPorID\",parametrosfnGetMediosDeElevacionPorID);\nString return105datos_mde=(String) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return105datos_mde\");\n\ntry {\n    \n    JSONParser parser = new JSONParser();\n    JSONObject json_raiz = (JSONObject) parser.parse(return105datos_mde);\n    \n    JSONObject json_hmde = (JSONObject) json_raiz.get(\"medioElevacion\");\n    \n    if (json_hmde != null) {\n        \n        //comp_CMB_mhaEmpMant.setDisabled(true);\n        \n        String mdeId = json_hmde.get(\"mde_id\").toString();\n        String mdeUbicacion = json_hmde.get(\"mde_ubicacion\").toString();\n        \n        JSONObject empresa = (JSONObject) json_hmde.get(\"empresa\");\n        \n        if (empresa != null) {\n            \n            comp_CMB_mhaEmpMant.setDisabled(true);\n            \n            String empId = empresa.get(\"emp_id\").toString();\n            String empRazon = empresa.get(\"emp_razon\").toString();\n            \n            comp_TXT_mhaEmpMant.setValue(empRazon);\n            comp_TXT_ID_mhaEmpMant.setValue(empId);\n            \n            //PERSONAS\n            JSONArray personasArray = (JSONArray) empresa.get(\"personas\");\n            for (Object obj : personasArray) {\n                \n                JSONObject persona = (JSONObject) obj;\n                String perId = persona.get(\"per_id\").toString();\n                String per_apellido = persona.get(\"per_apellido\").toString();\n\n                // Agregar cada persona al ComboBox\n                Comboitem item = new Comboitem();\n                item.setLabel(per_apellido);\n                item.setValue(perId);\n                item.setParent(comp_CMB_mhaTecnico);\n            }\n        \n        }else {\n            // Si la empresa es null, establecer los valores correspondientes\n            comp_TXT_mhaEmpMant.setValue(\"No tiene Empresa\");\n            comp_TXT_ID_mhaEmpMant.setValue(\"-\");\n            comp_CMB_mhaEmpMant.setDisabled(false);\n            \n        }\n    }\n    else {\n        //System.out.println(\"No se encontró el medio de elevación con el ID proporcionado.\");\n    }\n} catch (Exception e) {\n    java.util.logging.Logger.getLogger(\"Boton: \\n\").log(java.util.logging.Level.SEVERE, e.getMessage());\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t/*JSONParser parser = new JSONParser();  \n    JSONObject json_raiz = (JSONObject) parser.parse(return98datos);\n\n    JSONObject json_hmde = (JSONObject) json_raiz.get(\"medioElevacion\"); \n    \n    String id_Empresa = json_hmde.get(\"emp_id\").toString();\n\tString nombreEmpresa = json_hmde.get(\"emp_razon\").toString();*/\n\n//comp_TXT_mhaEmpMant.setValue(ubicacion);\n//comp_TXT_ID_mhaEmpMant.setValue(idMDE);\n\n/*\n// Obtener selección de empresa\nComboitem selectedItem = comp_CMB_mhaMedioElev.getSelectedItem();\nString selectedEmpId = (String) selectedItem.getValue();\nint empresaID = Integer.parseInt(selectedEmpId);\n\ncomp_CMB_mhaTecnico.getItems().clear();\nComboitem defaultItem = new Comboitem(\"-\");\ndefaultItem.setParent(comp_CMB_mhaTecnico);\n\n\n//Messagebox.show(selectedEmpId);\n\njava.util.List parametrosfnGetPersonasPorEmpresa = new java.util.ArrayList();\nparametrosfnGetPersonasPorEmpresa.add(empresaID); //empresaID / int\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPersonasPorEmpresa\",parametrosfnGetPersonasPorEmpresa);\nString return99datosPersonasEmpresa=(String) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return99datosPersonasEmpresa\");\n\n\ntry{\n    \n    JSONParser parser = new JSONParser();  \n    JSONObject json_raiz = (JSONObject) parser.parse(return99datosPersonasEmpresa);\n\n    JSONObject json_hmde = (JSONObject) json_raiz.get(\"personasEmpresa\"); \n    \n    String id_Empresa = json_hmde.get(\"emp_id\").toString();\n\tString nombreEmpresa = json_hmde.get(\"emp_razon\").toString();\n    \n    if(!id_Empresa.equals(\"-\") && !nombreEmpresa.equals(\"-\")){\n        comp_TXT_mhaEmpMant.setValue(nombreEmpresa);\n        comp_TXT_ID_mhaEmpMant.setValue(id_Empresa);\n    }else{\n        comp_TXT_mhaEmpMant.setValue(\"No tiene Empresa\");\n        comp_TXT_ID_mhaEmpMant.setValue(\"-\");\n    }\n    \n    JSONArray personasArray = (JSONArray) json_hmde.get(\"personas\");\n    \n    for (Object obj : personasArray) {\n        \n        JSONObject personasEmpresa = (JSONObject) obj;\n        \n        String idPersona = personasEmpresa.get(\"per_id\").toString();\n        String apellido = personasEmpresa.get(\"per_nombre\").toString();\n        \n        \n        Comboitem item = new Comboitem();                \n        item.setLabel(apellido);\n        item.setValue(idPersona); \n        item.setParent(comp_CMB_mhaTecnico);\n        \n    }\n    \n}catch(Exception e){\n    java.util.logging.Logger.getLogger(\"Boton: \\n\").log(java.util.logging.Level.SEVERE, e.getMessage());\n}\n*/\n\n\n\n\n\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_EM_HDMDE_prueba',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mhaEmpMant','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',1,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_ID_mhaEmpMant','',@vIdDistribucionCells,'Textbox','50','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',2,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaEmpMant','Empresas:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',5,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaEmpMant','',@vIdDistribucionCells,'Combobox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',6,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.zkoss.json.JSONObject;\nimport org.zkoss.json.JSONArray;\nimport org.zkoss.json.JSONValue;\nimport org.zkoss.json.parser.JSONParser;\nimport org.apache.log4j.Logger;\n\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_habilitacionesmedios=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesmedios\");\n\n//CMB\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\nCombobox comp_CMB_mhaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaRevisor\");\n\n//TXT\nTextbox comp_TXT_mhaPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadron\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant\");\nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaExpte\");\n\n//DATEBOX\nDatebox comp_DA_mhaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaHab\");\nDatebox comp_DA_mhaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaVtoHab\");\nDatebox comp_DA_mhaFechaPago=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaPago\");\nDatebox comp_DA_mhaFechaInspec=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaInspec\");\n\n//CHEK\nCheckbox comp_CHK_mhaHabilitado=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaHabilitado\");\nCheckbox comp_CHK_mhaObleaEntreg=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaObleaEntreg\");\nCheckbox comp_CHK_mhaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaActivo\");\n\n//BTN\nButton comp_BTN_mhaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaAgregar\");\nButton comp_BTN_mhaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaEditar\");\nButton comp_BTN_mhaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaCancelar\");\n\n \n//LIMPIAR TECNICO\ncomp_CMB_mhaTecnico.getItems().clear();\nComboitem defaultItem = new Comboitem(\"-\");\ndefaultItem.setParent(comp_CMB_mhaTecnico);\ncomp_CMB_mhaTecnico.setSelectedIndex(0);\n/****************************LÓGICA****************************/\n\n\n\nComboitem selectedItem = comp_CMB_mhaEmpMant.getSelectedItem();\nif (selectedItem != null) {\n    String selectedValue = (String) selectedItem.getValue();\n    \n    if (\"-\".equals(selectedValue)) {\n        \n        // Restablecer los valores iniciales si se selecciona el guion\n        comp_TXT_mhaEmpMant.setVisible(true);\n        comp_TXT_ID_mhaEmpMant.setVisible(true);\n        \n        \n        comp_TXT_mhaEmpMant_GuardarDato.setVisible(false);\n        comp_TXT_ID_mhaEmpMant_GuardarDato.setVisible(false);\n        \n        comp_TXT_mhaEmpMant_GuardarDato.setValue(\"-\");\n        comp_TXT_ID_mhaEmpMant_GuardarDato.setValue(\"-\");\n        \n        //LIMPIAR EMPRESAS DE MANTENIMIENTO\n        comp_CMB_mhaTecnico.getItems().clear();\n        Comboitem defaultItem = new Comboitem(\"-\");\n        defaultItem.setParent(comp_CMB_mhaTecnico);\n\n    } else {\n        \n        \n        // Actualizar los campos con los datos de la empresa seleccionada\n        String selectedEmpRazon = selectedItem.getLabel();\n        \n        //EMPRESAS POR PERSONAS (GET)\n        int empresaID = Integer.parseInt(selectedValue);\n        \n        java.util.List parametrosfnGetPersonasPorEmpresa = new java.util.ArrayList();\n        parametrosfnGetPersonasPorEmpresa.add(empresaID); //empresaID / int\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetPersonasPorEmpresa\",parametrosfnGetPersonasPorEmpresa);\n        String return99datosPersonasEmpresa=(String) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return99datosPersonasEmpresa\");\n        \n        try{\n    \n            JSONParser parser = new JSONParser();  \n            JSONObject json_raiz = (JSONObject) parser.parse(return99datosPersonasEmpresa);\n\n            JSONObject json_hmde = (JSONObject) json_raiz.get(\"personasEmpresa\"); \n            \n            JSONArray personasArray = (JSONArray) json_hmde.get(\"personas\");\n    \n            for (Object obj : personasArray) {\n\n                JSONObject personasEmpresa = (JSONObject) obj;\n\n                String idPersona = personasEmpresa.get(\"per_id\").toString();\n                String apellido = personasEmpresa.get(\"per_nombre\").toString();\n\n\n                Comboitem item = new Comboitem();                \n                item.setLabel(apellido);\n                item.setValue(idPersona); \n                item.setParent(comp_CMB_mhaTecnico);\n\n            }\n            \n        }catch(Exception e){\n            \n            java.util.logging.Logger.getLogger(\"Boton: \\n\").log(java.util.logging.Level.SEVERE, e.getMessage());\n        }\n        \n        ////Ocultar \n        //comp_TXT_ID_mhaEmpMant.setVisible(false);\n        //comp_TXT_mhaEmpMant.setVisible(false);\n        \n        ////Mostrar\n        //comp_TXT_mhaEmpMant_GuardarDato.setVisible(true);\n        //comp_TXT_ID_mhaEmpMant_GuardarDato.setVisible(true);\n\n        comp_TXT_mhaEmpMant_GuardarDato.setValue(selectedEmpRazon);\n        comp_TXT_ID_mhaEmpMant_GuardarDato.setValue(selectedValue);\n        \n    }\n}\n    \n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mhaEmpMant_GuardarDato','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',3,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_ID_mhaEmpMant_GuardarDato','',@vIdDistribucionCells,'Textbox','50','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',4,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Tecnico_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',5,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaTecnico','Técnico:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaTecnico','',@vIdDistribucionCells,'Combobox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_EM_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',4,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_FH_ES_FV_HDMDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_FechaH_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaFechaHab','Fecha Habilitación:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_mhaFechaHab','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty;','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_ExpedienteS_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaExpte','Expediente Sayges:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:14px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mhaExpte','',@vIdDistribucionCells,'Textbox','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_mhaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaExpte\");\n\nString regex = \"^[0-9a-zA-ZáéíóúÁÉÍÓÚñÑ\\s-]+$\";\nString texto = comp_TXT_mhaExpte.getValue();\n\n\nif (texto.length() <= 20 && texto.matches(regex) && !texto.equals(\"-\")) {\n\n    comp_TXT_mhaExpte.setStyle(comp_TXT_mhaExpte.getStyle() + \"; border-color: #606060\");\n    \n} else {\n\n    Clients.showNotification(\"Ingrese un expediente válido.\", \"error\", comp_TXT_mhaExpte, \"\", 3100);\n    comp_TXT_mhaExpte.setStyle(comp_TXT_mhaExpte.getStyle() + \"; border-color: red\");\n    comp_TXT_mhaExpte.setValue(\"-\");\n    \n}\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_FechaV_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaFechaVtoHab','Fecha Vencimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_mhaFechaVtoHab','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty;','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Pago_Inpecc_MH_OE_Rev_HDMDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Pago_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaFechaPago','Fecha Pago:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_mhaFechaPago','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty;','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_FechaI_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaFechaInspec','Fecha Inspección:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:14px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_mhaFechaInspec','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty;','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_MedioH_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaHabilitado','Medio Habilitado:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:14px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_mhaHabilitado','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_ObleaE_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaObleaEntreg','¿Oblea entregada?',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_mhaObleaEntreg','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_RevisorA_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaRevisor','Revisor Autorizó:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaRevisor','',@vIdDistribucionCells,'Combobox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'revisor1','revisor1',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'revisor2','revisor2',0,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_HDMDE_Activo',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_HDMDE_Activo',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaActivo','Activo:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CHK_mhaActivo','',@vIdDistribucionCells,'Checkbox','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,14,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,21,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,88,'','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Grilla_HDMDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px; margin-bottom: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones_Grilla_HDMDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mhaAgregar','Agregar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.text.SimpleDateFormat;  \nimport java.util.Date; \nimport java.util.Calendar;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_habilitacionesmedios=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesmedios\");\n\n//CMB\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\nCombobox comp_CMB_mhaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaRevisor\");\n\n//TXT\nTextbox comp_TXT_mhaPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadron\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\nTextbox comp_TXT_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant\");\nTextbox comp_TXT_mhaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaExpte\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\n\n//DATEBOX\nDatebox comp_DA_mhaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaHab\");\nDatebox comp_DA_mhaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaVtoHab\");\nDatebox comp_DA_mhaFechaPago=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaPago\");\nDatebox comp_DA_mhaFechaInspec=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaInspec\");\n\n//CHEK\nCheckbox comp_CHK_mhaHabilitado=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaHabilitado\");\nCheckbox comp_CHK_mhaObleaEntreg=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaObleaEntreg\");\nCheckbox comp_CHK_mhaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaActivo\");\n\n//BTN\nButton comp_BTN_mhaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaAgregar\");\nButton comp_BTN_mhaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaEditar\");\nButton comp_BTN_mhaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaCancelar\");\n\n \n\n/****************************LÓGICA****************************/\n\n//Logica para la fecha\njava.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd/MM/yyyy\", new Locale(\"es\", \"ES\"));\n\nDate fechaHabilitacion = comp_DA_mhaFechaHab.getValue();\nDate fechaVencimiento = comp_DA_mhaFechaVtoHab.getValue();\n\n\n\nif(comp_TXT_mhaPadron.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Padrón.\", \"error\", comp_TXT_mhaPadron, \"\",3100);\n    comp_TXT_mhaPadron.setStyle(comp_TXT_mhaPadron.getStyle() + \"; border-color: red\");    \n\n}else if(comp_CMB_mhaMedioElev.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un Medio de Elevación.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n}else if(comp_TXT_mhaEmpMant.getValue().equals(\"No tiene Empresa\") && comp_CMB_mhaEmpMant.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else if(comp_CMB_mhaTecnico.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un Técnico\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else if(fechaHabilitacion.equals(fechaVencimiento) || fechaVencimiento.before(fechaHabilitacion)) {\n    \n    //Messagebox.show(\"La Fecha Vencimiento seleccionada no es válida.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    Clients.showNotification(\"La Fecha Vencimiento seleccionada no es válida.\", \"error\", comp_DA_mhaFechaVtoHab, \"\", 3100);\n    comp_DA_mhaFechaVtoHab.setStyle(comp_DA_mhaFechaVtoHab.getStyle() + \"; border-color: red;\");\n    \n}else if(comp_TXT_mhaExpte.getValue().equals(\"-\")){\n    \n    Clients.showNotification(\"Debe ingresar un Expediente Sayges.\", \"error\", comp_TXT_mhaExpte, \"\",3100);\n    comp_TXT_mhaExpte.setStyle(comp_TXT_mhaExpte.getStyle() + \"; border-color: red\");\n    \n}else if(comp_CMB_mhaRevisor.getValue().equals(\"-\")){\n    \n    Messagebox.show(\"Debe seleccionar un Revisor.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else{\n        \n    //FORMATEAR FECHAS ANTES DE ENVIAR POR LA API\n    // Definir el formato de fecha deseado para la API\n    SimpleDateFormat apiDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n    \n    // Obtener fechas desde los componentes `Datebox`\n    Date fecha_Hab = comp_DA_mhaFechaHab.getValue();\n    Date fecha_Vto = comp_DA_mhaFechaVtoHab.getValue();\n    Date fecha_Pago = comp_DA_mhaFechaPago.getValue();\n\tDate fecha_Inspeccion = comp_DA_mhaFechaInspec.getValue();\n    \n    // Convertir fechas a cadenas usando el formato \"yyyy-MM-dd\"\n    String fecha_H = (fecha_Hab != null) ? apiDateFormat.format(fecha_Hab) : null;\n    String fecha_V = (fecha_Vto != null) ? apiDateFormat.format(fecha_Vto) : null;\n    String fecha_P = (fecha_Pago != null) ? apiDateFormat.format(fecha_Pago) : null;\n    String fecha_I = (fecha_Inspeccion != null) ? apiDateFormat.format(fecha_Inspeccion) : null;\n    \n    \n    //CONVERTIR PADRON A INT\n    int padron = Integer.parseInt(comp_TXT_mhaPadron.getValue().trim());\n    \n    //OBTENER EL ID DEL MEDIO DE ELEVACION\n    Comboitem selectedItemMDE = comp_CMB_mhaMedioElev.getSelectedItem();\n\tString selectedPIdMDE = (String) selectedItemMDE.getValue(); // Obtener el id seleccionado como cadena \n    int id_mde = Integer.parseInt(selectedPIdMDE);\n \n    \n    // Obtener los valores de los componentes\n    String idEmpresaTexto = comp_TXT_ID_mhaEmpMant.getValue().trim();\n    String nombreEmpresaTexto = comp_TXT_mhaEmpMant.getValue().trim();\n    String idEmpresaGuardarTexto = comp_TXT_ID_mhaEmpMant_GuardarDato.getValue().trim();\n    String nombreEmpresaGuardarTexto = comp_TXT_mhaEmpMant_GuardarDato.getValue().trim();\n\n    int id_empresa;\n    String empresaNombre;\n    \n    // Realizar la validación\n    if (!nombreEmpresaTexto.equals(\"No tiene Empresa\") && !idEmpresaTexto.equals(\"-\") && idEmpresaGuardarTexto.equals(\"-\") && nombreEmpresaGuardarTexto.equals(\"-\")) {\n        // Convertir el valor de idEmpresaTexto a entero y usarlo\n        id_empresa = Integer.parseInt(idEmpresaTexto);\n        empresaNombre = nombreEmpresaTexto;\n        \n    } else if (nombreEmpresaTexto.equals(\"No tiene Empresa\") && idEmpresaTexto.equals(\"-\") && !idEmpresaGuardarTexto.equals(\"-\") && !nombreEmpresaGuardarTexto.equals(\"-\")) {\n        \n        Comboitem selectedItemEM = comp_CMB_mhaEmpMant.getSelectedItem();\n        String selectedPIdEM = (String) selectedItemEM.getValue(); // Obtener el ID seleccionado como cadena\n        id_empresa = Integer.parseInt(selectedPIdEM); // Convertir el ID a entero\n        \n        empresaNombre = nombreEmpresaGuardarTexto;\n    }\n    \n    //OBTENER EL ID DEL TECNICO/PERSONA\n    Comboitem selectedItemP = comp_CMB_mhaTecnico.getSelectedItem();\n\tString selectedPId = (String) selectedItemP.getValue(); // Obtener el id seleccionado como cadena \n    int id_persona = Integer.parseInt(selectedPId);\n    \n    //OBTENER EL ID DEL REVISOR\n    Comboitem selectedItemR = comp_CMB_mhaRevisor.getSelectedItem();\n\tString selectedRId = (String) selectedItemR.getValue(); // Obtener el id seleccionado como cadena \n    int id_revisor = Integer.parseInt(selectedRId);\n    \n    try {\n        \n        //HABILITACION DE MEDIOS DE ELEVACION (POST)\n        java.util.List parametrosfnPostHabilitacionMDE = new java.util.ArrayList();\n        parametrosfnPostHabilitacionMDE.add(padron); //mha_inm_padron_guardado / int\n        parametrosfnPostHabilitacionMDE.add(id_mde); //mde_id / int\n        parametrosfnPostHabilitacionMDE.add(id_empresa); //emp_id / int\n        parametrosfnPostHabilitacionMDE.add(id_persona); //per_id / int\n        parametrosfnPostHabilitacionMDE.add(fecha_H); //mha_fecha / String\n        parametrosfnPostHabilitacionMDE.add(comp_TXT_mhaExpte.getValue().trim()); //mha_expediente / String\n        parametrosfnPostHabilitacionMDE.add(fecha_V); //mha_fecha_vto / String\n        parametrosfnPostHabilitacionMDE.add(fecha_P); //mha_fecha_pago / String\n        parametrosfnPostHabilitacionMDE.add(fecha_I); //mha_fecha_inspec / String\n        parametrosfnPostHabilitacionMDE.add(comp_CHK_mhaHabilitado.isChecked()); //mha_habilitado / Boolean\n        parametrosfnPostHabilitacionMDE.add(comp_CHK_mhaObleaEntreg.isChecked()); //mha_oblea_entregada / Boolean\n        parametrosfnPostHabilitacionMDE.add(id_revisor); //rev_id / int\n        parametrosfnPostHabilitacionMDE.add(comp_CHK_mhaActivo.isChecked()); //mha_activo / Boolean\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPostHabilitacionMDE\",parametrosfnPostHabilitacionMDE);\n        \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de HABILITACION DE HABILITACION DE MEDIOS DE ELEVACION NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n    \n    try {\n        \n        java.util.List parametrosfnGetHabilitacionMDE = new java.util.ArrayList();\n        new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetHabilitacionMDE\",parametrosfnGetHabilitacionMDE);\n        Map return103map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return103map\");\n        \n        if (return103map.containsKey(\"habilitacionMDE\")) {\n            \n            List habilitacionMDE = (List) return103map.get(\"habilitacionMDE\");\n        \tint size = habilitacionMDE.size();\n            \n            if (size > 0) {\n                \n                // Obtener el último elemento de la lista\n                Map ultimoItem = (Map) habilitacionMDE.get(size - 1);\n                \n                String idHMDE = \"-\";\n                \n                if (ultimoItem.containsKey(\"mha_id\")) {\n                    \n                    idHMDE = ultimoItem.get(\"mha_id\").toString();\n                }\n                \n                \n                //MDE\n                String id_MDE = \"-\";\n                Object mde_Obj = ultimoItem.get(\"medioElevacion\");\n                if (mde_Obj != null && mde_Obj instanceof Map) {\n                    \n                    Map mde_Map = (Map) mde_Obj;\n                    Object empresaIDObj = mde_Map.get(\"mde_id\");\n                    \n                    if (empresaIDObj != null) {\n                        id_MDE = empresaIDObj.toString();\n                    }\n                }\n                \n                \n                /*TECNICO\n                String id_Persona = \"-\";\n                Object persona_Obj = ultimoItem.get(\"persona\");\n                if (persona_Obj != null && persona_Obj instanceof Map) {\n                    Map persona_Map = (Map) persona_Obj;\n                    Object personaIDObj = persona_Map.get(\"per_id\");\n                    if (personaIDObj != null) {\n                        id_Persona = personaIDObj.toString();\n                    }\n                }*/\n                \n                \n                /*REVISOR\n                String idRevisor = \"-\";\n                Object revisorObj = ultimoItem.get(\"revisor\");\n                if (revisorObj != null && revisorObj instanceof Map) {\n                    Map revisorMap = (Map) revisorObj;\n                    Object revisorIDObj = revisorMap.get(\"rev_id\");\n                    if (revisorIDObj != null) {\n                        idRevisor = revisorIDObj.toString();\n                    }\n                }*/\n                \n                \n                \n                Listitem item = new Listitem();\n        \n                // Agregar los Listcell al Listitem\n                item.appendChild(new Listcell(idHMDE));\n                item.appendChild(new Listcell(comp_TXT_mhaPadron.getValue()));\n                //item.appendChild(new Listcell(id_MDE));\n                //item.appendChild(new Listcell(id_Tmaquina));\n                item.appendChild(new Listcell(comp_CMB_mhaMedioElev.getValue()));\n                item.appendChild(new Listcell(String.valueOf(id_empresa)));\n                item.appendChild(new Listcell(empresaNombre));\n                //item.appendChild(new Listcell(id_Persona));\n                item.appendChild(new Listcell(comp_CMB_mhaTecnico.getValue()));\n                item.appendChild(new Listcell(sdf.format(comp_DA_mhaFechaHab.getValue())));\n                item.appendChild(new Listcell(comp_TXT_mhaExpte.getValue()));\n                item.appendChild(new Listcell(sdf.format(comp_DA_mhaFechaVtoHab.getValue())));\n                item.appendChild(new Listcell(sdf.format(comp_DA_mhaFechaPago.getValue())));\n                item.appendChild(new Listcell(sdf.format(comp_DA_mhaFechaInspec.getValue())));\n                item.appendChild(new Listcell(comp_CHK_mhaHabilitado.isChecked() ? \"SI\" : \"NO\")); //MDE habilitado ?\n                item.appendChild(new Listcell(comp_CHK_mhaObleaEntreg.isChecked() ? \"SI\" : \"NO\")); //Oblea ?\n                //item.appendChild(new Listcell(idRevisor));\n                item.appendChild(new Listcell(comp_CMB_mhaRevisor.getValue()));\n                item.appendChild(new Listcell(comp_CHK_mhaActivo.isChecked() ? \"SI\" : \"NO\")); //Activo ?\n                \n                \n                Toolbarbutton desv = new Toolbarbutton();\n                desv.setAttribute(\"item\", item);\n                Listcell reg1 = new Listcell();\n                reg1.setStyle(\"text-align:center;\");\n                reg1.setParent(item);\n                desv.setParent(reg1);\n                desv.setStyle(\"color:red; font-weight: bold; background-color: white;\");\n                desv.setLabel(\"Borrar\");\n                desv.setWidth(\"80px\");\n                desv.addEventListener(\"onClick\", new org.zkoss.zk.ui.event.EventListener() {\n                    public void onEvent(org.zkoss.zk.ui.event.Event event) throws Exception {\n\n                        final Toolbarbutton borrar = (Toolbarbutton) event.getTarget();\n                        Listitem i = (Listitem) borrar.getAttribute(\"item\");\n                        int ind = i.getIndex();\n                        comp_GRID_habilitacionesmedios.removeItemAt(ind);\n\n                        comp_CMB_mhaRevisor.setValue(\"-\");\n                        comp_TXT_mhaExpte.setValue(\"-\");\n                        comp_DA_mhaFechaHab.setValue(new java.util.Date());\n                        comp_DA_mhaFechaVtoHab.setValue(new java.util.Date());\n                        comp_CHK_mhaHabilitado.setChecked(false);\n                        comp_CHK_mhaActivo.setChecked(true);\n\n                        comp_BTN_mhaEditar.setLabel(\"Editar\");\n                        comp_BTN_mhaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n\n                    }\n                });\n\n                comp_GRID_habilitacionesmedios.appendChild(item); // Se guarda en la grilla item\n\n                comp_TXT_mhaPadron.setValue(\"-\");\n                comp_TXT_mhaPadron.setStyle(comp_TXT_mhaPadron.getStyle() + \"; border-color: #606060\");\n                comp_CMB_mhaMedioElev.setValue(\"-\");\n                comp_TXT_ID_mhaEmpMant.setValue(\"-\");\n                comp_TXT_mhaEmpMant.setValue(\"-\");\n                comp_TXT_ID_mhaEmpMant_GuardarDato.setValue(\"-\");\n                comp_TXT_mhaEmpMant_GuardarDato.setValue(\"-\");\n                comp_TXT_mhaEmpMant.setValue(\"-\");\n                comp_CMB_mhaEmpMant.setValue(\"-\");\n                comp_CMB_mhaTecnico.setValue(\"-\");\n                comp_DA_mhaFechaHab.setValue(new java.util.Date());\n                comp_TXT_mhaExpte.setValue(\"-\");\n                comp_TXT_mhaExpte.setStyle(comp_TXT_mhaExpte.getStyle() + \"; border-color: #606060\");\n                comp_DA_mhaFechaVtoHab.setValue(new java.util.Date());\n                comp_DA_mhaFechaPago.setValue(new java.util.Date());\n                comp_DA_mhaFechaInspec.setValue(new java.util.Date());\n                comp_CHK_mhaHabilitado.setChecked(false);\n                comp_CHK_mhaObleaEntreg.setChecked(false);\n                comp_CMB_mhaRevisor.setValue(\"-\");\n                comp_CHK_mhaActivo.setChecked(true);\n\n                comp_BTN_mhaEditar.setDisabled(false);\n                comp_BTN_mhaCancelar.setDisabled(false); \n                \n            }\n        }\n\n    \n    }catch (Exception e) {\n        Messagebox.show(\"El servicio de la API POST de HABILITACION DE EMPRESAS NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mhaEditar','Editar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zul.Rows;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.zkoss.json.JSONObject;\nimport org.zkoss.json.JSONArray;\nimport org.zkoss.json.JSONValue;\nimport org.zkoss.json.parser.JSONParser;\nimport org.apache.log4j.Logger;\nimport java.text.SimpleDateFormat;  \nimport java.util.Date; \nimport java.util.Calendar;\nimport org.zkoss.zk.ui.event.Events;\nimport org.zkoss.zk.ui.event.Event;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_habilitacionesmedios=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesmedios\");\n\n//CMB\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\nCombobox comp_CMB_mhaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaRevisor\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\n\n//TXT\nTextbox comp_TXT_mhaPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadron\");\nTextbox comp_TXT_mhaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaExpte\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\nTextbox comp_TXT_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\n\n//DATEBOX\nDatebox comp_DA_mhaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaHab\");\nDatebox comp_DA_mhaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaVtoHab\");\nDatebox comp_DA_mhaFechaPago=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaPago\");\nDatebox comp_DA_mhaFechaInspec=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaInspec\");\n\n//CHEK\nCheckbox comp_CHK_mhaHabilitado=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaHabilitado\");\nCheckbox comp_CHK_mhaObleaEntreg=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaObleaEntreg\");\nCheckbox comp_CHK_mhaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaActivo\");\n\n//BTN\nButton comp_BTN_mhaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaAgregar\");\nButton comp_BTN_mhaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaEditar\");\nButton comp_BTN_mhaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaCancelar\");\n\n \n\n/****************************LÓGICA****************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nint indice= comp_GRID_habilitacionesmedios.getSelectedIndex();\n\nif (indice == -1) {\n    \n    //Clients.showNotification(\"Por favor, seleccione el registro que desea Editar.\",true); \n    Messagebox.show(\"Por favor, seleccione el registro que desea Editar.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n    \n}else {\n    \n    org.zkoss.zul.Listitem item = (org.zkoss.zul.Listitem) comp_GRID_habilitacionesmedios.getItemAtIndex(indice);\n    Listcell cel0 = (Listcell) item.getChildren().get(0);\n    Listcell cel1 = (Listcell) item.getChildren().get(1);\n    Listcell cel2 = (Listcell) item.getChildren().get(2);\n    Listcell cel3 = (Listcell) item.getChildren().get(3);\n    Listcell cel4 = (Listcell) item.getChildren().get(4);\n    Listcell cel5 = (Listcell) item.getChildren().get(5);\n    Listcell cel6 = (Listcell) item.getChildren().get(6);\n    Listcell cel7 = (Listcell) item.getChildren().get(7);\n    Listcell cel8 = (Listcell) item.getChildren().get(8);\n    Listcell cel9 = (Listcell) item.getChildren().get(9);\n    Listcell cel10 = (Listcell) item.getChildren().get(10);\n    Listcell cel11 = (Listcell) item.getChildren().get(11);\n    Listcell cel12 = (Listcell) item.getChildren().get(12);\n    Listcell cel13 = (Listcell) item.getChildren().get(13);\n    Listcell cel14 = (Listcell) item.getChildren().get(14);\n    \n    if (comp_BTN_mhaEditar.getLabel().equals(\"Editar\")){\n        \n        //String mha_id = item.getChildren().get(0).getLabel().trim(); \n        String mha_inm_padron_guardado = item.getChildren().get(1).getLabel().trim();\n        String mde_ubi_maq = item.getChildren().get(2).getLabel().trim();\n        String emp_id = item.getChildren().get(3).getLabel().trim();\n        String emp_razon = item.getChildren().get(4).getLabel().trim();\n        String per_apellido = item.getChildren().get(5).getLabel().trim();\n        String mha_fecha = item.getChildren().get(6).getLabel().trim(); \n        String mha_expediente = item.getChildren().get(7).getLabel().trim(); \n        String mha_fecha_vto = item.getChildren().get(8).getLabel().trim();\n        String mha_fecha_pago = item.getChildren().get(9).getLabel().trim();\n        String mha_fecha_inspec = item.getChildren().get(10).getLabel().trim();\n        String mha_habilitado = item.getChildren().get(11).getLabel().trim(); \n        String mha_oblea_entregada = item.getChildren().get(12).getLabel().trim();\n        String rev_apellido = item.getChildren().get(13).getLabel().trim();\n        String mha_activo = item.getChildren().get(14).getLabel().trim();\n        \n        \n        //FECHA ( Convertir las cadenas de fecha a objetos Date )\n    \tSimpleDateFormat dateFormat = new SimpleDateFormat(\"dd/MM/yyyy\");\n        \n        Date fecha;\n        Date fecha_vto;\n        Date fecha_pago;\n        Date fecha_inspec;\n        \n        fecha = dateFormat.parse(mha_fecha);\n        fecha_vto = dateFormat.parse(mha_fecha_vto);\n        fecha_pago = dateFormat.parse(mha_fecha_pago);\n        fecha_inspec = dateFormat.parse(mha_fecha_inspec);\n        \n        //Cargar Datos en los componentes de la grilla\n        comp_TXT_mhaPadron.setValue(mha_inm_padron_guardado);\n             \n        //LLAMAR EL EVENTO DEL ONBLUR\n\t\tEvents.sendEvent(comp_TXT_mhaPadron, new Event(\"onBlur\", comp_TXT_mhaPadron));\n        \n        \n        comp_CMB_mhaMedioElev.setValue(mde_ubi_maq);\n        \n        //SELECCIONAR UN MEDIO DE ELEVACIÓN\n        /*Comboitem selectedItem = comp_CMB_mhaMedioElev.getSelectedItem();\n        String selectedEmpId = (String) selectedItem.getValue();\n        int mdeID = Integer.parseInt(selectedEmpId);*/\n       \n        //LLAMAR EL EVENTO ONSELECT\n        Events.sendEvent(comp_CMB_mhaMedioElev, new Event(\"onSelect\", comp_CMB_mhaMedioElev));\n        \n        if (comp_TXT_mhaEmpMant.getValue().equals(\"No tiene Empresa\") && comp_TXT_ID_mhaEmpMant.getValue().equals(\"-\")){\n            \n            comp_TXT_mhaEmpMant_GuardarDato.setValue(emp_razon);\n        \tcomp_TXT_ID_mhaEmpMant_GuardarDato.setValue(emp_id);\n            \n            comp_CMB_mhaEmpMant.setValue(emp_razon);\n            \n            //LLAMAR EL EVENTO ONSELECT DE EMPRESA\n        \tEvents.sendEvent(comp_CMB_mhaEmpMant, new Event(\"onSelect\", comp_CMB_mhaEmpMant));\n            \n        }\n        \n        if (!comp_TXT_mhaEmpMant.getValue().equals(\"No tiene Empresa\") && !comp_TXT_ID_mhaEmpMant.getValue().equals(\"-\")){\n            \n            comp_TXT_mhaEmpMant.setValue(emp_razon);\n        \tcomp_TXT_ID_mhaEmpMant.setValue(emp_id);\n            \n        }\n\n        /*if (comp_TXT_mhaEmpMant_GuardarDato.isVisible() && comp_TXT_ID_mhaEmpMant_GuardarDato.isVisible()) {\n            \n            comp_TXT_mhaEmpMant_GuardarDato.setValue(emp_razon);\n        \tcomp_TXT_ID_mhaEmpMant_GuardarDato.setValue(emp_id);\n            \n        } else if (comp_TXT_ID_mhaEmpMant.isVisible() && comp_TXT_mhaEmpMant.isVisible()) {\n            \n            comp_TXT_mhaEmpMant.setValue(emp_razon);\n        \tcomp_TXT_ID_mhaEmpMant.setValue(emp_id); \n        }*/\n        \n        comp_CMB_mhaTecnico.setValue(per_apellido);\n        comp_DA_mhaFechaHab.setValue(fecha);\n        comp_TXT_mhaExpte.setValue(mha_expediente);\n        comp_DA_mhaFechaVtoHab.setValue(fecha_vto);    \n        comp_DA_mhaFechaPago.setValue(fecha_pago);\n        comp_DA_mhaFechaInspec.setValue(fecha_inspec);\n        \n        if(mha_habilitado.equals(\"SI\")){\n        \tcomp_CHK_mhaHabilitado.setChecked(true);\n        } else{\n            comp_CHK_mhaHabilitado.setChecked(false);\n        }\n        \n        if(mha_oblea_entregada.equals(\"SI\")){\n        \tcomp_CHK_mhaObleaEntreg.setChecked(true);\n        } else{\n            comp_CHK_mhaObleaEntreg.setChecked(false);\n        }\n            \n        comp_CMB_mhaRevisor.setValue(rev_apellido);\n        \n        if (mha_activo.equals(\"SI\")){\n        \tcomp_CHK_mhaActivo.setChecked(true);\n        } else{\n            comp_CHK_mhaActivo.setChecked(false);\n        }\n        \n        comp_BTN_mhaEditar.setLabel(\"Guardar Cambios\");\n        comp_BTN_mhaEditar.setStyle(\"margin-left:25px; background:#008000; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\"); \n        comp_BTN_mhaAgregar.setDisabled(true);\n    \n    }else if (comp_BTN_mhaEditar.getLabel().equals(\"Guardar Cambios\")){\n        \n        //Logica para la fecha\n        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd/MM/yyyy\");\n            \n        Date fecha = comp_DA_mhaFechaHab.getValue();\n        Date fecha_vto = comp_DA_mhaFechaVtoHab.getValue();\n        Date fecha_pago = comp_DA_mhaFechaPago.getValue();\n        Date fecha_inspec = comp_DA_mhaFechaInspec.getValue();\n        \n        /*if(comp_TXT_mhaPadron.getValue().equals(\"-\")){\n    \n            Clients.showNotification(\"Debe ingresar un Padrón.\", \"error\", comp_TXT_mhaPadron, \"\",3100);\n            comp_TXT_mhaPadron.setStyle(comp_TXT_mhaPadron.getStyle() + \"; border-color: red\");    \n\n        }else */if(comp_CMB_mhaMedioElev.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar un Medio de Elevación.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else if(comp_TXT_mhaEmpMant.getValue().equals(\"No tiene Empresa\") && comp_CMB_mhaEmpMant.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar una Empresa de Mantenimiento.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else if(comp_CMB_mhaTecnico.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar un Técnico\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else if(fecha.equals(fecha_vto) || fecha_vto.before(fecha)) {\n\n            Clients.showNotification(\"La Fecha Vencimiento seleccionada no es válida.\", \"error\", comp_DA_mhaFechaVtoHab, \"\", 3100);\n            comp_DA_mhaFechaVtoHab.setStyle(comp_DA_mhaFechaVtoHab.getStyle() + \"; border-color: red;\");\n\n        }else if(comp_TXT_mhaExpte.getValue().equals(\"-\")){\n\n            Clients.showNotification(\"Debe ingresar un Expediente Sayges.\", \"error\", comp_TXT_mhaExpte, \"\",3100);\n            comp_TXT_mhaExpte.setStyle(comp_TXT_mhaExpte.getStyle() + \"; border-color: red\");\n\n        }else if(comp_CMB_mhaRevisor.getValue().equals(\"-\")){\n\n            Messagebox.show(\"Debe seleccionar un Revisor.\", \"Advertencia\", Messagebox.OK, Messagebox.EXCLAMATION);\n\n        }else{\n            \n            cel1.setLabel(comp_TXT_mhaPadron.getValue()); \n            cel1.setParent(item); \n            \n            cel2.setLabel(comp_CMB_mhaMedioElev.getValue()); \n            cel2.setParent(item); \n            \n            if (comp_TXT_mhaEmpMant.getValue().equals(\"No tiene Empresa\") && comp_TXT_ID_mhaEmpMant.getValue().equals(\"-\")){\n            \n                cel3.setLabel(comp_TXT_ID_mhaEmpMant_GuardarDato.getValue()); \n            \tcel3.setParent(item);\n                \n                cel4.setLabel(comp_TXT_mhaEmpMant_GuardarDato.getValue()); \n            \tcel4.setParent(item); \n\n            }\n            \n            if (!comp_TXT_mhaEmpMant.getValue().equals(\"No tiene Empresa\") && !comp_TXT_ID_mhaEmpMant.getValue().equals(\"-\")){\n    \n                cel3.setLabel(comp_TXT_ID_mhaEmpMant.getValue()); \n            \tcel3.setParent(item);\n                \n                cel4.setLabel(comp_TXT_mhaEmpMant.getValue()); \n            \tcel4.setParent(item);\n\n            }\n      \n\n            \n            cel5.setLabel(comp_CMB_mhaTecnico.getValue());\n            cel5.setParent(item);\n   \n            cel6.setLabel(sdf.format(comp_DA_mhaFechaHab.getValue())); \n            cel6.setParent(item);\n            \n            cel7.setLabel(comp_TXT_mhaExpte.getValue());\n            cel7.setParent(item);\n            \n            cel8.setLabel(sdf.format(comp_DA_mhaFechaVtoHab.getValue())); \n            cel8.setParent(item);\n            \n            cel9.setLabel(sdf.format(comp_DA_mhaFechaPago.getValue())); \n            cel9.setParent(item);\n            \n            cel10.setLabel(sdf.format(comp_DA_mhaFechaInspec.getValue())); \n            cel10.setParent(item);\n            \n            if(comp_CHK_mhaHabilitado.isChecked()){\n                cel11.setLabel(\"SI\");\n                cel11.setParent(item);\n            }else{\n                cel11.setLabel(\"NO\");\n               \tcel11.setParent(item); \n            }\n            \n            if(comp_CHK_mhaObleaEntreg.isChecked()){\n                cel12.setLabel(\"SI\");\n                cel12.setParent(item);\n            }else{\n                cel12.setLabel(\"NO\");\n               \tcel12.setParent(item); \n            }\n\n            cel13.setLabel(comp_CMB_mhaRevisor.getValue());\n            cel13.setParent(item);\n\n            if(comp_CHK_mhaActivo.isChecked()){\n                \n                cel14.setLabel(\"SI\");\n                cel14.setParent(item);\n            }else{\n                \n               cel14.setLabel(\"NO\");\n               cel14.setParent(item); \n                \n            }\n            \n            \n            \n            //FORMATEAR FECHAS ANTES DE ENVIAR POR LA API\n            java.text.SimpleDateFormat dateFormatForPut = new java.text.SimpleDateFormat(\"yyyy-MM-dd\");\n            String fecha = dateFormatForPut.format(comp_DA_mhaFechaHab.getValue());\n            String fecha_vto = dateFormatForPut.format(comp_DA_mhaFechaVtoHab.getValue());\n            String fecha_pago = dateFormatForPut.format(comp_DA_mhaFechaPago.getValue());\n            String fecha_inspec = dateFormatForPut.format(comp_DA_mhaFechaInspec.getValue());\n            \n            //CONVERTIR PADRON A INT\n    \t\tint padron = Integer.parseInt(comp_TXT_mhaPadron.getValue().trim());\n            \n            //ACTUALIZAR ID MDE\n            Comboitem selectedItemMDE = comp_CMB_mhaMedioElev.getSelectedItem();\n            String selectedMDE = (String) selectedItemMDE.getValue(); \n            int mde_id = Integer.parseInt(selectedMDE);\n            \n            // Obtener los valores de los componentes\n            String idEmpresaTexto = comp_TXT_ID_mhaEmpMant.getValue().trim();\n            String nombreEmpresaTexto = comp_TXT_mhaEmpMant.getValue().trim();\n            String idEmpresaGuardarTexto = comp_TXT_ID_mhaEmpMant_GuardarDato.getValue().trim();\n            String nombreEmpresaGuardarTexto = comp_TXT_mhaEmpMant_GuardarDato.getValue().trim();\n            \n            //ACTUALIZAR ID EMPRESA\n            int id_empresa;\n            String empresaNombre;\n\n            // Realizar la validación\n            if (!nombreEmpresaTexto.equals(\"No tiene Empresa\") && !idEmpresaTexto.equals(\"-\") && idEmpresaGuardarTexto.equals(\"-\") && nombreEmpresaGuardarTexto.equals(\"-\")) {\n                // Convertir el valor de idEmpresaTexto a entero y usarlo\n                id_empresa = Integer.parseInt(idEmpresaTexto);\n                empresaNombre = nombreEmpresaTexto;\n\n            } else if (nombreEmpresaTexto.equals(\"No tiene Empresa\") && idEmpresaTexto.equals(\"-\") && !idEmpresaGuardarTexto.equals(\"-\") && !nombreEmpresaGuardarTexto.equals(\"-\")) {\n\n                Comboitem selectedItemEM = comp_CMB_mhaEmpMant.getSelectedItem();\n                String selectedPIdEM = (String) selectedItemEM.getValue(); // Obtener el ID seleccionado como cadena\n                id_empresa = Integer.parseInt(selectedPIdEM); // Convertir el ID a entero\n\n                empresaNombre = nombreEmpresaGuardarTexto;\n            }\n            \n            //ACTUALIZAR ID TÉCNICO/PERSONA\t\n            Comboitem selectedItemP = comp_CMB_mhaTecnico.getSelectedItem();\n            String selectedPersona = (String) selectedItemP.getValue(); \n            int per_id = Integer.parseInt(selectedPersona);\n\n            \n            //ACTUALIZAR ID REVISOR\n            Comboitem selectedItemR = comp_CMB_mhaRevisor.getSelectedItem();\n            String selectedRevisor = (String) selectedItemR.getValue(); \n            int revisorID = Integer.parseInt(selectedRevisor);\n            \n            //ID HABILITACON DE MEDIOS DE ELEVACIÓN\n            String mhaID = ((org.zkoss.zul.Listcell) item.getChildren().get(0)).getLabel().trim();\n            int mha_id = Integer.parseInt(mhaID);\n            \n            \n            //try {\n                \n                //MEDIOS DE ELEVACÓN (PUT)\n                java.util.List parametrosfnPutHabilitacionMediosDeElevacion = new java.util.ArrayList();\n                parametrosfnPutHabilitacionMediosDeElevacion.add(mha_id); //mha_id / int\n                parametrosfnPutHabilitacionMediosDeElevacion.add(padron); //mha_inm_padron_guardado / int\n                parametrosfnPutHabilitacionMediosDeElevacion.add(mde_id); //mde_id / int\n                parametrosfnPutHabilitacionMediosDeElevacion.add(id_empresa); //emp_id / int\n                parametrosfnPutHabilitacionMediosDeElevacion.add(per_id); //per_id / int\n                parametrosfnPutHabilitacionMediosDeElevacion.add(fecha); //mha_fecha / String\n                parametrosfnPutHabilitacionMediosDeElevacion.add(comp_TXT_mhaExpte.getValue()); //mha_expediente / String\n                parametrosfnPutHabilitacionMediosDeElevacion.add(fecha_vto); //mha_fecha_vto / String\n                parametrosfnPutHabilitacionMediosDeElevacion.add(fecha_pago); //mha_fecha_pago / String\n                parametrosfnPutHabilitacionMediosDeElevacion.add(fecha_inspec); //mha_fecha_inspec / String\n                parametrosfnPutHabilitacionMediosDeElevacion.add(comp_CHK_mhaHabilitado.isChecked()); //mha_habilitado / Boolean\n                parametrosfnPutHabilitacionMediosDeElevacion.add(comp_CHK_mhaObleaEntreg.isChecked()); //mha_oblea_entregada / Boolean\n                parametrosfnPutHabilitacionMediosDeElevacion.add(revisorID); //rev_id / int\n                parametrosfnPutHabilitacionMediosDeElevacion.add(comp_CHK_mhaActivo.isChecked()); //mha_activo / Boolean\n                new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnPutHabilitacionMediosDeElevacion\",parametrosfnPutHabilitacionMediosDeElevacion);\n                \n            /*}catch (Exception e) {\n                Messagebox.show(\"El servicio de la API PUT de HABILITACIÓN MEDIOS DE ELEVACIÓN NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n            }*/\n            \n            comp_CMB_mhaMedioElev.setValue(\"-\");\n            comp_CMB_mhaTecnico.setValue(\"-\");\n            comp_CMB_mhaRevisor.setValue(\"-\");\n            comp_CMB_mhaEmpMant.setValue(\"-\");\n            comp_CMB_mhaEmpMant.setDisabled(true);\n                \n            comp_TXT_mhaPadron.setValue(\"-\");\t\n            comp_TXT_mhaPadron.setStyle(comp_TXT_mhaPadron.getStyle() + \"; border-color: #606060\");\n            comp_TXT_ID_mhaEmpMant.setValue(\"-\");\t\n            comp_TXT_mhaEmpMant.setValue(\"-\");\t\n            comp_TXT_ID_mhaEmpMant_GuardarDato.setValue(\"-\");\t\n            comp_TXT_mhaEmpMant_GuardarDato.setValue(\"-\");\t\n            comp_TXT_mhaExpte.setValue(\"-\");\t\n            comp_TXT_mhaExpte.setStyle(comp_TXT_mhaExpte.getStyle() + \"; border-color: #606060\");\n                \n            comp_DA_mhaFechaHab.setValue(new java.util.Date());\n            comp_DA_mhaFechaVtoHab.setValue(new java.util.Date());\n            comp_DA_mhaFechaPago.setValue(new java.util.Date());\n            comp_DA_mhaFechaInspec.setValue(new java.util.Date());\n            \n            comp_CHK_mhaHabilitado.setChecked(false);\n            comp_CHK_mhaObleaEntreg.setChecked(false);\n            comp_CHK_mhaActivo.setChecked(true);\t\n            \n            comp_BTN_mhaEditar.setLabel(\"Editar\");\n\t\t\tcomp_BTN_mhaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\n            comp_BTN_mhaAgregar.setDisabled(false);\n            \n        }\n    }   \n}','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mhaCancelar','Cancelar',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:25px;  background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.text.SimpleDateFormat;  \nimport java.util.Date; \nimport java.util.Calendar;\n\nModeloComponente sup = new ModeloComponente();\n\n\n//GRILLA\nListbox comp_GRID_habilitacionesmedios=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesmedios\");\n\n//CMB\nCombobox comp_CMB_mhaMedioElev=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElev\");\nCombobox comp_CMB_mhaTecnico=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaTecnico\");\nCombobox comp_CMB_mhaRevisor=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaRevisor\");\nCombobox comp_CMB_mhaEmpMant=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMant\");\n\n//TXT\nTextbox comp_TXT_mhaPadron=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadron\");\nTextbox comp_TXT_mhaExpte=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaExpte\");\nTextbox comp_TXT_ID_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant\");\nTextbox comp_TXT_mhaEmpMant=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant\");\nTextbox comp_TXT_ID_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_ID_mhaEmpMant_GuardarDato\");\nTextbox comp_TXT_mhaEmpMant_GuardarDato=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaEmpMant_GuardarDato\");\n\n//DATEBOX\nDatebox comp_DA_mhaFechaHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaHab\");\nDatebox comp_DA_mhaFechaVtoHab=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaVtoHab\");\nDatebox comp_DA_mhaFechaPago=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaPago\");\nDatebox comp_DA_mhaFechaInspec=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhaFechaInspec\");\n\n//CHEK\nCheckbox comp_CHK_mhaHabilitado=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaHabilitado\");\nCheckbox comp_CHK_mhaObleaEntreg=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaObleaEntreg\");\nCheckbox comp_CHK_mhaActivo=(Checkbox) sup.getInstanciaComponente(\"comp_CHK_mhaActivo\");\n\n//BTN\nButton comp_BTN_mhaAgregar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaAgregar\");\nButton comp_BTN_mhaEditar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaEditar\");\nButton comp_BTN_mhaCancelar=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaCancelar\");\n\n \n\n/****************************LÓGICA****************************/\n\n\ncomp_CMB_mhaMedioElev.setValue(\"-\");\ncomp_CMB_mhaTecnico.setValue(\"-\");\ncomp_CMB_mhaRevisor.setValue(\"-\");\ncomp_CMB_mhaEmpMant.setValue(\"-\");\n                \ncomp_TXT_mhaPadron.setValue(\"-\");\t\ncomp_TXT_mhaPadron.setStyle(comp_TXT_mhaPadron.getStyle() + \"; border-color: #606060\");\ncomp_TXT_ID_mhaEmpMant.setValue(\"-\");\t\ncomp_TXT_mhaEmpMant.setValue(\"-\");\t\ncomp_TXT_ID_mhaEmpMant_GuardarDato.setValue(\"-\");\t\ncomp_TXT_mhaEmpMant_GuardarDato.setValue(\"-\");\t\ncomp_TXT_mhaExpte.setValue(\"-\");\t\ncomp_TXT_mhaExpte.setStyle(comp_TXT_mhaExpte.getStyle() + \"; border-color: #606060\");\n                \ncomp_DA_mhaFechaHab.setValue(new java.util.Date());\ncomp_DA_mhaFechaVtoHab.setValue(new java.util.Date());\ncomp_DA_mhaFechaPago.setValue(new java.util.Date());\ncomp_DA_mhaFechaInspec.setValue(new java.util.Date());\n            \ncomp_CHK_mhaHabilitado.setChecked(false);\ncomp_CHK_mhaObleaEntreg.setChecked(false);\ncomp_CHK_mhaActivo.setChecked(true);\n    \ncomp_BTN_mhaEditar.setLabel(\"Editar\");\ncomp_BTN_mhaEditar.setStyle(\"margin-left:25px; background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;\");\ncomp_BTN_mhaAgregar.setDisabled(false);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Grilla_HDMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_GRID_habilitacionesmedios','',@vIdDistribucionCells,'Listbox','100','%','130','px','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','height: auto !important;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,4,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,6,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,13,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,22,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,70,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,71,'true','null','1.0') ;
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID_HMDE',0,0,'-1','-',1,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ME (Máquina + Ubicación)',0,0,'-1','-',3,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Empresa',0,0,'-1','-',5,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Fecha Habilitación',0,0,'-1','-',8,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Expediente',0,0,'-1','-',9,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Fecha Vencimiento',0,0,'-1','-',10,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Habilitado (SI/NO)',0,0,'-1','-',13,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Revisor',0,0,'-1','-',15,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Activo',0,0,'-1','-',16,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Técnico',0,0,'-1','-',7,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID_Empresa',0,0,'-1','-',4,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Fecha P.',0,0,'-1','-',11,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Fecha I.',0,0,'-1','-',12,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'Oblea',0,0,'-1','-',14,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO gridcolumnas (COMPONENTES_ID_FK,COLUMNA,ORDENAR,EDICION,W,TIPO,ORDEN,PROCESO,VERSION)   VALUES(@vIdComponentes,'ID_PADRÓN',0,0,'-1','-',2,'ABMCL BD Medios de Elevación','1.0') ;
SET @vIdComponentesGrilla = LAST_INSERT_ID();
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_CL_HMDE','Consulta y Listado de Habilitaciones de Medios de Elevación',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',16,'',8371,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8371,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_ReporteHMDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_ReporteHMDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaOpcReporte','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaOpcReporte','',@vIdDistribucionCells,'Combobox','160','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.Component;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport org.zkoss.zul.Paging;\n\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mhaOpcReporte=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaOpcReporte\");\nDatebox comp_DA_mhadesdeRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhadesdeRep\");\nDatebox comp_DA_mhahastaRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhahastaRep\");\nTextbox comp_TXT_mhaDomInmRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaDomInmRep\");\nButton comp_BTN_mhaBusPadRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaBusPadRep\");\nCombobox comp_CMB_mhaPadEncRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaPadEncRep\");\nTextbox comp_TXT_mhaPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadronRep\");\nCombobox comp_CMB_mhaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMantRep\");\nCombobox comp_CMB_mhaMedioElevRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElevRep\");\nButton comp_BTN_mhaGenRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaGenRep\");\n\n\n\nString opciones = comp_CMB_mhaOpcReporte.getValue().toString();\n\nif(opciones.equals(\"-\")){\n    \n    comp_DA_mhadesdeRep.setDisabled(true);\n    comp_DA_mhahastaRep.setDisabled(true);\n    comp_TXT_mhaDomInmRep.setDisabled(true);\n    comp_BTN_mhaBusPadRep.setDisabled(true);\n    comp_CMB_mhaPadEncRep.setDisabled(true);\n    comp_TXT_mhaPadronRep.setDisabled(true);\n    comp_CMB_mhaEmpMantRep.setDisabled(true);\n    comp_CMB_mhaMedioElevRep.setDisabled(true);\n    \n    comp_DA_mhadesdeRep.setValue(new java.util.Date());\n    comp_DA_mhahastaRep.setValue(new java.util.Date());\n    comp_TXT_mhaDomInmRep.setValue(\"-\");\n    comp_CMB_mhaPadEncRep.setValue(\"-\");\n    comp_TXT_mhaPadronRep.setValue(\"-\");\n    comp_CMB_mhaEmpMantRep.setValue(\"-\");\n    comp_CMB_mhaMedioElevRep.setValue(\"-\");\n    \n    comp_BTN_mhaGenRep.setDisabled(true);\n    \n    \n}\n\nif(opciones.equals(\"Desde Fecha Vigencia\")){\n    \n    comp_DA_mhadesdeRep.setDisabled(false);\n    comp_DA_mhahastaRep.setDisabled(true);\n    comp_TXT_mhaDomInmRep.setDisabled(true);\n    comp_BTN_mhaBusPadRep.setDisabled(true);\n    comp_CMB_mhaPadEncRep.setDisabled(true);\n    comp_TXT_mhaPadronRep.setDisabled(true);\n    comp_CMB_mhaEmpMantRep.setDisabled(true);\n    comp_CMB_mhaMedioElevRep.setDisabled(true);\n    \n    comp_DA_mhahastaRep.setValue(new java.util.Date());\n    comp_TXT_mhaDomInmRep.setValue(\"-\");\n    comp_CMB_mhaPadEncRep.setValue(\"-\");\n    comp_TXT_mhaPadronRep.setValue(\"-\");\n    comp_CMB_mhaEmpMantRep.setValue(\"-\");\n    comp_CMB_mhaMedioElevRep.setValue(\"-\");\n    \n    comp_BTN_mhaGenRep.setDisabled(false);\n    \n}else if(opciones.equals(\"Hasta Fecha Vigencia\")){\n    \n    comp_DA_mhadesdeRep.setDisabled(true);\n    comp_DA_mhahastaRep.setDisabled(false);\n    comp_TXT_mhaDomInmRep.setDisabled(true);\n    comp_BTN_mhaBusPadRep.setDisabled(true);\n    comp_CMB_mhaPadEncRep.setDisabled(true);\n    comp_TXT_mhaPadronRep.setDisabled(true);\n    comp_CMB_mhaEmpMantRep.setDisabled(true);\n    comp_CMB_mhaMedioElevRep.setDisabled(true);\n    \n    comp_DA_mhadesdeRep.setValue(new java.util.Date());\n    comp_TXT_mhaDomInmRep.setValue(\"-\");\n    comp_CMB_mhaPadEncRep.setValue(\"-\");\n    comp_TXT_mhaPadronRep.setValue(\"-\");\n    comp_CMB_mhaEmpMantRep.setValue(\"-\");\n    comp_CMB_mhaMedioElevRep.setValue(\"-\");\n    \n    comp_BTN_mhaGenRep.setDisabled(false);\n    \n\n}else if(opciones.equals(\"De Padrón\")){\n    \n    comp_DA_mhadesdeRep.setDisabled(true);\n    comp_DA_mhahastaRep.setDisabled(true);\n    comp_TXT_mhaDomInmRep.setDisabled(false);\n    comp_BTN_mhaBusPadRep.setDisabled(false);\n    comp_CMB_mhaPadEncRep.setDisabled(false);\n    comp_TXT_mhaPadronRep.setDisabled(false);\n    comp_CMB_mhaEmpMantRep.setDisabled(true);\n    comp_CMB_mhaMedioElevRep.setDisabled(true);\n    \n    comp_DA_mhadesdeRep.setValue(new java.util.Date());\n    comp_DA_mhahastaRep.setValue(new java.util.Date());\n    comp_CMB_mhaEmpMantRep.setValue(\"-\");\n    comp_CMB_mhaMedioElevRep.setValue(\"-\");\n    \n    comp_BTN_mhaGenRep.setDisabled(false);\n    \n    \n}else if(opciones.equals(\"De empresa\")){\n    \n    comp_DA_mhadesdeRep.setDisabled(true);\n    comp_DA_mhahastaRep.setDisabled(true);\n    comp_TXT_mhaDomInmRep.setDisabled(true);\n    comp_BTN_mhaBusPadRep.setDisabled(true);\n    comp_CMB_mhaPadEncRep.setDisabled(true);\n    comp_TXT_mhaPadronRep.setDisabled(true);\n    comp_CMB_mhaEmpMantRep.setDisabled(false);\n    comp_CMB_mhaMedioElevRep.setDisabled(true);\n    \n    comp_DA_mhadesdeRep.setValue(new java.util.Date());\n    comp_DA_mhahastaRep.setValue(new java.util.Date());\n    comp_TXT_mhaDomInmRep.setValue(\"-\");\n    comp_CMB_mhaPadEncRep.setValue(\"-\");\n    comp_TXT_mhaPadronRep.setValue(\"-\");\n    comp_CMB_mhaMedioElevRep.setValue(\"-\");\n    \n    comp_BTN_mhaGenRep.setDisabled(false);\n    \n    \n    \n}else if(opciones.equals(\"De Medio de Elevación\")){\n\n    comp_DA_mhadesdeRep.setDisabled(true);\n    comp_DA_mhahastaRep.setDisabled(true);\n    comp_TXT_mhaDomInmRep.setDisabled(true);\n    comp_BTN_mhaBusPadRep.setDisabled(true);\n    comp_CMB_mhaPadEncRep.setDisabled(true);\n    comp_TXT_mhaPadronRep.setDisabled(true);\n    comp_CMB_mhaEmpMantRep.setDisabled(true);\n    comp_CMB_mhaMedioElevRep.setDisabled(false);\n    \n    comp_DA_mhadesdeRep.setValue(new java.util.Date());\n    comp_DA_mhahastaRep.setValue(new java.util.Date());\n    comp_TXT_mhaDomInmRep.setValue(\"-\");\n    comp_CMB_mhaPadEncRep.setValue(\"-\");\n    comp_TXT_mhaPadronRep.setValue(\"-\");\n    comp_CMB_mhaEmpMantRep.setValue(\"-\");\n    \n    comp_BTN_mhaGenRep.setDisabled(false);\n}\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Desde Fecha Vigencia','Desde Fecha Vigencia',1,1,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Hasta Fecha Vigencia','Hasta Fecha Vigencia',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'De empresa','De empresa',1,4,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'De Padrón','De Padrón',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'De Medio de Elevación','De Medio de Elevación',1,5,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaHMDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_DomicilioI_HMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaDomInmRep','Domicilio Inmueble:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mhaDomInmRep','',@vIdDistribucionCells,'Textbox','300','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_BuscarP_HMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mhaBusPadRep','Buscar Padrón/es',@vIdDistribucionCells,'Button','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport java.util.*;\n\nModeloComponente sup = new ModeloComponente();\n\n\nTextbox comp_TXT_mhaDomInmRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaDomInmRep\");\nButton comp_BTN_mhaBusPadRep=(Button) sup.getInstanciaComponente(\"comp_BTN_mhaBusPadRep\");\nCombobox comp_CMB_mhaPadEncRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaPadEncRep\");\nTextbox comp_TXT_mhaPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadronRep\");\n\nListbox comp_GRID_habilitacionesmedios=(Listbox) sup.getInstanciaComponente(\"comp_GRID_habilitacionesmedios\");\nListbox comp_GRID_inmuebles=(Listbox) sup.getInstanciaComponente(\"comp_GRID_inmuebles\");\n\n\n\n// Obtener el valor ingresado en el Textbox\nString padronIngresado = comp_TXT_mhaPadron.getValue().trim();\n\n// Bandera para saber si encontramos el padrón\nboolean padronEncontrado = false;\n\n// Recorrer todos los elementos de la grilla\nfor (Listitem item : comp_GRID_inmuebles.getItems()) {\n\n     //Listcell cellPadron = (Listcell) item.getChildren().get(3);\n     Listcell cellDomicilio = (Listcell) item.getChildren().get(2); // celda del domicilio\n\n    String padron = cellPadron.getLabel().trim();\n\n    if (padron.equals(padronIngresado)) {\n        // El padrón ingresado coincide con uno en la grilla\n        padronEncontrado = true;\n        // Obtener el padron como entero\n        int padronInt = Integer.parseInt(padronIngresado);\n        \n        // Salir del bucle ya que encontramos el padrón\n        break;\n    }\n}\n\n// Si el padrón no se encontró, mostrar mensaje de error\nif (!padronEncontrado) {\n\n    Messagebox.show(\"No se encontro un Padrón relacionado con un Medio de Elevación.\", \"Error\", Messagebox.OK, Messagebox.ERROR);\n    comp_TXT_mhaPadron.setValue(\"-\");\n    comp_TXT_mde_IDinmueble.setValue(\"-\");\n}\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaPadEncRep','',@vIdDistribucionCells,'Combobox','250','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_PadronM_HMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',4,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaPadronRep','Padrón Municipal:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_mhaPadronRep','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteHMDE',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',6,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteHMDE',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_mhaGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nDatebox comp_DA_mhadesdeRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhadesdeRep\");\nDatebox comp_DA_mhahastaRep=(Datebox) sup.getInstanciaComponente(\"comp_DA_mhahastaRep\");\n\nCombobox comp_CMB_mhaMedioElevRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElevRep\");\nCombobox comp_CMB_mhaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMantRep\");\nTextbox comp_TXT_mhaPadronRep=(Textbox) sup.getInstanciaComponente(\"comp_TXT_mhaPadronRep\");\n\nSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\nString desde = \"-\";\nString hasta = \"-\";\n\nif (!comp_DA_mhadesdeRep.isDisabled()) {\n    desde = sdf.format(comp_DA_mhadesdeRep.getValue());\n}\n\nif (!comp_DA_mhahastaRep.isDisabled()) {\n    hasta = sdf.format(comp_DA_mhahastaRep.getValue());\n}\n\nMap valorVariablesReportes = new java.util.HashMap();\n\nvalorVariablesReportes.put(\"prutaImagen\", \"/opt/archivos_VU/ticket/logo_escudo.png\");\nvalorVariablesReportes.put(\"p_fecha_desde\", desde);\nvalorVariablesReportes.put(\"p_fecha_hasta\", hasta);\nvalorVariablesReportes.put(\"p_tipoMaquina\", comp_CMB_mhaMedioElevRep.getSelectedItem().getValue().toString());\nvalorVariablesReportes.put(\"p_maquinaName\", comp_CMB_mhaMedioElevRep.getSelectedItem().getLabel());\nvalorVariablesReportes.put(\"p_padronNum\", comp_TXT_mhaPadronRep.getValue());\nvalorVariablesReportes.put(\"p_empresa\", comp_CMB_mhaEmpMantRep.getSelectedItem().getValue().toString());\nvalorVariablesReportes.put(\"p_empresaName\", comp_CMB_mhaEmpMantRep.getSelectedItem().getLabel());\n  \n//Función reporte\nList parametrosfnImprimirSelReporte = new java.util.ArrayList();\nparametrosfnImprimirSelReporte.add(valorVariablesReportes); //valorVariablesReportes / java.util.Map //cargar nombre de reporte\nparametrosfnImprimirSelReporte.add(\"MedioElevacion.jrxml\"); //reporte / String (ya debe estar previamente cargado en Roles y Tareas para que funcione)\nnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnImprimirSelReporte\",parametrosfnImprimirSelReporte);\norg.zkoss.util.media.AMedia return13reporteF=(org.zkoss.util.media.AMedia) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return13reporteF\");\n\n\n\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaHMDE2',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',5,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_EmpresaM_HMDE2',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaEmpMantRep','Empresa de Mantenimiento:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaEmpMantRep','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport java.util.Calendar;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mhaEmpMantRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaEmpMantRep\");  \n\n        try {\n\n            comp_CMB_mhaEmpMantRep.getItems().clear();\n            //EMPRESA DE MANTENIMIENTO (GET)\n            java.util.List parametrosfnGetEmpresaMantenimiento = new java.util.ArrayList();\n            new modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetEmpresaMantenimiento\",parametrosfnGetEmpresaMantenimiento);\n            Map return78map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return78map\");\n\t\t\t\n            Comboitem item = new Comboitem();                \n                item.setLabel(\"-\");\n                item.setValue(\"-\");\n                item.setParent(comp_CMB_mhaEmpMantRep);\n            \n            for (int i = 0; i < return78map.get(\"empresas\").size(); i++){\n\n                String id = return78map.get(\"empresas\").get(i).get(\"emp_id\").toString(); \n                String razonS = return78map.get(\"empresas\").get(i).get(\"emp_razon\").toString();\n                \n                Comboitem item = new Comboitem();                \n                item.setLabel(razonS);\n                item.setValue(id);\n                item.setParent(comp_CMB_mhaEmpMantRep);\n            }\n            \n        } catch (Exception e) {\n            Messagebox.show(\"El servicio de la API GET de EMPRESA DE MANTENIMIENTO NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n        }','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_MDE_HDME2',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaMedioElevRep','Medios de Elevación:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_mhaMedioElevRep','',@vIdDistribucionCells,'Combobox','280','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,2,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mhaMedioElevRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElevRep\");\n\ntry {\n        comp_CMB_mhaMedioElevRep.getItems().clear();\n\n      \tjava.util.List parametrosfnGetTipoMaquina = new java.util.ArrayList();\n\t\tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetTipoMaquina\",parametrosfnGetTipoMaquina);\n\t\tMap return84map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return84map\");\n\n        Comboitem item = new Comboitem();                \n        item.setLabel(\"-\");\n        item.setValue(\"-\");\n        item.setParent(comp_CMB_mhaMedioElevRep);\n\n        for (int i = 0; i < return89map.get(\"tipoMaquinas\").size(); i++){\n            \n            String id_dis = return89map.get(\"tipoMaquinas\").get(i).get(\"tma_id\").toString(); \n            String name_dis =  return89map.get(\"tipoMaquinas\").get(i).get(\"tma_detalle\").toString();\n\n        \n            Comboitem item = new Comboitem();                \n            item.setLabel(name_dis);\n            item.setValue(id_dis);\n            item.setParent(comp_CMB_mhaMedioElevRep);\n        }\n\n    } \n    catch (Exception e) \n    {\n        Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,3,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\nCombobox comp_CMB_mhaMedioElevRep=(Combobox) sup.getInstanciaComponente(\"comp_CMB_mhaMedioElevRep\");\n\ntry {\n        comp_CMB_mhaMedioElevRep.getItems().clear();\n\n      \tjava.util.List parametrosfnGetTipoMaquina = new java.util.ArrayList();\n\t\tnew modelos.builder.eventos.ModeloEventos().ejecutarFuncion(\"fnGetTipoMaquina\",parametrosfnGetTipoMaquina);\n\t\tMap return84map=(Map) ((org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winBuilder\")).getAttribute(\"return84map\");\n\n        Comboitem item = new Comboitem();                \n        item.setLabel(\"-\");\n        item.setValue(\"-\");\n        item.setParent(comp_CMB_mhaMedioElevRep);\n\t\t\n        for (int i = 0; i < return84map.get(\"tipoMaquinas\").size(); i++){\n            \n            String id_dis = return84map.get(\"tipoMaquinas\").get(i).get(\"tma_cod\").toString(); \n            String name_dis =  return84map.get(\"tipoMaquinas\").get(i).get(\"tma_detalle\").toString();\n\n        \n            Comboitem item = new Comboitem();                \n            item.setLabel(name_dis);\n            item.setValue(id_dis);\n            item.setParent(comp_CMB_mhaMedioElevRep);\n        }\n\n    } \n    catch (Exception e) \n    {\n        Messagebox.show(\"El servicio de la API GET de INMUEBLES NO está disponible. Por favor intente más tarde o comuníquese con el área técnica.\",\"Advertencia\",null,null,null);\n    }\n\n','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_HMDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_HMDE',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhaFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_filtros_Fechas_HMDE',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_HastaFechaVigencia_HDME',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhahastaRep','Hasta Fecha Vigencia:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:13px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nimport org.zkoss.zk.ui.util.Clients;\nimport org.bonitasoft.engine.bpm.flownode.ActivityInstance;\nimport org.bonitasoft.engine.bpm.flownode.ArchivedActivityInstance;\nimport java.util.*;\nimport org.zkoss.util.media.AMedia;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nModeloComponente sup = new ModeloComponente();\n\norg.zkoss.zul.Datebox comp_DA_desde=(org.zkoss.zul.Datebox) new  modelos.builder.componentes.ModeloComponente().getInstanciaComponente(\"comp_DA_desde\");\nMessagebox.show(comp_DA_desde.getValue());','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_mhahastaRep','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_DesdeFechaVigencia_HDME',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_mhadesdeRep','Desde Fecha Vigencia:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left: 1px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_mhadesdeRep','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left: 6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_Trazabilidad','Trazabilidad',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',17,'',8372,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8372,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Opciones_Trazabilidad',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',1,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Opciones_Trazabilidad',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_trzOpcReporte','Opciones de Reportes:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_trzOpcReporte','',@vIdDistribucionCells,'Combobox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Desde Fecha','Desde Fecha',1,1,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Hasta Fecha','Hasta Fecha',1,2,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'De usuario','De usuario',1,3,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'De IP','De IP',1,4,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Filtros_BusquedaTrazabilidad',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',3,'padding-top:2px; margin-top: 25px;','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Usuario',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',3,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_trzUsuarioRep','Usuario:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:14px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_CMB_trzUsuarioRep','',@vIdDistribucionCells,'Combobox','180','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background-color: white; ','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,15,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,19,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,30,'false','null','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'Usuario','Usuario',1,0,0,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO itemscombo (COMPONENTES_ID_FK, ITEM,VALOR,ACTIVO,ORDEN,DEFAULT1,ID_PADRE,PROCESO,VERSION)   VALUES(@vIdComponentes,'-','-',1,0,1,-1,'ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_DesdeFecha',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',1,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_trzDdeFechaRep','Desde Fecha:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:1px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DATE_trzDdeFechaRep','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no past,no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_HastaFecha',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',2,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_trzHtaFechaRep','Hasta Fecha:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:13px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_DA_trzHtaFechaRep','',@vIdDistribucionCells,'Datebox','120','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','margin-left:6px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'dd/MM/yyyy','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,7,'no past,no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,16,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,26,'true','null','1.0') ;
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_IP',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',4,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_trzIPRep','IP:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_TXT_trzIPRep','',@vIdDistribucionCells,'Textbox','150','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,8,'no empty','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,10,'-','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,12,'false','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,20,'true','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Generar_ReporteTRZ',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',4,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Generar_ReporteTRZ',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_trzGenRep','Generar Reporte',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','background:#0097A9; color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,77,'0','null','1.0') ;
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_labelBuscar_Trazabilidad',@vIdContenedor,'Hbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',2,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_labelBuscar_Trazabilidad',@vIdDistribucion,'left','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_LA_trzFiltros','Filtros de Búsqueda:',@vIdDistribucionCells,'Label','100','%','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','font-weight: bold;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,24,'true','null','1.0') ;
INSERT INTO contenedores (NOMBRE,TITULO,FORMULARIOS_ID_FK,TIPO,W,W_M,H,H_M,MOLD,OPEN,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,ID_INSTANCIA,CODIGO)  VALUES('cont_Botones','Botones',@vIdFormulario,'Groupbox','100','%','0','%','3d',1,1,'ABMCL BD Medios de Elevación','1.0',18,'',8373,'null' );
SET @vIdContenedor = LAST_INSERT_ID();
UPDATE contenedores   SET ID_INSTANCIA= @vIdContenedor WHERE ID=@vIdContenedor;
INSERT INTO contenedores_equivalencia (ID_ORIGEN,PROCESO_ORIGEN,VERSION_ORIGEN,ID_DESTINO,PROCESO_DESTINO,VERSION_DESTINO,ID_INSTANCIA)   VALUES(8373,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor,'ABMCL BD Medios de Elevación','1.0',@vIdContenedor);
INSERT INTO distribucion (NOMBRE,CONTENEDORES_ID_FK,TIPO,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,SPACING,PACK)   VALUES('dis_Botones',@vIdContenedor,'Vbox','left','99','%','15','px',1,'ABMCL BD Medios de Elevación','1.0',0,'padding-top:2px','1px','left') ;
SET @vIdDistribucion = LAST_INSERT_ID();
INSERT INTO distribucion_cells (NOMBRE,DISTRIBUCION_ID_FK,ALIGN,W,W_M,H,H_M,ACTIVO,PROCESO,VERSION,ORDEN,STYLE,HABWI,HABHI)   VALUES('cell_Botones',@vIdDistribucion,'center','99','%','99','%',1,'ABMCL BD Medios de Elevación','1.0',0,'',0,0);
SET @vIdDistribucionCells = LAST_INSERT_ID();
INSERT INTO componentes (NOMBRE,TITULO,DISTRIBUCION_ID_FK,TIPO,W,W_M,H,H_M,VARIABLE_ID,ACTIVO,PROCESO,VERSION,ORDEN,TIPO_VARIABLE,PARAMETRO_REPORTE,STYLE,VARIABLE_XML)   VALUES('comp_BTN_salir','Salir',@vIdDistribucionCells,'Button','200','px','100','%','-',1,'ABMCL BD Medios de Elevación','1.0',39,'-','-','color: white; letter-spacing: 1px; text-shadow: none;margin-bottom: 25px; margin-top:25px;','') ;
SET @vIdComponentes = LAST_INSERT_ID();
INSERT INTO eventos (COMPONENTES_ID_FK,TIPOEVENTOS_ID_FK,CODIGO,PROCESO,VERSION)   VALUES(@vIdComponentes,1,'import org.zkoss.zul.*;\nimport modelos.builder.componentes.*;\nModeloComponente sup = new ModeloComponente();\n\norg.zkoss.zul.Window w = (org.zkoss.zul.Window) org.zkoss.zk.ui.Executions.getCurrent().getDesktop().getAttribute(\"winProceso\");\norg.zkoss.zk.ui.event.Event closeEvent = new org.zkoss.zk.ui.event.Event(\"onClose\", w, null);\norg.zkoss.zk.ui.event.Events.postEvent(closeEvent);','ABMCL BD Medios de Elevación','1.0') ;
INSERT INTO componentes_propiedades (COMPONENTES_ID_FK,TIPOCOMPONENTES_PROPIEDADES_ID_FK,VALOR_PROPIEDAD,PROCESO,VERSION)   VALUES(@vIdComponentes,23,'true','null','1.0') ;